[{"title":"carta-frontend","type":0,"sectionRef":"#","url":"/carta-frontend/api","content":"carta-frontend Table of Contents​ Components Components - Dialogs Components - Shared Models Services Stores Utilities Changelog","keywords":""},{"title":"carta-frontend/components","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components","content":"carta-frontend/components Index Classes AnimatorComponentCatalogOverlayComponentCatalogOverlayPlotSettingsPanelComponentCatalogPlotComponentCursorInfoComponentFileInfoComponentFloatingWidgetComponentFloatingWidgetManagerComponentFontHelpDrawerComponentHistogramComponentHistogramSettingsPanelComponentImageViewComponentImageViewSettingsPanelComponentLayerListComponentLayerListSettingsPanelComponentLogComponentPlaceholderComponentPvGeneratorComponentPvPreviewComponentRegionListComponentRegionWcsCenterRenderConfigComponentRenderConfigSettingsPanelComponentRootMenuComponentSpatialProfilerComponentSpatialProfilerSettingsPanelComponentSpectralLineQueryComponentSpectralProfilerComponentSpectralProfilerSettingsPanelComponentSpectralProfilerToolbarComponentSplashScreenComponentStatsComponentStokesAnalysisComponentStokesAnalysisSettingsPanelComponentToolbarMenuComponentUIControllerComponent Enumerations FileInfoTypeHistogramSettingsTabsImageViewLayerSpatialProfilerSettingsTabsSpectralProfilerSettingsTabsStokesAnalysisSettingsTabs Functions getImageViewCanvasgetPanelCanvas Variables renderFont Variables constrenderFont renderFont: ItemRenderer&lt;Font&gt; = ...","keywords":""},{"title":"AnimatorComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/AnimatorComponent","content":"AnimatorComponent Hierarchy unknown&lt;WidgetProps&gt; AnimatorComponent Index Constructors constructor Properties heightnumericInputTypewidth Accessors WIDGET_CONFIG Methods onAnimationModeChangedonChannelChangedonFirstClickedonFrameChangedonLastClickedonNextClickedonNumericInputTypeChangeonPrevClickedonRangeChangedonResizeonStokesChangedrender Constructors constructor new AnimatorComponent(props: any): AnimatorComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: any Returns AnimatorComponent Properties height height: number numericInputType numericInputType: NumericInputType width width: number Accessors publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods onAnimationModeChanged onAnimationModeChanged(event: FormEvent&lt;HTMLInputElement&gt;): void Parameters event: FormEvent&lt;HTMLInputElement&gt; Returns void onChannelChanged onChannelChanged(val: number): void Parameters val: number Returns void onFirstClicked onFirstClicked(): void Returns void onFrameChanged onFrameChanged(val: number): void Parameters val: number Returns void onLastClicked onLastClicked(): void Returns void onNextClicked onNextClicked(): void Returns void onNumericInputTypeChange onNumericInputTypeChange(type: NumericInputType): void Parameters type: NumericInputType Returns void onPrevClicked onPrevClicked(): void Returns void onRangeChanged onRangeChanged(range: NumberRange): void Parameters range: NumberRange Returns void onResize onResize(width: number, height: number): void Parameters width: number height: number Returns void onStokesChanged onStokesChanged(val: number): void Parameters val: number Returns void publicrender render(): any Returns any","keywords":""},{"title":"CatalogOverlayComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/CatalogOverlayComponent","content":"CatalogOverlayComponent Hierarchy unknown&lt;WidgetProps&gt; CatalogOverlayComponent Index Constructors constructor Properties catalogTableRefheightwidthaxisDataType Accessors axisOptioncatalogDataInfocatalogFileIdenablePlotButtonprofileStorewidgetStorexAxisLableyAxisLableWIDGET_CONFIG Methods handleCatalogFileChangehandleFileCloseClickonControlHeaderTableRefrenderscrollToRegion Constructors constructor new CatalogOverlayComponent(props: WidgetProps): CatalogOverlayComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: WidgetProps Returns CatalogOverlayComponent Properties catalogTableRef catalogTableRef: Table = undefined height height: number width width: number staticreadonlyaxisDataType axisDataType: any[] = ... Accessors axisOption get axisOption(): any[] Returns any[] catalogDataInfo get catalogDataInfo(): { dataset: Map&lt;number, ProcessedColumnData&gt;; numVisibleRows: number } Returns { dataset: Map&lt;number, ProcessedColumnData&gt;; numVisibleRows: number } dataset: Map&lt;number, ProcessedColumnData&gt; numVisibleRows: number catalogFileId get catalogFileId(): number Returns number enablePlotButton get enablePlotButton(): boolean Returns boolean profileStore get profileStore(): CatalogProfileStore | CatalogOnlineQueryProfileStore Returns CatalogProfileStore | CatalogOnlineQueryProfileStore widgetStore get widgetStore(): CatalogWidgetStore Returns CatalogWidgetStore xAxisLable get xAxisLable(): CatalogOverlay Returns CatalogOverlay yAxisLable get yAxisLable(): CatalogOverlay Returns CatalogOverlay publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods handleCatalogFileChange handleCatalogFileChange(fileId: number): void Parameters fileId: number Returns void handleFileCloseClick handleFileCloseClick(): void Returns void onControlHeaderTableRef onControlHeaderTableRef(ref: any): void Parameters ref: any Returns void publicrender render(): any Returns any scrollToRegion scrollToRegion(ref: any, region: any): void Parameters ref: any region: any Returns void","keywords":""},{"title":"CatalogOverlayPlotSettingsPanelComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/CatalogOverlayPlotSettingsPanelComponent","content":"CatalogOverlayPlotSettingsPanelComponent Hierarchy unknown&lt;WidgetProps&gt; CatalogOverlayPlotSettingsPanelComponent Index Constructors constructor Accessors axisOptioncatalogFileIdprofileStorewidgetStoreWIDGET_CONFIG Methods handleCatalogFileChangerender Constructors constructor new CatalogOverlayPlotSettingsPanelComponent(props: WidgetProps): CatalogOverlayPlotSettingsPanelComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: WidgetProps Returns CatalogOverlayPlotSettingsPanelComponent Accessors axisOption get axisOption(): any[] Returns any[] catalogFileId get catalogFileId(): number Returns number profileStore get profileStore(): CatalogProfileStore | CatalogOnlineQueryProfileStore Returns CatalogProfileStore | CatalogOnlineQueryProfileStore widgetStore get widgetStore(): CatalogWidgetStore Returns CatalogWidgetStore publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods handleCatalogFileChange handleCatalogFileChange(fileId: number): void Parameters fileId: number Returns void publicrender render(): any Returns any","keywords":""},{"title":"CursorInfoComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/CursorInfoComponent","content":"CursorInfoComponent Hierarchy unknown&lt;WidgetProps&gt; CursorInfoComponent Index Constructors constructor Properties heightwidth Accessors WIDGET_CONFIG Methods render Constructors constructor new CursorInfoComponent(props: any): CursorInfoComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: any Returns CursorInfoComponent Properties height height: number = 0 width width: number = 0 Accessors publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods render render(): any Returns any","keywords":""},{"title":"CatalogPlotComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/CatalogPlotComponent","content":"CatalogPlotComponent Hierarchy unknown&lt;WidgetProps&gt; CatalogPlotComponent Index Constructors constructor Properties catalogFileIdcomponentIdheightprofileIdwidth Accessors catalogWidgetStoreenablePlotButtongenProfilerInfohistogramDatainitHistogramXBorderinitScatterBordernumBinsXprofileStorescatterDatawidgetStoreWIDGET_CONFIG Methods handleCatalogFileChangerender Constructors constructor new CatalogPlotComponent(props: WidgetProps): CatalogPlotComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: WidgetProps Returns CatalogPlotComponent Properties catalogFileId catalogFileId: number componentId componentId: string height height: number profileId profileId: string width width: number Accessors catalogWidgetStore get catalogWidgetStore(): CatalogWidgetStore Returns CatalogWidgetStore enablePlotButton get enablePlotButton(): boolean Returns boolean genProfilerInfo get genProfilerInfo(): string Returns string histogramData get histogramData(): { border: XBorder; data: Data[] } Returns { border: XBorder; data: Data[] } border: XBorder data: Data[] initHistogramXBorder get initHistogramXBorder(): XBorder Returns XBorder initScatterBorder get initScatterBorder(): Border Returns Border numBinsX get numBinsX(): number Returns number profileStore get profileStore(): CatalogProfileStore | CatalogOnlineQueryProfileStore Returns CatalogProfileStore | CatalogOnlineQueryProfileStore scatterData get scatterData(): { border: Border; data: Data[] } Returns { border: Border; data: Data[] } border: Border data: Data[] widgetStore get widgetStore(): CatalogPlotWidgetStore Returns CatalogPlotWidgetStore publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods handleCatalogFileChange handleCatalogFileChange(fileId: number): void Parameters fileId: number Returns void publicrender render(): any Returns any","keywords":""},{"title":"FloatingWidgetComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/FloatingWidgetComponent","content":"FloatingWidgetComponent Hierarchy unknown&lt;FloatingWidgetComponentProps&gt; FloatingWidgetComponent Index Constructors constructor Methods componentDidMountcomponentDidUpdaterenderupdateDragSource Constructors constructor new FloatingWidgetComponent(): FloatingWidgetComponent Inherited from React.Component&lt;FloatingWidgetComponentProps&gt;.constructor Returns FloatingWidgetComponent Methods componentDidMount componentDidMount(): void Returns void componentDidUpdate componentDidUpdate(): void Returns void publicrender render(): any Returns any updateDragSource updateDragSource(): void Returns void","keywords":""},{"title":"FileInfoComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/FileInfoComponent","content":"FileInfoComponent Hierarchy unknown&lt;{ HDUOptions?: { HDUList: IOptionProps[]; handleSelectedHDUChange: (hdu: string) =&gt; void }; catalogFileInfo: CARTA.ICatalogFileInfo; catalogHeaderTable?: SimpleTableComponentProps; errorMessage: string; fileInfoExtended: CARTA.IFileInfoExtended; handleTabChange: (tab: TabId) =&gt; void; infoTypes: FileInfoType[]; isLoading: boolean; regionFileInfo: string; selectedFile?: CARTA.IFileInfo | CARTA.ICatalogFileInfo; selectedTab: TabId }&gt; FileInfoComponent Index Constructors constructor Properties isMouseEnteredmatchedItersearchString Methods addMatchedIteraddMatchedTotalinitMatchedIterminusMatchedIteronMouseEnteronMouseLeaverenderresetMatchedIterresetSearchStringsetSearchString Constructors constructor new FileInfoComponent(props: any): FileInfoComponent Overrides React.Component&lt;{ infoTypes: FileInfoType[]; HDUOptions?: {HDUList: IOptionProps[]; handleSelectedHDUChange: (hdu: string) =&gt; void}; fileInfoExtended: CARTA.IFileInfoExtended; regionFileInfo: string; catalogFileInfo: CARTA.ICatalogFileInfo; selectedTab: TabId; handleTabChange: (tab: TabId) =&gt; void; isLoading: boolean; errorMessage: string; catalogHeaderTable?: SimpleTableComponentProps; selectedFile?: CARTA.IFileInfo | CARTA.ICatalogFileInfo; }&gt;.constructor Parameters props: any Returns FileInfoComponent Properties isMouseEntered isMouseEntered: boolean = false matchedIter matchedIter: number = 0 searchString searchString: string = &quot;&quot; Methods addMatchedIter addMatchedIter(): void Returns void addMatchedTotal addMatchedTotal(inputNum: number): void Parameters inputNum: number Returns void initMatchedIter initMatchedIter(): void Returns void minusMatchedIter minusMatchedIter(): void Returns void onMouseEnter onMouseEnter(): void Returns void onMouseLeave onMouseLeave(): void Returns void render render(): any Returns any resetMatchedIter resetMatchedIter(): void Returns void resetSearchString resetSearchString(): void Returns void setSearchString setSearchString(inputSearchString: string): void Parameters inputSearchString: string Returns void","keywords":""},{"title":"Font","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/Font","content":"Font Index Constructors constructor Properties familyidnamestyleweight Constructors constructor new Font(name: string, id: number): Font Parameters name: string id: number Returns Font Properties family family: string id id: number name name: string style style: string weight weight: number","keywords":""},{"title":"FloatingWidgetManagerComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/FloatingWidgetManagerComponent","content":"FloatingWidgetManagerComponent Hierarchy unknown FloatingWidgetManagerComponent Index Constructors constructor Methods onFloatingWidgetClosedonFloatingWidgetSelectedrender Constructors constructor new FloatingWidgetManagerComponent(): FloatingWidgetManagerComponent Inherited from React.Component.constructor Returns FloatingWidgetManagerComponent Methods onFloatingWidgetClosed onFloatingWidgetClosed(widget: WidgetConfig): void Parameters widget: WidgetConfig Returns void onFloatingWidgetSelected onFloatingWidgetSelected(widget: WidgetConfig): void Parameters widget: WidgetConfig Returns void publicrender render(): any Returns any","keywords":""},{"title":"HelpDrawerComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/HelpDrawerComponent","content":"HelpDrawerComponent Hierarchy unknown HelpDrawerComponent Index Constructors constructor Methods render Constructors constructor new HelpDrawerComponent(): HelpDrawerComponent Inherited from React.Component.constructor Returns HelpDrawerComponent Methods render render(): any Returns any","keywords":""},{"title":"HistogramComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/HistogramComponent","content":"HistogramComponent Hierarchy unknown&lt;WidgetProps&gt; HistogramComponent Index Constructors constructor Properties heightonGraphCursorMovedwidth Accessors exportHeadershistogramDataisTargetDataplotDatawidgetStoreWIDGET_CONFIG Methods componentDidUpdateonResizerender Constructors constructor new HistogramComponent(props: WidgetProps): HistogramComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: WidgetProps Returns HistogramComponent Properties height height: number onGraphCursorMoved onGraphCursorMoved: any = ... width width: number Accessors exportHeaders get exportHeaders(): string[] Returns string[] histogramData get histogramData(): IHistogram Returns IHistogram isTargetData get isTargetData(): boolean Returns boolean plotData get plotData(): { values: Point2D[]; xMax: number; xMin: number; yMax: number; yMin: number } Returns { values: Point2D[]; xMax: number; xMin: number; yMax: number; yMin: number } values: Point2D[] xMax: number xMin: number yMax: number yMin: number widgetStore get widgetStore(): HistogramWidgetStore Returns HistogramWidgetStore publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods componentDidUpdate componentDidUpdate(): void Returns void onResize onResize(width: number, height: number): void Parameters width: number height: number Returns void render render(): any Returns any","keywords":""},{"title":"HistogramSettingsPanelComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/HistogramSettingsPanelComponent","content":"HistogramSettingsPanelComponent Hierarchy unknown&lt;WidgetProps&gt; HistogramSettingsPanelComponent Index Constructors constructor Accessors widgetStoreWIDGET_CONFIG Methods handleMeanRmsChangedhandleSelectedTabChangedhandleXMaxChangehandleXMinChangehandleYMaxChangehandleYMinChangerender Constructors constructor new HistogramSettingsPanelComponent(props: WidgetProps): HistogramSettingsPanelComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: WidgetProps Returns HistogramSettingsPanelComponent Accessors widgetStore get widgetStore(): HistogramWidgetStore Returns HistogramWidgetStore publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods handleMeanRmsChanged handleMeanRmsChanged(changeEvent: ChangeEvent&lt;HTMLInputElement&gt;): void Parameters changeEvent: ChangeEvent&lt;HTMLInputElement&gt; Returns void handleSelectedTabChanged handleSelectedTabChanged(newTabId: ReactText): void Parameters newTabId: ReactText Returns void handleXMaxChange handleXMaxChange(ev: KeyboardEvent&lt;HTMLInputElement&gt;): void Parameters ev: KeyboardEvent&lt;HTMLInputElement&gt; Returns void handleXMinChange handleXMinChange(ev: KeyboardEvent&lt;HTMLInputElement&gt;): void Parameters ev: KeyboardEvent&lt;HTMLInputElement&gt; Returns void handleYMaxChange handleYMaxChange(ev: KeyboardEvent&lt;HTMLInputElement&gt;): void Parameters ev: KeyboardEvent&lt;HTMLInputElement&gt; Returns void handleYMinChange handleYMinChange(ev: KeyboardEvent&lt;HTMLInputElement&gt;): void Parameters ev: KeyboardEvent&lt;HTMLInputElement&gt; Returns void render render(): any Returns any","keywords":""},{"title":"ImageViewSettingsPanelComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/ImageViewSettingsPanelComponent","content":"ImageViewSettingsPanelComponent Hierarchy unknown&lt;WidgetProps&gt; ImageViewSettingsPanelComponent Index Constructors constructor Properties panAndZoomCoordselectedTab Accessors WIDGET_CONFIG Methods render Constructors constructor new ImageViewSettingsPanelComponent(props: any): ImageViewSettingsPanelComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: any Returns ImageViewSettingsPanelComponent Properties panAndZoomCoord panAndZoomCoord: CoordinateMode = CoordinateMode.World selectedTab selectedTab: TabId = ImageViewSettingsPanelTabs.PAN_AND_ZOOM Accessors publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods publicrender render(): any Returns any","keywords":""},{"title":"ImageViewComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/ImageViewComponent","content":"ImageViewComponent Hierarchy unknown&lt;WidgetProps&gt; ImageViewComponent Index Constructors constructor Properties showRatioIndicator Accessors panelsWIDGET_CONFIG Methods onResizerendersetRatioIndicatorVisible Constructors constructor new ImageViewComponent(props: WidgetProps): ImageViewComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: WidgetProps Returns ImageViewComponent Properties showRatioIndicator showRatioIndicator: boolean = false Accessors panels get panels(): any[] Returns any[] publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods onResize onResize(width: number, height: number): void Parameters width: number height: number Returns void render render(): any Returns any setRatioIndicatorVisible setRatioIndicatorVisible(val: boolean): void Parameters val: boolean Returns void","keywords":""},{"title":"LayerListSettingsPanelComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/LayerListSettingsPanelComponent","content":"LayerListSettingsPanelComponent Hierarchy unknown&lt;WidgetProps&gt; LayerListSettingsPanelComponent Index Constructors constructor Accessors widgetStoreWIDGET_CONFIG Methods render Constructors constructor new LayerListSettingsPanelComponent(props: any): LayerListSettingsPanelComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: any Returns LayerListSettingsPanelComponent Accessors widgetStore get widgetStore(): LayerListWidgetStore Returns LayerListWidgetStore publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods render render(): any Returns any","keywords":""},{"title":"LayerListComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/LayerListComponent","content":"LayerListComponent Hierarchy unknown&lt;WidgetProps&gt; LayerListComponent Index Constructors constructor Properties columnWidthsheightwidth Accessors WIDGET_CONFIG Methods render Constructors constructor new LayerListComponent(props: any): LayerListComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: any Returns LayerListComponent Properties columnWidths columnWidths: number[] = ... height height: number = 0 width width: number = 0 Accessors publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods render render(): any Returns any","keywords":""},{"title":"LogComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/LogComponent","content":"LogComponent Hierarchy unknown&lt;WidgetProps&gt; LogComponent Index Constructors constructor Accessors WIDGET_CONFIG Methods onClearClickedonLogLevelChangedonTagClickedrender Constructors constructor new LogComponent(): LogComponent Inherited from React.Component&lt;WidgetProps&gt;.constructor Returns LogComponent Accessors publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods onClearClicked onClearClicked(): void Returns void onLogLevelChanged onLogLevelChanged(event: FormEvent&lt;HTMLSelectElement&gt;): void Parameters event: FormEvent&lt;HTMLSelectElement&gt; Returns void onTagClicked onTagClicked(tag: string): void Parameters tag: string Returns void render render(): any Returns any","keywords":""},{"title":"PlaceholderComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/PlaceholderComponent","content":"PlaceholderComponent Hierarchy unknown&lt;PlaceholderComponentProps&gt; PlaceholderComponent Index Constructors constructor Accessors WIDGET_CONFIG Methods render Constructors constructor new PlaceholderComponent(): PlaceholderComponent Inherited from React.Component&lt;PlaceholderComponentProps&gt;.constructor Returns PlaceholderComponent Accessors publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods render render(): any Returns any","keywords":""},{"title":"PvPreviewComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/PvPreviewComponent","content":"PvPreviewComponent Hierarchy unknown&lt;PVPreviewDialogProps&gt; PvPreviewComponent Index Constructors constructor Accessors WIDGET_CONFIG Methods render Constructors constructor new PvPreviewComponent(): PvPreviewComponent Inherited from React.Component&lt;PVPreviewDialogProps&gt;.constructor Returns PvPreviewComponent Accessors publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods publicrender render(): any Returns any","keywords":""},{"title":"PvGeneratorComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/PvGeneratorComponent","content":"PvGeneratorComponent Hierarchy unknown&lt;WidgetProps&gt; PvGeneratorComponent Index Constructors constructor Properties axesOrderheightisValidSpectralRangewidth Accessors estimatedCubeSizeisCubeSizeBelowLimitisLineInOnePixelisLineIntersectedWithImagewidgetStoreWIDGET_CONFIG Methods rendersetisValidSpectralRangeformatBitValuegetBitValueFromFormatted Constructors constructor new PvGeneratorComponent(props: WidgetProps): PvGeneratorComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: WidgetProps Returns PvGeneratorComponent Properties axesOrder axesOrder: {} = {} Type declaration height height: number isValidSpectralRange isValidSpectralRange: boolean = true width width: number Accessors estimatedCubeSize get estimatedCubeSize(): { bitValue: number; unit: string; value: number } Returns { bitValue: number; unit: string; value: number } bitValue: number unit: string value: number isCubeSizeBelowLimit get isCubeSizeBelowLimit(): boolean Returns boolean isLineInOnePixel get isLineInOnePixel(): boolean Returns boolean isLineIntersectedWithImage get isLineIntersectedWithImage(): boolean Returns boolean widgetStore get widgetStore(): PvGeneratorWidgetStore Returns PvGeneratorWidgetStore publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods render render(): any Returns any setisValidSpectralRange setisValidSpectralRange(bool: boolean): void Parameters bool: boolean Returns void publicstaticformatBitValue formatBitValue(bitValue: number): { bitValue: number; unit: string; value: number } Parameters bitValue: number Returns { bitValue: number; unit: string; value: number } bitValue: number unit: string value: number publicstaticgetBitValueFromFormatted getBitValueFromFormatted(value: number, unit: string): number Parameters value: number unit: string Returns number","keywords":""},{"title":"RegionListComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/RegionListComponent","content":"RegionListComponent Hierarchy unknown&lt;WidgetProps&gt; RegionListComponent Index Constructors constructor Properties firstVisibleRowheightlastVisibleRowregionsLockregionsVisibilitywidth Accessors validRegionsWIDGET_CONFIG Methods render Constructors constructor new RegionListComponent(props: any): RegionListComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: any Returns RegionListComponent Properties firstVisibleRow firstVisibleRow: number = 0 height height: number = 0 lastVisibleRow lastVisibleRow: number = 0 regionsLock regionsLock: boolean = false regionsVisibility regionsVisibility: RegionsOpacity = RegionsOpacity.Visible width width: number = 0 Accessors validRegions get validRegions(): RegionStore[] Returns RegionStore[] publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods render render(): any Returns any","keywords":""},{"title":"RegionWcsCenter","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/RegionWcsCenter","content":"RegionWcsCenter Hierarchy unknown&lt;{ frame: FrameStore; region: RegionStore }&gt; RegionWcsCenter Index Constructors constructor Methods render Constructors constructor new RegionWcsCenter(): RegionWcsCenter Inherited from React.Component&lt;{region: RegionStore; frame: FrameStore}&gt;.constructor Returns RegionWcsCenter Methods publicrender render(): any Returns any","keywords":""},{"title":"RenderConfigSettingsPanelComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/RenderConfigSettingsPanelComponent","content":"RenderConfigSettingsPanelComponent Hierarchy unknown&lt;WidgetProps&gt; RenderConfigSettingsPanelComponent Index Constructors constructor Accessors widgetStoreWIDGET_CONFIG Methods handleLogScaleChangedhandleMarkerTextChangedhandleMeanRmsChangedhandleXMaxChangehandleXMinChangehandleYMaxChangehandleYMinChangerender Constructors constructor new RenderConfigSettingsPanelComponent(): RenderConfigSettingsPanelComponent Inherited from React.Component&lt;WidgetProps&gt;.constructor Returns RenderConfigSettingsPanelComponent Accessors widgetStore get widgetStore(): RenderConfigWidgetStore Returns RenderConfigWidgetStore publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods handleLogScaleChanged handleLogScaleChanged(changeEvent: ChangeEvent&lt;HTMLInputElement&gt;): void Parameters changeEvent: ChangeEvent&lt;HTMLInputElement&gt; Returns void handleMarkerTextChanged handleMarkerTextChanged(changeEvent: ChangeEvent&lt;HTMLInputElement&gt;): void Parameters changeEvent: ChangeEvent&lt;HTMLInputElement&gt; Returns void handleMeanRmsChanged handleMeanRmsChanged(changeEvent: ChangeEvent&lt;HTMLInputElement&gt;): void Parameters changeEvent: ChangeEvent&lt;HTMLInputElement&gt; Returns void handleXMaxChange handleXMaxChange(ev: KeyboardEvent&lt;HTMLInputElement&gt;): void Parameters ev: KeyboardEvent&lt;HTMLInputElement&gt; Returns void handleXMinChange handleXMinChange(ev: KeyboardEvent&lt;HTMLInputElement&gt;): void Parameters ev: KeyboardEvent&lt;HTMLInputElement&gt; Returns void handleYMaxChange handleYMaxChange(ev: KeyboardEvent&lt;HTMLInputElement&gt;): void Parameters ev: KeyboardEvent&lt;HTMLInputElement&gt; Returns void handleYMinChange handleYMinChange(ev: KeyboardEvent&lt;HTMLInputElement&gt;): void Parameters ev: KeyboardEvent&lt;HTMLInputElement&gt; Returns void render render(): any Returns any","keywords":""},{"title":"RootMenuComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/RootMenuComponent","content":"RootMenuComponent Hierarchy unknown RootMenuComponent Index Constructors constructor Properties disableCheckReleasedocumentationAlertVisible Accessors snippetsMenu Methods handleAlertDismissedhandleFrameSelectrendertoggleDisableCheckRelease Constructors constructor new RootMenuComponent(props: any): RootMenuComponent Overrides React.Component.constructor Parameters props: any Returns RootMenuComponent Properties disableCheckRelease disableCheckRelease: boolean = false documentationAlertVisible documentationAlertVisible: boolean Accessors snippetsMenu get snippetsMenu(): any Returns any Methods handleAlertDismissed handleAlertDismissed(): void Returns void handleFrameSelect handleFrameSelect(frame: FrameStore): void Parameters frame: FrameStore Returns void render render(): any Returns any toggleDisableCheckRelease toggleDisableCheckRelease(): void Returns void","keywords":""},{"title":"RenderConfigComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/RenderConfigComponent","content":"RenderConfigComponent Hierarchy unknown&lt;WidgetProps&gt; RenderConfigComponent Index Constructors constructor Properties heightonGraphCursorMovedwidth Accessors plotDatawidgetStoreWIDGET_CONFIG Methods componentDidUpdatehandleCubeHistogramCancelledhandleCubeHistogramSelectedhandlePercentileRankClickhandlePercentileRankSelectChangedhandleScaleMaxChangehandleScaleMinChangeonMaxMovedonMinMovedonResizerendersetCustomPercentileRank Constructors constructor new RenderConfigComponent(props: WidgetProps): RenderConfigComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: WidgetProps Returns RenderConfigComponent Properties height height: number onGraphCursorMoved onGraphCursorMoved: any = ... width width: number Accessors plotData get plotData(): { values: Point2D[]; xMax: number; xMin: number; yMax: number; yMin: number } Returns { values: Point2D[]; xMax: number; xMin: number; yMax: number; yMin: number } values: Point2D[] xMax: number xMin: number yMax: number yMin: number widgetStore get widgetStore(): RenderConfigWidgetStore Returns RenderConfigWidgetStore publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods componentDidUpdate componentDidUpdate(): void Returns void handleCubeHistogramCancelled handleCubeHistogramCancelled(): void Returns void handleCubeHistogramSelected handleCubeHistogramSelected(): void Returns void handlePercentileRankClick handlePercentileRankClick(value: number): void Parameters value: number Returns void handlePercentileRankSelectChanged handlePercentileRankSelectChanged(event: ChangeEvent&lt;HTMLSelectElement&gt;): void Parameters event: ChangeEvent&lt;HTMLSelectElement&gt; Returns void handleScaleMaxChange handleScaleMaxChange(ev: any): void Parameters ev: any Returns void handleScaleMinChange handleScaleMinChange(ev: any): void Parameters ev: any Returns void onMaxMoved onMaxMoved(x: number): void Parameters x: number Returns void onMinMoved onMinMoved(x: number): void Parameters x: number Returns void onResize onResize(width: number, height: number): void Parameters width: number height: number Returns void render render(): any Returns any setCustomPercentileRank setCustomPercentileRank(): void Returns void","keywords":""},{"title":"SpatialProfilerSettingsPanelComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/SpatialProfilerSettingsPanelComponent","content":"SpatialProfilerSettingsPanelComponent Hierarchy unknown&lt;WidgetProps&gt; SpatialProfilerSettingsPanelComponent Index Constructors constructor Accessors widgetStoreWIDGET_CONFIG Methods handleCoordinateChangedhandleMeanRmsChangedhandleSelectedTabChangedhandleWcsAxisChangedhandleXMaxChangehandleXMinChangehandleYMaxChangehandleYMinChangerender Constructors constructor new SpatialProfilerSettingsPanelComponent(props: WidgetProps): SpatialProfilerSettingsPanelComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: WidgetProps Returns SpatialProfilerSettingsPanelComponent Accessors widgetStore get widgetStore(): SpatialProfileWidgetStore Returns SpatialProfileWidgetStore publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods handleCoordinateChanged handleCoordinateChanged(changeEvent: ChangeEvent&lt;HTMLSelectElement&gt;): void Parameters changeEvent: ChangeEvent&lt;HTMLSelectElement&gt; Returns void handleMeanRmsChanged handleMeanRmsChanged(changeEvent: ChangeEvent&lt;HTMLInputElement&gt;): void Parameters changeEvent: ChangeEvent&lt;HTMLInputElement&gt; Returns void handleSelectedTabChanged handleSelectedTabChanged(newTabId: ReactText): void Parameters newTabId: ReactText Returns void handleWcsAxisChanged handleWcsAxisChanged(changeEvent: ChangeEvent&lt;HTMLInputElement&gt;): void Parameters changeEvent: ChangeEvent&lt;HTMLInputElement&gt; Returns void handleXMaxChange handleXMaxChange(ev: KeyboardEvent&lt;HTMLInputElement&gt;): void Parameters ev: KeyboardEvent&lt;HTMLInputElement&gt; Returns void handleXMinChange handleXMinChange(ev: KeyboardEvent&lt;HTMLInputElement&gt;): void Parameters ev: KeyboardEvent&lt;HTMLInputElement&gt; Returns void handleYMaxChange handleYMaxChange(ev: KeyboardEvent&lt;HTMLInputElement&gt;): void Parameters ev: KeyboardEvent&lt;HTMLInputElement&gt; Returns void handleYMinChange handleYMinChange(ev: KeyboardEvent&lt;HTMLInputElement&gt;): void Parameters ev: KeyboardEvent&lt;HTMLInputElement&gt; Returns void render render(): any Returns any","keywords":""},{"title":"SpatialProfilerComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/SpatialProfilerComponent","content":"SpatialProfilerComponent Hierarchy unknown&lt;WidgetProps&gt; SpatialProfilerComponent Index Constructors constructor Properties autoScaleHorizontalMaxautoScaleHorizontalMinheightonGraphCursorMovedwidth Accessors exportHeaderframelineAxisnearestCursorPointplotDatapointInfoprofileStorewidgetStoreWIDGET_CONFIG Methods render Constructors constructor new SpatialProfilerComponent(props: WidgetProps): SpatialProfilerComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: WidgetProps Returns SpatialProfilerComponent Properties autoScaleHorizontalMax autoScaleHorizontalMax: number autoScaleHorizontalMin autoScaleHorizontalMin: number height height: number onGraphCursorMoved onGraphCursorMoved: any = ... width width: number Accessors exportHeader get exportHeader(): string[] Returns string[] frame get frame(): FrameStore Returns FrameStore lineAxis get lineAxis(): { label: string; max: number; min: number; unit: string } Returns { label: string; max: number; min: number; unit: string } label: string max: number min: number unit: string nearestCursorPoint get nearestCursorPoint(): Point2D Returns Point2D plotData get plotData(): { fullResolutionValues: Point2D[]; smoothingValues: Point2D[]; values: Point2D[]; xMax: number; xMin: number; yMax: number; yMean: number; yMin: number; yRms: number; ySmoothedMean: number; ySmoothedRms: number } Returns { fullResolutionValues: Point2D[]; smoothingValues: Point2D[]; values: Point2D[]; xMax: number; xMin: number; yMax: number; yMean: number; yMin: number; yRms: number; ySmoothedMean: number; ySmoothedRms: number } fullResolutionValues: Point2D[] smoothingValues: Point2D[] values: Point2D[] xMax: number xMin: number yMax: number yMean: number yMin: number yRms: number ySmoothedMean: number ySmoothedRms: number pointInfo get pointInfo(): { infoWCS: any; posImageSpace: Point2D; posWCS: any; precision: Point2D } Returns { infoWCS: any; posImageSpace: Point2D; posWCS: any; precision: Point2D } infoWCS: any posImageSpace: Point2D posWCS: any precision: Point2D profileStore get profileStore(): SpatialProfileStore Returns SpatialProfileStore widgetStore get widgetStore(): SpatialProfileWidgetStore Returns SpatialProfileWidgetStore publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods render render(): any Returns any","keywords":""},{"title":"SpectralLineQueryComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/SpectralLineQueryComponent","content":"SpectralLineQueryComponent Hierarchy unknown&lt;WidgetProps&gt; SpectralLineQueryComponent Index Constructors constructor Properties headerTableColumnWidthsheightwidgetIdwidth Accessors widgetStoreWIDGET_CONFIG Methods onResizerendersetHeaderTableColumnWidts Constructors constructor new SpectralLineQueryComponent(props: WidgetProps): SpectralLineQueryComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: WidgetProps Returns SpectralLineQueryComponent Properties headerTableColumnWidths headerTableColumnWidths: number[] height height: number widgetId widgetId: string width width: number Accessors widgetStore get widgetStore(): SpectralLineQueryWidgetStore Returns SpectralLineQueryWidgetStore publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods onResize onResize(width: number, height: number): void Parameters width: number height: number Returns void render render(): any Returns any setHeaderTableColumnWidts setHeaderTableColumnWidts(vals: number[]): void Parameters vals: number[] Returns void","keywords":""},{"title":"SpectralProfilerComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/SpectralProfilerComponent","content":"SpectralProfilerComponent Hierarchy unknown&lt;WidgetProps&gt; SpectralProfilerComponent Index Constructors constructor Properties heightonGraphCursorMovedwidth Accessors currentChannelValueisMeanRmsVisiblelinePlotSelectingModeplotDatarequiredChannelValuewidgetStoreWIDGET_CONFIG Methods onChannelChangedrender Constructors constructor new SpectralProfilerComponent(props: WidgetProps): SpectralProfilerComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: WidgetProps Returns SpectralProfilerComponent Properties height height: number onGraphCursorMoved onGraphCursorMoved: any = ... width width: number Accessors currentChannelValue get currentChannelValue(): number Returns number isMeanRmsVisible get isMeanRmsVisible(): boolean Returns boolean linePlotSelectingMode get linePlotSelectingMode(): LinePlotSelectingMode Returns LinePlotSelectingMode plotData get plotData(): MultiPlotData Returns MultiPlotData requiredChannelValue get requiredChannelValue(): number Returns number widgetStore get widgetStore(): SpectralProfileWidgetStore Returns SpectralProfileWidgetStore publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods onChannelChanged onChannelChanged(x: number): void Parameters x: number Returns void render render(): any Returns any","keywords":""},{"title":"SpectralProfilerToolbarComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/SpectralProfilerToolbarComponent","content":"SpectralProfilerToolbarComponent Hierarchy unknown&lt;{ id: string; widgetStore: SpectralProfileWidgetStore }&gt; SpectralProfilerToolbarComponent Index Constructors constructor Methods render Constructors constructor new SpectralProfilerToolbarComponent(): SpectralProfilerToolbarComponent Inherited from React.Component&lt;{widgetStore: SpectralProfileWidgetStore; id: string}&gt;.constructor Returns SpectralProfilerToolbarComponent Methods publicrender render(): any Returns any","keywords":""},{"title":"SpectralProfilerSettingsPanelComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/SpectralProfilerSettingsPanelComponent","content":"SpectralProfilerSettingsPanelComponent Hierarchy unknown&lt;WidgetProps&gt; SpectralProfilerSettingsPanelComponent Index Constructors constructor Accessors widgetStoreWIDGET_CONFIG Methods handleMeanRmsChangedhandleSelectedTabChangedhandleXMaxChangehandleXMinChangehandleYMaxChangehandleYMinChangerender Constructors constructor new SpectralProfilerSettingsPanelComponent(props: WidgetProps): SpectralProfilerSettingsPanelComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: WidgetProps Returns SpectralProfilerSettingsPanelComponent Accessors widgetStore get widgetStore(): SpectralProfileWidgetStore Returns SpectralProfileWidgetStore publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods handleMeanRmsChanged handleMeanRmsChanged(changeEvent: ChangeEvent&lt;HTMLInputElement&gt;): void Parameters changeEvent: ChangeEvent&lt;HTMLInputElement&gt; Returns void handleSelectedTabChanged handleSelectedTabChanged(newTabId: ReactText): void Parameters newTabId: ReactText Returns void handleXMaxChange handleXMaxChange(ev: KeyboardEvent&lt;HTMLInputElement&gt;): void Parameters ev: KeyboardEvent&lt;HTMLInputElement&gt; Returns void handleXMinChange handleXMinChange(ev: KeyboardEvent&lt;HTMLInputElement&gt;): void Parameters ev: KeyboardEvent&lt;HTMLInputElement&gt; Returns void handleYMaxChange handleYMaxChange(ev: KeyboardEvent&lt;HTMLInputElement&gt;): void Parameters ev: KeyboardEvent&lt;HTMLInputElement&gt; Returns void handleYMinChange handleYMinChange(ev: KeyboardEvent&lt;HTMLInputElement&gt;): void Parameters ev: KeyboardEvent&lt;HTMLInputElement&gt; Returns void render render(): any Returns any","keywords":""},{"title":"SplashScreenComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/SplashScreenComponent","content":"SplashScreenComponent Hierarchy unknown SplashScreenComponent Index Constructors constructor Methods render Constructors constructor new SplashScreenComponent(): SplashScreenComponent Inherited from React.Component.constructor Returns SplashScreenComponent Methods publicrender render(): any Returns any","keywords":""},{"title":"StatsComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/StatsComponent","content":"StatsComponent Hierarchy unknown&lt;WidgetProps&gt; StatsComponent Index Constructors constructor Properties heightisMouseEnteredwidth Accessors statsDatawidgetStoreWIDGET_CONFIG Methods exportDatahideMouseEnterWidgetonMouseEnteronMouseLeaverendershowMouseEnterWidget Constructors constructor new StatsComponent(props: WidgetProps): StatsComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: WidgetProps Returns StatsComponent Properties height height: number = 0 isMouseEntered isMouseEntered: boolean = false width width: number = 0 Accessors statsData get statsData(): RegionStatsData Returns RegionStatsData widgetStore get widgetStore(): StatsWidgetStore Returns StatsWidgetStore publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods exportData exportData(): void Returns void hideMouseEnterWidget hideMouseEnterWidget(): void Returns void onMouseEnter onMouseEnter(): void Returns void onMouseLeave onMouseLeave(): void Returns void publicrender render(): any Returns any showMouseEnterWidget showMouseEnterWidget(): void Returns void","keywords":""},{"title":"StokesAnalysisSettingsPanelComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/StokesAnalysisSettingsPanelComponent","content":"StokesAnalysisSettingsPanelComponent Hierarchy unknown&lt;WidgetProps&gt; StokesAnalysisSettingsPanelComponent Index Constructors constructor Accessors widgetStoreWIDGET_CONFIG Methods handleEqualAxesValuesChangedhandleInvertedColorMapChangedhandleSelectedTabChangedrender Constructors constructor new StokesAnalysisSettingsPanelComponent(props: WidgetProps): StokesAnalysisSettingsPanelComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: WidgetProps Returns StokesAnalysisSettingsPanelComponent Accessors widgetStore get widgetStore(): StokesAnalysisWidgetStore Returns StokesAnalysisWidgetStore publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods handleEqualAxesValuesChanged handleEqualAxesValuesChanged(changeEvent: ChangeEvent&lt;HTMLInputElement&gt;): void Parameters changeEvent: ChangeEvent&lt;HTMLInputElement&gt; Returns void handleInvertedColorMapChanged handleInvertedColorMapChanged(changeEvent: ChangeEvent&lt;HTMLInputElement&gt;): void Parameters changeEvent: ChangeEvent&lt;HTMLInputElement&gt; Returns void handleSelectedTabChanged handleSelectedTabChanged(newTabId: ReactText): void Parameters newTabId: ReactText Returns void render render(): any Returns any","keywords":""},{"title":"ToolbarMenuComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/ToolbarMenuComponent","content":"ToolbarMenuComponent Hierarchy unknown ToolbarMenuComponent Index Constructors constructor Methods handleDistanceMeasuringClickedhandleRegionTypeClickedregionTooltiprender Constructors constructor new ToolbarMenuComponent(): ToolbarMenuComponent Inherited from React.Component.constructor Returns ToolbarMenuComponent Methods handleDistanceMeasuringClicked handleDistanceMeasuringClicked(): void Returns void handleRegionTypeClicked handleRegionTypeClicked(type: RegionType): void Parameters type: RegionType Returns void regionTooltip regionTooltip(type: RegionType): any Parameters type: RegionType Returns any publicrender render(): any Returns any","keywords":""},{"title":"StokesAnalysisComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/StokesAnalysisComponent","content":"StokesAnalysisComponent Hierarchy unknown&lt;WidgetProps&gt; StokesAnalysisComponent Index Constructors constructor Properties heightonGraphCursorMovedonScatterGraphCursorMovedwidth Accessors currentChannelValueexportHeadersexportQUScatterHeadersplotDataprofileStorerequiredChannelValuewidgetStoreWIDGET_CONFIG Methods onChannelChangedonScatterChannelChangedrender Constructors constructor new StokesAnalysisComponent(props: WidgetProps): StokesAnalysisComponent Overrides React.Component&lt;WidgetProps&gt;.constructor Parameters props: WidgetProps Returns StokesAnalysisComponent Properties height height: number onGraphCursorMoved onGraphCursorMoved: any = ... onScatterGraphCursorMoved onScatterGraphCursorMoved: any = ... width width: number Accessors currentChannelValue get currentChannelValue(): number Returns number exportHeaders get exportHeaders(): string[] Returns string[] exportQUScatterHeaders get exportQUScatterHeaders(): string[] Returns string[] plotData get plotData(): { iProgress: number; paSmoothedValues: { border: Border; dataset: Point2D[] }; paValues: { border: Border; dataset: Point2D[] }; piSmoothedValues: { border: Border; dataset: Point2D[] }; piValues: { border: Border; dataset: Point2D[] }; qProgress: number; qSmoothedValues: { border: Border; dataset: Point2D[] }; qValues: { border: Border; dataset: Point2D[] }; quSmoothedValues: { border: Border; dataset: { x: number; y: number; z: number }[] }; quValues: { border: Border; dataset: { x: number; y: number; z: number }[] }; uProgress: number; uSmoothedValues: { border: Border; dataset: Point2D[] }; uValues: { border: Border; dataset: Point2D[] } } Returns { iProgress: number; paSmoothedValues: { border: Border; dataset: Point2D[] }; paValues: { border: Border; dataset: Point2D[] }; piSmoothedValues: { border: Border; dataset: Point2D[] }; piValues: { border: Border; dataset: Point2D[] }; qProgress: number; qSmoothedValues: { border: Border; dataset: Point2D[] }; qValues: { border: Border; dataset: Point2D[] }; quSmoothedValues: { border: Border; dataset: { x: number; y: number; z: number }[] }; quValues: { border: Border; dataset: { x: number; y: number; z: number }[] }; uProgress: number; uSmoothedValues: { border: Border; dataset: Point2D[] }; uValues: { border: Border; dataset: Point2D[] } } iProgress: number paSmoothedValues: { border: Border; dataset: Point2D[] } border: Border dataset: Point2D[] paValues: { border: Border; dataset: Point2D[] } border: Border dataset: Point2D[] piSmoothedValues: { border: Border; dataset: Point2D[] } border: Border dataset: Point2D[] piValues: { border: Border; dataset: Point2D[] } border: Border dataset: Point2D[] qProgress: number qSmoothedValues: { border: Border; dataset: Point2D[] } border: Border dataset: Point2D[] qValues: { border: Border; dataset: Point2D[] } border: Border dataset: Point2D[] quSmoothedValues: { border: Border; dataset: { x: number; y: number; z: number }[] } border: Border dataset: { x: number; y: number; z: number }[] quValues: { border: Border; dataset: { x: number; y: number; z: number }[] } border: Border dataset: { x: number; y: number; z: number }[] uProgress: number uSmoothedValues: { border: Border; dataset: Point2D[] } border: Border dataset: Point2D[] uValues: { border: Border; dataset: Point2D[] } border: Border dataset: Point2D[] profileStore get profileStore(): SpectralProfileStore Returns SpectralProfileStore requiredChannelValue get requiredChannelValue(): number Returns number widgetStore get widgetStore(): StokesAnalysisWidgetStore Returns StokesAnalysisWidgetStore publicstaticWIDGET_CONFIG get WIDGET_CONFIG(): DefaultWidgetConfig Returns DefaultWidgetConfig Methods onChannelChanged onChannelChanged(x: number): void Parameters x: number Returns void onScatterChannelChanged onScatterChannelChanged(x: number, y: number, data: Point3D[]): void Parameters x: number y: number data: Point3D[] Returns void render render(): any Returns any","keywords":""},{"title":"UIControllerComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/class/UIControllerComponent","content":"UIControllerComponent Hierarchy unknown UIControllerComponent Index Constructors constructor Methods render Constructors constructor new UIControllerComponent(): UIControllerComponent Inherited from React.Component.constructor Returns UIControllerComponent Methods render render(): any Returns any","keywords":""},{"title":"carta-frontend/components/Dialogs","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs","content":"carta-frontend/components/Dialogs Index Classes AboutDialogComponentCatalogQueryDialogComponentCodeSnippetDialogComponentContourDialogComponentDistanceMeasuringDialogDraggableDialogComponentExternalPageDialogComponentFileBrowserDialogComponentFileInfoDialogComponentFittingDialogComponentImageSaveComponentPreferenceDialogComponentRegionDialogComponentRegionSelectComponentResizableDialogComponentPropsSaveLayoutDialogComponentStokesDialogComponentTaskProgressDialogComponentTelemetryDialogComponentVectorOverlayDialogComponent Enumerations MemoryUnitWorkspaceDialogMode Variables ShareWorkspaceDialogComponentWorkspaceDialogComponent Variables constShareWorkspaceDialogComponent ShareWorkspaceDialogComponent: any = ... constWorkspaceDialogComponent WorkspaceDialogComponent: any = ...","keywords":""},{"title":"AboutDialogComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/class/AboutDialogComponent","content":"AboutDialogComponent Hierarchy unknown AboutDialogComponent Index Constructors constructor Methods render Constructors constructor new AboutDialogComponent(): AboutDialogComponent Inherited from React.Component.constructor Returns AboutDialogComponent Methods publicrender render(): any Returns any","keywords":""},{"title":"CatalogQueryDialogComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/class/CatalogQueryDialogComponent","content":"CatalogQueryDialogComponent Hierarchy unknown CatalogQueryDialogComponent Index Constructors constructor Properties objectSizeresultSize Accessors resultInfo Methods rendersetObjectSizesetResultSize Constructors constructor new CatalogQueryDialogComponent(props: any): CatalogQueryDialogComponent Overrides React.Component.constructor Parameters props: any Returns CatalogQueryDialogComponent Properties objectSize objectSize: number resultSize resultSize: number Accessors resultInfo get resultInfo(): string Returns string Methods publicrender render(): any Returns any setObjectSize setObjectSize(objectSize: number): void Parameters objectSize: number Returns void setResultSize setResultSize(resultSize: number): void Parameters resultSize: number Returns void","keywords":""},{"title":"CodeSnippetDialogComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/class/CodeSnippetDialogComponent","content":"CodeSnippetDialogComponent Hierarchy unknown CodeSnippetDialogComponent Index Constructors constructor Properties saveDialogOpen Methods applyHighlighthandleDeleteClickedhandleExecuteClickedhandleNewClickedhandleSaveClickedhideSaveDialogrendershowSaveDialog Constructors constructor new CodeSnippetDialogComponent(props: any): CodeSnippetDialogComponent Overrides React.Component.constructor Parameters props: any Returns CodeSnippetDialogComponent Properties saveDialogOpen saveDialogOpen: boolean = false Methods applyHighlight applyHighlight(code: string): any Parameters code: string Returns any handleDeleteClicked handleDeleteClicked(): Promise&lt;void&gt; Returns Promise&lt;void&gt; handleExecuteClicked handleExecuteClicked(): Promise&lt;void&gt; Returns Promise&lt;void&gt; handleNewClicked handleNewClicked(): Promise&lt;void&gt; Returns Promise&lt;void&gt; handleSaveClicked handleSaveClicked(snippetName: string, categories: string[]): Promise&lt;void&gt; Parameters snippetName: string categories: string[] Returns Promise&lt;void&gt; hideSaveDialog hideSaveDialog(): void Returns void publicrender render(): any Returns any showSaveDialog showSaveDialog(): void Returns void","keywords":""},{"title":"DistanceMeasuringDialog","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/class/DistanceMeasuringDialog","content":"DistanceMeasuringDialog Hierarchy unknown DistanceMeasuringDialog Index Constructors constructor Properties WCSModeselectedTab Methods rendersetWCSMode Constructors constructor new DistanceMeasuringDialog(props: any): DistanceMeasuringDialog Overrides React.Component.constructor Parameters props: any Returns DistanceMeasuringDialog Properties WCSMode WCSMode: boolean = true selectedTab selectedTab: DistanceMeasuringDialogTabs = DistanceMeasuringDialogTabs.Configuration Methods render render(): any Returns any setWCSMode setWCSMode(value?: boolean): void Parameters optionalvalue: boolean Returns void","keywords":""},{"title":"ContourDialogComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/class/ContourDialogComponent","content":"ContourDialogComponent Hierarchy unknown ContourDialogComponent Index Constructors constructor Properties currentTablevelsshowCubeHistogramAlertsmoothingFactorsmoothingMode Accessors contourConfigChangedplotData Methods componentDidUpdaterendersetDefaultContourParameters Constructors constructor new ContourDialogComponent(props: { appStore: AppStore }): ContourDialogComponent Overrides React.Component.constructor Parameters props: { appStore: AppStore } Returns ContourDialogComponent Properties currentTab currentTab: ContourDialogTabs = ContourDialogTabs.Levels levels levels: number[] showCubeHistogramAlert showCubeHistogramAlert: boolean smoothingFactor smoothingFactor: number smoothingMode smoothingMode: SmoothingMode Accessors contourConfigChanged get contourConfigChanged(): boolean Returns boolean plotData get plotData(): { values: Point2D[]; xMax: number; xMin: number; yMax: number; yMin: number } Returns { values: Point2D[]; xMax: number; xMin: number; yMax: number; yMin: number } values: Point2D[] xMax: number xMin: number yMax: number yMin: number Methods componentDidUpdate componentDidUpdate(): void Returns void publicrender render(): any Returns any setDefaultContourParameters setDefaultContourParameters(): void Returns void","keywords":""},{"title":"ExternalPageDialogComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/class/ExternalPageDialogComponent","content":"ExternalPageDialogComponent Hierarchy unknown ExternalPageDialogComponent Index Constructors constructor Methods render Constructors constructor new ExternalPageDialogComponent(): ExternalPageDialogComponent Inherited from React.Component.constructor Returns ExternalPageDialogComponent Methods render render(): any Returns any","keywords":""},{"title":"DraggableDialogComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/class/DraggableDialogComponent","content":"DraggableDialogComponent Hierarchy unknown&lt;ResizableDialogComponentProps&gt; DraggableDialogComponent Index Constructors constructor Methods componentDidUpdaterender Constructors constructor new DraggableDialogComponent(): DraggableDialogComponent Inherited from React.Component&lt;ResizableDialogComponentProps&gt;.constructor Returns DraggableDialogComponent Methods componentDidUpdate componentDidUpdate(): void Returns void render render(): any Returns any","keywords":""},{"title":"FileInfoDialogComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/class/FileInfoDialogComponent","content":"FileInfoDialogComponent Hierarchy unknown FileInfoDialogComponent Index Constructors constructor Methods render Constructors constructor new FileInfoDialogComponent(): FileInfoDialogComponent Inherited from React.Component.constructor Returns FileInfoDialogComponent Methods render render(): any Returns any","keywords":""},{"title":"FittingDialogComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/class/FittingDialogComponent","content":"FittingDialogComponent Hierarchy unknown FittingDialogComponent Index Constructors constructor Methods render Constructors constructor new FittingDialogComponent(props: any): FittingDialogComponent Overrides React.Component.constructor Parameters props: any Returns FittingDialogComponent Methods render render(): any Returns any","keywords":""},{"title":"FileBrowserDialogComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/class/FileBrowserDialogComponent","content":"FileBrowserDialogComponent Hierarchy unknown FileBrowserDialogComponent Index Constructors constructor Properties debouncedFilterStringdefaultHeightdefaultWidthenableEditPathenableImageArithmeticfileFilterStringimageArithmeticStringinputPathStringoverwriteExistingFileAlertVisiblesetFilterString Accessors pathItems Methods clearArithmeticStringclearFilterStringhandleBreadcrumbClickedhandleFilterStringInputChangedhandleFolderClickedhandleImageArithmeticStringChangedrefreshFileListrendersetEnableImageArithmeticsetFilterTypesetInputPathStringswitchEditPathMode Constructors constructor new FileBrowserDialogComponent(props: any): FileBrowserDialogComponent Overrides React.Component.constructor Parameters props: any Returns FileBrowserDialogComponent Properties debouncedFilterString debouncedFilterString: string = &quot;&quot; defaultHeight defaultHeight: number defaultWidth defaultWidth: number enableEditPath enableEditPath: boolean = false enableImageArithmetic enableImageArithmetic: boolean = false fileFilterString fileFilterString: string = &quot;&quot; imageArithmeticString imageArithmeticString: string = &quot;&quot; inputPathString inputPathString: string = &quot;&quot; overwriteExistingFileAlertVisible overwriteExistingFileAlertVisible: boolean setFilterString setFilterString: any = ... Accessors pathItems get pathItems(): BreadcrumbProps[] Returns BreadcrumbProps[] Methods clearArithmeticString clearArithmeticString(): void Returns void clearFilterString clearFilterString(): void Returns void handleBreadcrumbClicked handleBreadcrumbClicked(path: string): void Parameters path: string Returns void handleFilterStringInputChanged handleFilterStringInputChanged(ev: ChangeEvent&lt;HTMLInputElement&gt;): void Parameters ev: ChangeEvent&lt;HTMLInputElement&gt; Returns void handleFolderClicked handleFolderClicked(folderName: string): void Parameters folderName: string Returns void handleImageArithmeticStringChanged handleImageArithmeticStringChanged(ev: ChangeEvent&lt;HTMLInputElement&gt;): void Parameters ev: ChangeEvent&lt;HTMLInputElement&gt; Returns void refreshFileList refreshFileList(): void Returns void publicrender render(): any Returns any setEnableImageArithmetic setEnableImageArithmetic(val: boolean): void Parameters val: boolean Returns void setFilterType setFilterType(type: FileFilteringType): void Parameters type: FileFilteringType Returns void setInputPathString setInputPathString(inputPathString: string): void Parameters inputPathString: string Returns void switchEditPathMode switchEditPathMode(): void Returns void","keywords":""},{"title":"ImageSaveComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/class/ImageSaveComponent","content":"ImageSaveComponent Hierarchy unknown ImageSaveComponent Index Constructors constructor Accessors stokesOptionsvalidSaveSpectralRangeEndvalidSaveSpectralRangeStart Methods renderupdateSpectralCoordinateupdateSpectralSystemupdateStokes Constructors constructor new ImageSaveComponent(props: any): ImageSaveComponent Overrides React.Component.constructor Parameters props: any Returns ImageSaveComponent Accessors stokesOptions get stokesOptions(): any[] Returns any[] validSaveSpectralRangeEnd get validSaveSpectralRangeEnd(): boolean Returns boolean validSaveSpectralRangeStart get validSaveSpectralRangeStart(): boolean Returns boolean Methods render render(): any Returns any updateSpectralCoordinate updateSpectralCoordinate(coordStr: string): void Parameters coordStr: string Returns void updateSpectralSystem updateSpectralSystem(specsys: SpectralSystem): void Parameters specsys: SpectralSystem Returns void updateStokes updateStokes(option: number): void Parameters option: number Returns void","keywords":""},{"title":"RegionDialogComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/class/RegionDialogComponent","content":"RegionDialogComponent Hierarchy unknown RegionDialogComponent Index Constructors constructor Properties selectedTab Methods render Constructors constructor new RegionDialogComponent(props: any): RegionDialogComponent Overrides React.Component.constructor Parameters props: any Returns RegionDialogComponent Properties selectedTab selectedTab: RegionDialogTabs = RegionDialogTabs.Configuration Methods publicrender render(): any Returns any","keywords":""},{"title":"PreferenceDialogComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/class/PreferenceDialogComponent","content":"PreferenceDialogComponent Hierarchy unknown PreferenceDialogComponent Index Constructors constructor Properties selectedTab Accessors pvPreviewCubeSizeMaxValue Methods render Constructors constructor new PreferenceDialogComponent(props: any): PreferenceDialogComponent Overrides React.Component.constructor Parameters props: any Returns PreferenceDialogComponent Properties selectedTab selectedTab: PreferenceDialogTabs = PreferenceDialogTabs.GLOBAL Accessors pvPreviewCubeSizeMaxValue get pvPreviewCubeSizeMaxValue(): number Returns number Methods publicrender render(): any Returns any","keywords":""},{"title":"RegionSelectComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/class/RegionSelectComponent","content":"RegionSelectComponent Hierarchy unknown RegionSelectComponent Index Constructors constructor Methods render Constructors constructor new RegionSelectComponent(props: any): RegionSelectComponent Overrides React.Component.constructor Parameters props: any Returns RegionSelectComponent Methods render render(): any Returns any","keywords":""},{"title":"SaveLayoutDialogComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/class/SaveLayoutDialogComponent","content":"SaveLayoutDialogComponent Hierarchy unknown SaveLayoutDialogComponent Index Constructors constructor Accessors isEmptyvalidName Methods render Constructors constructor new SaveLayoutDialogComponent(props: any): SaveLayoutDialogComponent Overrides React.Component.constructor Parameters props: any Returns SaveLayoutDialogComponent Accessors isEmpty get isEmpty(): boolean Returns boolean validName get validName(): boolean Returns boolean Methods render render(): any Returns any","keywords":""},{"title":"StokesDialogComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/class/StokesDialogComponent","content":"StokesDialogComponent Hierarchy unknown StokesDialogComponent Index Constructors constructor Properties stokesstokesHeader Accessors fileNamesnoneTypestokesDialogVisible Methods rendersetStokessetStokesHeaderupdateStokesType Constructors constructor new StokesDialogComponent(props: any): StokesDialogComponent Overrides React.Component.constructor Parameters props: any Returns StokesDialogComponent Properties stokes stokes: Map&lt;string, IStokesFile&gt; stokesHeader stokesHeader: Map&lt;string, IFileInfoExtended&gt; Accessors fileNames get fileNames(): string[] Returns string[] noneType get noneType(): boolean Returns boolean stokesDialogVisible get stokesDialogVisible(): boolean Returns boolean Methods render render(): any Returns any setStokes setStokes(fileName: string, stoke: IStokesFile): void Parameters fileName: string stoke: IStokesFile Returns void setStokesHeader setStokesHeader(fileName: string, fileInfoExtended: IFileInfoExtended): void Parameters fileName: string fileInfoExtended: IFileInfoExtended Returns void updateStokesType updateStokesType(fileName: string, type: PolarizationType): void Parameters fileName: string type: PolarizationType Returns void","keywords":""},{"title":"TaskProgressDialogComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/class/TaskProgressDialogComponent","content":"TaskProgressDialogComponent Hierarchy unknown&lt;TaskProgressDialogComponentProps&gt; TaskProgressDialogComponent Index Constructors constructor Methods render Constructors constructor new TaskProgressDialogComponent(): TaskProgressDialogComponent Inherited from React.Component&lt;TaskProgressDialogComponentProps&gt;.constructor Returns TaskProgressDialogComponent Methods render render(): any Returns any","keywords":""},{"title":"ResizableDialogComponentProps","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/class/ResizableDialogComponentProps","content":"ResizableDialogComponentProps Index Constructors constructor Properties defaultHeightdefaultWidthdialogPropsenableResizinghelpTypeminHeightminWidthonResizeStop Constructors constructor new ResizableDialogComponentProps(): ResizableDialogComponentProps Returns ResizableDialogComponentProps Properties defaultHeight defaultHeight: number defaultWidth defaultWidth: number dialogProps dialogProps: IDialogProps enableResizing enableResizing: boolean optionalhelpType helpType?: HelpType optionalminHeight minHeight?: number optionalminWidth minWidth?: number optionalonResizeStop onResizeStop?: (newWidth: number, newHeight: number) =&gt; void Type declaration (newWidth: number, newHeight: number): void Parameters newWidth: number newHeight: number Returns void","keywords":""},{"title":"TelemetryDialogComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/class/TelemetryDialogComponent","content":"TelemetryDialogComponent Hierarchy unknown TelemetryDialogComponent Index Constructors constructor Properties allowUsageStats Methods optInClickedoptOutClickedrender Constructors constructor new TelemetryDialogComponent(props: any): TelemetryDialogComponent Overrides React.Component.constructor Parameters props: any Returns TelemetryDialogComponent Properties allowUsageStats allowUsageStats: boolean = true Methods optInClicked optInClicked(): Promise&lt;void&gt; Returns Promise&lt;void&gt; optOutClicked optOutClicked(): Promise&lt;void&gt; Returns Promise&lt;void&gt; publicrender render(): any Returns any","keywords":""},{"title":"VectorOverlayDialogComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/class/VectorOverlayDialogComponent","content":"VectorOverlayDialogComponent Hierarchy unknown VectorOverlayDialogComponent Index Constructors constructor Properties angularSourcecurrentTabdebiasingfractionalIntensityintensitySourcepixelAveragingpixelAveragingEnabledqErrorthresholdthresholdEnableduError Accessors configChanged Methods componentDidUpdaterendersetDefaultVectorOverlayParameters Constructors constructor new VectorOverlayDialogComponent(props: { appStore: AppStore }): VectorOverlayDialogComponent Overrides React.Component.constructor Parameters props: { appStore: AppStore } Returns VectorOverlayDialogComponent Properties angularSource angularSource: VectorOverlaySource currentTab currentTab: VectorOverlayDialogTabs = VectorOverlayDialogTabs.Configuration debiasing debiasing: boolean fractionalIntensity fractionalIntensity: boolean intensitySource intensitySource: VectorOverlaySource pixelAveraging pixelAveraging: number pixelAveragingEnabled pixelAveragingEnabled: boolean qError qError: number threshold threshold: number thresholdEnabled thresholdEnabled: boolean uError uError: number Accessors configChanged get configChanged(): boolean Returns boolean Methods componentDidUpdate componentDidUpdate(): void Returns void publicrender render(): any Returns any setDefaultVectorOverlayParameters setDefaultVectorOverlayParameters(): void Returns void","keywords":""},{"title":"WorkspaceDialogMode","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/enum/WorkspaceDialogMode","content":"WorkspaceDialogMode Index Enumeration Members HiddenOpenSave Enumeration Members Hidden Hidden: 0 Open Open: 2 Save Save: 1","keywords":""},{"title":"MemoryUnit","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Dialogs/enum/MemoryUnit","content":"MemoryUnit Index Enumeration Members BGBMBTBkB Enumeration Members B B: B GB GB: GB MB MB: MB TB TB: TB kB kB: kB","keywords":""},{"title":"HistogramSettingsTabs","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/enum/HistogramSettingsTabs","content":"HistogramSettingsTabs Index Enumeration Members CONFIGSTYLING Enumeration Members CONFIG CONFIG: 1 STYLING STYLING: 0","keywords":""},{"title":"FileInfoType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/enum/FileInfoType","content":"FileInfoType Index Enumeration Members CATALOG_FILECATALOG_HEADERIMAGE_FILEIMAGE_HEADERREGION_FILESAVE_IMAGESELECT_REGION Enumeration Members CATALOG_FILE CATALOG_FILE: catalog-file CATALOG_HEADER CATALOG_HEADER: catalog-header IMAGE_FILE IMAGE_FILE: image-file IMAGE_HEADER IMAGE_HEADER: image-header REGION_FILE REGION_FILE: region-file SAVE_IMAGE SAVE_IMAGE: save-image SELECT_REGION SELECT_REGION: select-region","keywords":""},{"title":"ImageViewLayer","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/enum/ImageViewLayer","content":"ImageViewLayer Index Enumeration Members CatalogDistanceMeasuringRegionCreatingRegionMoving Enumeration Members Catalog Catalog: catalog DistanceMeasuring DistanceMeasuring: distanceMeasuring RegionCreating RegionCreating: regionCreating RegionMoving RegionMoving: regionMoving","keywords":""},{"title":"SpatialProfilerSettingsTabs","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/enum/SpatialProfilerSettingsTabs","content":"SpatialProfilerSettingsTabs Index Enumeration Members COMPUTATIONSMOOTHINGSTYLING Enumeration Members COMPUTATION COMPUTATION: 2 SMOOTHING SMOOTHING: 1 STYLING STYLING: 0","keywords":""},{"title":"SpectralProfilerSettingsTabs","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/enum/SpectralProfilerSettingsTabs","content":"SpectralProfilerSettingsTabs Index Enumeration Members CONVERSIONFITTINGMOMENTSSMOOTHINGSTYLING Enumeration Members CONVERSION CONVERSION: 0 FITTING FITTING: 4 MOMENTS MOMENTS: 3 SMOOTHING SMOOTHING: 2 STYLING STYLING: 1","keywords":""},{"title":"StokesAnalysisSettingsTabs","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/enum/StokesAnalysisSettingsTabs","content":"StokesAnalysisSettingsTabs Index Enumeration Members CONVERSIONLINE_PLOT_STYLINGSCATTER_PLOT_STYLINGSMOOTHING Enumeration Members CONVERSION CONVERSION: 0 LINE_PLOT_STYLING LINE_PLOT_STYLING: 1 SCATTER_PLOT_STYLING SCATTER_PLOT_STYLING: 2 SMOOTHING SMOOTHING: 3","keywords":""},{"title":"getImageViewCanvas","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/function/getImageViewCanvas","content":"getImageViewCanvas Callable getImageViewCanvas(padding: Padding, colorbarPosition: string, backgroundColor?: string): HTMLCanvasElement Parameters padding: Padding colorbarPosition: string backgroundColor: string = &quot;rgba(255, 255, 255, 0)&quot; Returns HTMLCanvasElement","keywords":""},{"title":"getPanelCanvas","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/function/getPanelCanvas","content":"getPanelCanvas Callable getPanelCanvas(column: number, row: number, padding: Padding, colorbarPosition: string, backgroundColor?: string): HTMLCanvasElement Parameters column: number row: number padding: Padding colorbarPosition: string backgroundColor: string = &quot;rgba(255, 255, 255, 0)&quot; Returns HTMLCanvasElement","keywords":""},{"title":"AutoColorPickerComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/AutoColorPickerComponent","content":"AutoColorPickerComponent Hierarchy unknown&lt;AutoColorPickerComponentProps&gt; AutoColorPickerComponent Index Constructors constructor Properties displayColorPicker Accessors autoColor Methods render Constructors constructor new AutoColorPickerComponent(props: AutoColorPickerComponentProps): AutoColorPickerComponent Overrides React.Component&lt;AutoColorPickerComponentProps&gt;.constructor Parameters props: AutoColorPickerComponentProps Returns AutoColorPickerComponent Properties displayColorPicker displayColorPicker: boolean Accessors autoColor get autoColor(): string Returns string Methods publicrender render(): any Returns any","keywords":""},{"title":"carta-frontend/components/Shared","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared","content":"carta-frontend/components/Shared Index Classes AutoColorPickerComponentBiasContrastSelectComponentClearableNumericInputComponentColorPickerComponentCoordinateComponentExportImageMenuComponentFilterableTableComponentFilterableTableComponentPropsLinePlotComponentLinePlotComponentPropsLinePlotSettingsPanelComponentLinePlotSettingsPanelComponentPropsPlotTypeSelectorComponentPopoverSettingsComponentRegionSelectorComponentSafeNumericInputScatterPlotComponentScatterPlotComponentPropsScatterPlotSettingsPanelComponentScatterPlotSettingsPanelComponentPropsSimpleTableComponentSimpleTableComponentPropsSmoothingSettingsComponentSpectralSettingsComponent Enumerations InputTypeInteractionModeLinePlotSelectingModeLineSettingsPlotTypeScatterSettingsSmoothingTypeZoomMode Functions AnnotationMenuComponentCoordNumericInputErrorToastImageCoordNumericInputSuccessToastWarningToast Interfaces ClearableNumericInputPropsLineMarkerLinePlotInsideBoxMarkerLinePlotInsideTextMarkerPopoverSettingsComponentPropsSafeNumericInputProps Type Aliases ColumnFilter Variables AppToasterColormapComponentPointShapeSelectComponentProfilerInfoComponentSCALING_POPOVER_PROPSScalingSelectComponentVERTICAL_RANGE_PADDING Type Aliases ColumnFilter ColumnFilter: { columnFilter: string; index: number } Type declaration columnFilter: string index: number Variables constAppToaster AppToaster: any = ... constColormapComponent ColormapComponent: React.FC&lt;ColormapComponentProps&gt; = ... constPointShapeSelectComponent PointShapeSelectComponent: any = ... constProfilerInfoComponent ProfilerInfoComponent: React.FC&lt;ProfilerInfoComponentProps&gt; = ... constSCALING_POPOVER_PROPS SCALING_POPOVER_PROPS: Partial&lt;IPopoverProps&gt; = ... constScalingSelectComponent ScalingSelectComponent: React.FC&lt;ScalingComponentProps&gt; = ... constVERTICAL_RANGE_PADDING VERTICAL_RANGE_PADDING: 0.05 = 0.05","keywords":""},{"title":"BiasContrastSelectComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/BiasContrastSelectComponent","content":"BiasContrastSelectComponent Hierarchy unknown&lt;BiasContrastSelectComponentProps&gt; BiasContrastSelectComponent Index Constructors constructor Methods render Constructors constructor new BiasContrastSelectComponent(): BiasContrastSelectComponent Inherited from React.Component&lt;BiasContrastSelectComponentProps&gt;.constructor Returns BiasContrastSelectComponent Methods render render(): any Returns any","keywords":""},{"title":"ClearableNumericInputComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/ClearableNumericInputComponent","content":"ClearableNumericInputComponent Hierarchy unknown&lt;ClearableNumericInputProps&gt; ClearableNumericInputComponent Index Constructors constructor Methods componentDidMountcomponentDidUpdatehandleChangehandleOnBlurhandleOnFocusrendersetFocused Constructors constructor new ClearableNumericInputComponent(props: ClearableNumericInputProps): ClearableNumericInputComponent Overrides React.Component&lt;ClearableNumericInputProps&gt;.constructor Parameters props: ClearableNumericInputProps Returns ClearableNumericInputComponent Methods componentDidMount componentDidMount(): void Returns void componentDidUpdate componentDidUpdate(): void Returns void handleChange handleChange(ev: any): void Parameters ev: any Returns void handleOnBlur handleOnBlur(ev: FocusEvent&lt;HTMLInputElement&gt;): void Parameters ev: FocusEvent&lt;HTMLInputElement&gt; Returns void handleOnFocus handleOnFocus(): void Returns void render render(): any Returns any setFocused setFocused(value: boolean): void Parameters value: boolean Returns void","keywords":""},{"title":"ColorPickerComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/ColorPickerComponent","content":"ColorPickerComponent Hierarchy unknown&lt;ColorPickerComponentProps&gt; ColorPickerComponent Index Constructors constructor Properties displayColorPicker Methods render Constructors constructor new ColorPickerComponent(props: ColorPickerComponentProps): ColorPickerComponent Overrides React.Component&lt;ColorPickerComponentProps&gt;.constructor Parameters props: ColorPickerComponentProps Returns ColorPickerComponent Properties displayColorPicker displayColorPicker: boolean Methods publicrender render(): any Returns any","keywords":""},{"title":"CoordinateComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/CoordinateComponent","content":"CoordinateComponent Hierarchy unknown&lt;ICoordinateComponentProps&gt; CoordinateComponent Index Constructors constructor Methods render Constructors constructor new CoordinateComponent(): CoordinateComponent Inherited from React.Component&lt;ICoordinateComponentProps&gt;.constructor Returns CoordinateComponent Methods publicrender render(): any Returns any","keywords":""},{"title":"ExportImageMenuComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/ExportImageMenuComponent","content":"ExportImageMenuComponent Hierarchy unknown ExportImageMenuComponent Index Constructors constructor Methods render Constructors constructor new ExportImageMenuComponent(): ExportImageMenuComponent Inherited from React.Component.constructor Returns ExportImageMenuComponent Methods render render(): any Returns any","keywords":""},{"title":"FilterableTableComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/FilterableTableComponent","content":"FilterableTableComponent Hierarchy unknown&lt;FilterableTableComponentProps&gt; FilterableTableComponent Index Constructors constructor Methods render Constructors constructor new FilterableTableComponent(): FilterableTableComponent Inherited from React.Component&lt;FilterableTableComponentProps&gt;.constructor Returns FilterableTableComponent Methods render render(): any Returns any","keywords":""},{"title":"FilterableTableComponentProps","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/FilterableTableComponentProps","content":"FilterableTableComponentProps Index Constructors constructor Properties applyFilterWithEntercatalogTypecolumnHeaderscolumnWidthsdatasetdisableSortfilterflipRowSelectionloadingCellnumVisibleRowsonCompleteRenderselectedDataIndexshowSelectedDatasortedIndexMapsortedIndicessortingInfotableHeadersupdateByInfiniteScrollupdateColumnFilterupdateSelectedRowupdateSortRequestupdateTableColumnWidthupdateTableRef Constructors constructor new FilterableTableComponentProps(): FilterableTableComponentProps Returns FilterableTableComponentProps Properties optionalapplyFilterWithEnter applyFilterWithEnter?: () =&gt; void Type declaration (): void Returns void optionalcatalogType catalogType?: CatalogType columnHeaders columnHeaders: CatalogHeader[] optionalcolumnWidths columnWidths?: number[] dataset dataset: Map&lt;number, ProcessedColumnData&gt; optionaldisableSort disableSort?: boolean optionalfilter filter?: Map&lt;string, ControlHeader&gt; optionalflipRowSelection flipRowSelection?: (rowIndex: number) =&gt; void Type declaration (rowIndex: number): void Parameters rowIndex: number Returns void optionalloadingCell loadingCell?: boolean numVisibleRows numVisibleRows: number optionalonCompleteRender onCompleteRender?: () =&gt; void Type declaration (): void Returns void optionalselectedDataIndex selectedDataIndex?: number[] optionalshowSelectedData showSelectedData?: boolean optionalsortedIndexMap sortedIndexMap?: number[] optionalsortedIndices sortedIndices?: number[] optionalsortingInfo sortingInfo?: { columnName: string; sortingType: SortingType } Type declaration columnName: string sortingType: SortingType optionaltableHeaders tableHeaders?: ICatalogHeader[] optionalupdateByInfiniteScroll updateByInfiniteScroll?: (rowIndexEnd: number) =&gt; void Type declaration (rowIndexEnd: number): void Parameters rowIndexEnd: number Returns void optionalupdateColumnFilter updateColumnFilter?: (value: string, columnName: string) =&gt; void Type declaration (value: string, columnName: string): void Parameters value: string columnName: string Returns void optionalupdateSelectedRow updateSelectedRow?: (dataIndex: number[]) =&gt; void Type declaration (dataIndex: number[]): void Parameters dataIndex: number[] Returns void optionalupdateSortRequest updateSortRequest?: (columnName: string, sortingType: SortingType, columnIndex: number) =&gt; void Type declaration (columnName: string, sortingType: SortingType, columnIndex: number): void Parameters columnName: string sortingType: SortingType columnIndex: number Returns void optionalupdateTableColumnWidth updateTableColumnWidth?: (width: number, columnName: string) =&gt; void Type declaration (width: number, columnName: string): void Parameters width: number columnName: string Returns void optionalupdateTableRef updateTableRef?: (ref: Table) =&gt; void Type declaration (ref: Table): void Parameters ref: Table Returns void","keywords":""},{"title":"LinePlotComponentProps","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/LinePlotComponentProps","content":"LinePlotComponentProps Index Constructors constructor Properties borderWidthcommentsdarkModedatafullResolutionDatagraphClickedgraphCursorMovedgraphRightClickedgraphZoomResetgraphZoomedXgraphZoomedXYgraphZoomedYheightimageNameinsideBoxesinsideTextsisGroupSubPlotisSelectingInsideBoxlineColorlogYmarkersmouseEnteredmultiColorMultiLinesColorsmultiColorSingleLineColorsmultiPlotPropsMapopacityorderplotNameplotTypepointRadiusscrollZoomselectingModesetSelectedInsideBoxsetSelectedLinesetSelectedRangeshowLegendshowTopAxisshowXAxisLabelshowXAxisTicksshowYAxisLabelshowYAxisTickstickTypeXtickTypeYtopAxisTickFormatterwidthxLabelxMaxxMinxTickMarkLengthyLabelyMaxyMinyZeroLineColorzIndexzeroLineWidth Constructors constructor new LinePlotComponentProps(): LinePlotComponentProps Returns LinePlotComponentProps Properties optionalborderWidth borderWidth?: number optionalcomments comments?: string[] optionaldarkMode darkMode?: boolean optionaldata data?: Point2D[] optionalfullResolutionData fullResolutionData?: Point2D[] optionalgraphClicked graphClicked?: (x: number) =&gt; void Type declaration (x: number): void Parameters x: number Returns void optionalgraphCursorMoved graphCursorMoved?: (x: number) =&gt; void Type declaration (x: number): void Parameters x: number Returns void optionalgraphRightClicked graphRightClicked?: (x: number) =&gt; void Type declaration (x: number): void Parameters x: number Returns void optionalgraphZoomReset graphZoomReset?: () =&gt; void Type declaration (): void Returns void optionalgraphZoomedX graphZoomedX?: (xMin: number, xMax: number) =&gt; void Type declaration (xMin: number, xMax: number): void Parameters xMin: number xMax: number Returns void optionalgraphZoomedXY graphZoomedXY?: (xMin: number, xMax: number, yMin: number, yMax: number) =&gt; void Type declaration (xMin: number, xMax: number, yMin: number, yMax: number): void Parameters xMin: number xMax: number yMin: number yMax: number Returns void optionalgraphZoomedY graphZoomedY?: (yMin: number, yMax: number) =&gt; void Type declaration (yMin: number, yMax: number): void Parameters yMin: number yMax: number Returns void optionalheight height?: number optionalimageName imageName?: string optionalinsideBoxes insideBoxes?: LinePlotInsideBoxMarker[] optionalinsideTexts insideTexts?: LinePlotInsideTextMarker[] optionalisGroupSubPlot isGroupSubPlot?: boolean optionalisSelectingInsideBox isSelectingInsideBox?: boolean optionallineColor lineColor?: string optionallogY logY?: boolean optionalmarkers markers?: LineMarker[] optionalmouseEntered mouseEntered?: (value: boolean) =&gt; void Type declaration (value: boolean): void Parameters value: boolean Returns void optionalmultiColorMultiLinesColors multiColorMultiLinesColors?: Map&lt;string, string[]&gt; optionalmultiColorSingleLineColors multiColorSingleLineColors?: string[] optionalmultiPlotPropsMap multiPlotPropsMap?: Map&lt;string, MultiPlotProps&gt; optionalopacity opacity?: number optionalorder order?: number optionalplotName plotName?: string optionalplotType plotType?: PlotType optionalpointRadius pointRadius?: number optionalscrollZoom scrollZoom?: boolean optionalselectingMode selectingMode?: LinePlotSelectingMode optionalsetSelectedInsideBox setSelectedInsideBox?: (minX: number, maxX: number, minY: number, maxY: number) =&gt; void Type declaration (minX: number, maxX: number, minY: number, maxY: number): void Parameters minX: number maxX: number minY: number maxY: number Returns void optionalsetSelectedLine setSelectedLine?: (startX: number, endX: number, startY: number, endY: number) =&gt; void Type declaration (startX: number, endX: number, startY: number, endY: number): void Parameters startX: number endX: number startY: number endY: number Returns void optionalsetSelectedRange setSelectedRange?: (min: number, max: number) =&gt; void Type declaration (min: number, max: number): void Parameters min: number max: number Returns void optionalshowLegend showLegend?: boolean optionalshowTopAxis showTopAxis?: boolean optionalshowXAxisLabel showXAxisLabel?: boolean optionalshowXAxisTicks showXAxisTicks?: boolean optionalshowYAxisLabel showYAxisLabel?: boolean optionalshowYAxisTicks showYAxisTicks?: boolean optionaltickTypeX tickTypeX?: TickType optionaltickTypeY tickTypeY?: TickType optionaltopAxisTickFormatter topAxisTickFormatter?: (value: number, index: number, values: Tick[]) =&gt; string | number Type declaration (value: number, index: number, values: Tick[]): string | number Parameters value: number index: number values: Tick[] Returns string | number optionalwidth width?: number optionalxLabel xLabel?: string optionalxMax xMax?: number optionalxMin xMin?: number optionalxTickMarkLength xTickMarkLength?: number optionalyLabel yLabel?: string optionalyMax yMax?: number optionalyMin yMin?: number optionalyZeroLineColor yZeroLineColor?: string optionalzIndex zIndex?: boolean optionalzeroLineWidth zeroLineWidth?: number","keywords":""},{"title":"LinePlotComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/LinePlotComponent","content":"LinePlotComponent Hierarchy unknown&lt;LinePlotComponentProps&gt; LinePlotComponent Index Constructors constructor Properties chartAreaheighthoveredMarkerinteractionModeisMarkerDraggingisMouseEnteredpanStartselectionBoxEndselectionBoxStartwidth Accessors cursorShapeisPanningisSelectingzoomMode Methods dragBoundsFuncHorizontaldragBoundsFuncVerticalendInteractionsexportDataexportImagehideMouseEnterWidgetonKeyDownonMarkerDragEndonMarkerDragStartonMarkerDraggedonMouseEnteronMouseLeaveonMouseMoveonPlotRefUpdatedonStageClickonStageDoubleClickonStageMouseDownonStageMouseMoveonStageMouseUponStageRightClickonStageWheelrenderresizesetHoveredMarkershowMouseEnterWidgetstartPanningstartSelectionupdateChartupdatePanupdateSelection Constructors constructor new LinePlotComponent(props: LinePlotComponentProps): LinePlotComponent Overrides React.Component&lt;LinePlotComponentProps&gt;.constructor Parameters props: LinePlotComponentProps Returns LinePlotComponent Properties chartArea chartArea: ChartArea height height: number = 0 hoveredMarker hoveredMarker: LineMarker interactionMode interactionMode: InteractionMode = InteractionMode.NONE isMarkerDragging isMarkerDragging: boolean = false isMouseEntered isMouseEntered: boolean = false panStart panStart: number = 0 selectionBoxEnd selectionBoxEnd: { x: number; y: number } = ... Type declaration x: number y: number selectionBoxStart selectionBoxStart: { x: number; y: number } = ... Type declaration x: number y: number width width: number = 0 Accessors cursorShape get cursorShape(): string Returns string isPanning get isPanning(): boolean Returns boolean isSelecting get isSelecting(): boolean Returns boolean zoomMode get zoomMode(): ZoomMode Returns ZoomMode Methods dragBoundsFuncHorizontal dragBoundsFuncHorizontal(pos: Point2D, marker: LineMarker): { x: number; y: number } Parameters pos: Point2D marker: LineMarker Returns { x: number; y: number } x: number y: number dragBoundsFuncVertical dragBoundsFuncVertical(pos: Point2D, marker: LineMarker): { x: number; y: number } Parameters pos: Point2D marker: LineMarker Returns { x: number; y: number } x: number y: number endInteractions endInteractions(): void Returns void exportData exportData(): void Returns void exportImage exportImage(): void Returns void hideMouseEnterWidget hideMouseEnterWidget(): void Returns void onKeyDown onKeyDown(ev: KeyboardEvent): void Parameters ev: KeyboardEvent Returns void onMarkerDragEnd onMarkerDragEnd(): void Returns void onMarkerDragStart onMarkerDragStart(): void Returns void onMarkerDragged onMarkerDragged(ev: any, marker: LineMarker): void Parameters ev: any marker: LineMarker Returns void onMouseEnter onMouseEnter(): void Returns void onMouseLeave onMouseLeave(): void Returns void onMouseMove onMouseMove(): void Returns void onPlotRefUpdated onPlotRefUpdated(plotRef: any): void Parameters plotRef: any Returns void onStageClick onStageClick(ev: any): void Parameters ev: any Returns void onStageDoubleClick onStageDoubleClick(): void Returns void onStageMouseDown onStageMouseDown(ev: any): void Parameters ev: any Returns void onStageMouseMove onStageMouseMove(ev: any): void Parameters ev: any Returns void onStageMouseUp onStageMouseUp(ev: any): void Parameters ev: any Returns void onStageRightClick onStageRightClick(ev: any): void Parameters ev: any Returns void onStageWheel onStageWheel(ev: any): void Parameters ev: any Returns void render render(): any Returns any resize resize(w: any, h: any): void Parameters w: any h: any Returns void setHoveredMarker setHoveredMarker(marker: LineMarker): void Parameters marker: LineMarker Returns void showMouseEnterWidget showMouseEnterWidget(): void Returns void startPanning startPanning(x: number): void Parameters x: number Returns void startSelection startSelection(x: number, y: number): void Parameters x: number y: number Returns void updateChart updateChart(chartArea: ChartArea): void Parameters chartArea: ChartArea Returns void updatePan updatePan(x: number): void Parameters x: number Returns void updateSelection updateSelection(x: number, y: number): void Parameters x: number y: number Returns void","keywords":""},{"title":"LinePlotSettingsPanelComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/LinePlotSettingsPanelComponent","content":"LinePlotSettingsPanelComponent Hierarchy unknown&lt;LinePlotSettingsPanelComponentProps&gt; LinePlotSettingsPanelComponent Index Constructors constructor Methods render Constructors constructor new LinePlotSettingsPanelComponent(): LinePlotSettingsPanelComponent Inherited from React.Component&lt;LinePlotSettingsPanelComponentProps&gt;.constructor Returns LinePlotSettingsPanelComponent Methods render render(): any Returns any","keywords":""},{"title":"PlotTypeSelectorComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/PlotTypeSelectorComponent","content":"PlotTypeSelectorComponent Hierarchy unknown&lt;PlotTypeSelectComponentProps&gt; PlotTypeSelectorComponent Index Constructors constructor Methods render Constructors constructor new PlotTypeSelectorComponent(): PlotTypeSelectorComponent Inherited from React.Component&lt;PlotTypeSelectComponentProps&gt;.constructor Returns PlotTypeSelectorComponent Methods publicrender render(): any Returns any","keywords":""},{"title":"PopoverSettingsComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/PopoverSettingsComponent","content":"PopoverSettingsComponent Hierarchy unknown&lt;PopoverSettingsComponentProps&gt; PopoverSettingsComponent Index Constructors constructor Methods render Constructors constructor new PopoverSettingsComponent(): PopoverSettingsComponent Inherited from React.Component&lt;PopoverSettingsComponentProps&gt;.constructor Returns PopoverSettingsComponent Methods render render(): any Returns any","keywords":""},{"title":"RegionSelectorComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/RegionSelectorComponent","content":"RegionSelectorComponent Hierarchy unknown&lt;{ onFrameChanged?: (newFrame: FrameStore) =&gt; void; widgetStore: RegionWidgetStore }&gt; RegionSelectorComponent Index Constructors constructor Methods render Constructors constructor new RegionSelectorComponent(): RegionSelectorComponent Inherited from React.Component&lt;{widgetStore: RegionWidgetStore; onFrameChanged?: (newFrame: FrameStore) =&gt; void}&gt;.constructor Returns RegionSelectorComponent Methods publicrender render(): any Returns any","keywords":""},{"title":"LinePlotSettingsPanelComponentProps","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/LinePlotSettingsPanelComponentProps","content":"LinePlotSettingsPanelComponentProps Index Constructors constructor Properties clearXYBoundsdisableShowWCSAxishandleCoordinateChangedhandleLogScaleChangedhandleMarkerTextChangedhandleMeanRmsChangedhandleWcsAxisChangedhandleWcsValuesChangedhandleXMaxChangehandleXMinChangehandleYMaxChangehandleYMinChangeisAutoScaledXisAutoScaledYlineColorMaplineOptionslineOrderedKeyslinePlotPointSizelineWidthlogScaleYmarkerTextVisiblemeanRmsVisibleplotTypeprofileCoordinateOptionssetLineColorsetLinePlotPointSizesetLineWidthsetPlotTypeshowWCSAxisuseWcsValuesuserSelectedCoordinatexMaxValxMinValyMaxValyMinVal Constructors constructor new LinePlotSettingsPanelComponentProps(): LinePlotSettingsPanelComponentProps Returns LinePlotSettingsPanelComponentProps Properties optionalclearXYBounds clearXYBounds?: () =&gt; void Type declaration (): void Returns void optionaldisableShowWCSAxis disableShowWCSAxis?: boolean optionalhandleCoordinateChanged handleCoordinateChanged?: (changeEvent: ChangeEvent&lt;HTMLSelectElement&gt;) =&gt; void Type declaration (changeEvent: ChangeEvent&lt;HTMLSelectElement&gt;): void Parameters changeEvent: ChangeEvent&lt;HTMLSelectElement&gt; Returns void optionalhandleLogScaleChanged handleLogScaleChanged?: (changeEvent: ChangeEvent&lt;HTMLInputElement&gt;) =&gt; void Type declaration (changeEvent: ChangeEvent&lt;HTMLInputElement&gt;): void Parameters changeEvent: ChangeEvent&lt;HTMLInputElement&gt; Returns void optionalhandleMarkerTextChanged handleMarkerTextChanged?: (changeEvent: ChangeEvent&lt;HTMLInputElement&gt;) =&gt; void Type declaration (changeEvent: ChangeEvent&lt;HTMLInputElement&gt;): void Parameters changeEvent: ChangeEvent&lt;HTMLInputElement&gt; Returns void optionalhandleMeanRmsChanged handleMeanRmsChanged?: (changeEvent: ChangeEvent&lt;HTMLInputElement&gt;) =&gt; void Type declaration (changeEvent: ChangeEvent&lt;HTMLInputElement&gt;): void Parameters changeEvent: ChangeEvent&lt;HTMLInputElement&gt; Returns void optionalhandleWcsAxisChanged handleWcsAxisChanged?: (changeEvent: ChangeEvent&lt;HTMLInputElement&gt;) =&gt; void Type declaration (changeEvent: ChangeEvent&lt;HTMLInputElement&gt;): void Parameters changeEvent: ChangeEvent&lt;HTMLInputElement&gt; Returns void optionalhandleWcsValuesChanged handleWcsValuesChanged?: (changeEvent: ChangeEvent&lt;HTMLInputElement&gt;) =&gt; void Type declaration (changeEvent: ChangeEvent&lt;HTMLInputElement&gt;): void Parameters changeEvent: ChangeEvent&lt;HTMLInputElement&gt; Returns void optionalhandleXMaxChange handleXMaxChange?: (ev: any) =&gt; void Type declaration (ev: any): void Parameters ev: any Returns void optionalhandleXMinChange handleXMinChange?: (ev: any) =&gt; void Type declaration (ev: any): void Parameters ev: any Returns void optionalhandleYMaxChange handleYMaxChange?: (ev: any) =&gt; void Type declaration (ev: any): void Parameters ev: any Returns void optionalhandleYMinChange handleYMinChange?: (ev: any) =&gt; void Type declaration (ev: any): void Parameters ev: any Returns void optionalisAutoScaledX isAutoScaledX?: boolean optionalisAutoScaledY isAutoScaledY?: boolean lineColorMap lineColorMap: Map&lt;LineKey, string&gt; optionallineOptions lineOptions?: LineOption[] optionallineOrderedKeys lineOrderedKeys?: LineKey[] linePlotPointSize linePlotPointSize: number lineWidth lineWidth: number optionallogScaleY logScaleY?: boolean optionalmarkerTextVisible markerTextVisible?: boolean optionalmeanRmsVisible meanRmsVisible?: boolean plotType plotType: PlotType optionalprofileCoordinateOptions profileCoordinateOptions?: any setLineColor setLineColor: (lineKey: LineKey, color: string) =&gt; void Type declaration (lineKey: LineKey, color: string): void Parameters lineKey: LineKey color: string Returns void setLinePlotPointSize setLinePlotPointSize: (val: number) =&gt; void Type declaration (val: number): void Parameters val: number Returns void setLineWidth setLineWidth: (val: number) =&gt; void Type declaration (val: number): void Parameters val: number Returns void setPlotType setPlotType: (val: PlotType) =&gt; void Type declaration (val: PlotType): void Parameters val: PlotType Returns void optionalshowWCSAxis showWCSAxis?: boolean optionaluseWcsValues useWcsValues?: boolean optionaluserSelectedCoordinate userSelectedCoordinate?: string optionalxMaxVal xMaxVal?: number optionalxMinVal xMinVal?: number optionalyMaxVal yMaxVal?: number optionalyMinVal yMinVal?: number","keywords":""},{"title":"SafeNumericInput","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/SafeNumericInput","content":"SafeNumericInput Hierarchy unknown&lt;SafeNumericInputProps&gt; SafeNumericInput Index Constructors constructor Properties valueString Methods handleOnBlurhandleOnFocusrendersafeHandleValueChangedsetFocusedsetValueString Constructors constructor new SafeNumericInput(props: any): SafeNumericInput Overrides React.Component&lt;SafeNumericInputProps&gt;.constructor Parameters props: any Returns SafeNumericInput Properties valueString valueString: string = ... Methods handleOnBlur handleOnBlur(): void Returns void handleOnFocus handleOnFocus(): void Returns void render render(): any Returns any safeHandleValueChanged safeHandleValueChanged(valueAsNumber: number, valueAsString: string, inputElement: HTMLInputElement): void Parameters valueAsNumber: number valueAsString: string inputElement: HTMLInputElement Returns void setFocused setFocused(value: boolean): void Parameters value: boolean Returns void setValueString setValueString(valueString: string): void Parameters valueString: string Returns void","keywords":""},{"title":"ScatterPlotComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/ScatterPlotComponent","content":"ScatterPlotComponent Hierarchy unknown&lt;ScatterPlotComponentProps&gt; ScatterPlotComponent Index Constructors constructor Properties chartAreaheightinteractionModeisMouseEnteredselectionBoxEndselectionBoxStartwidth Accessors isPanningisSelectingzoomMode Methods endInteractionsexportDataexportImagehideMouseEnterWidgetonKeyDownonMouseEnteronMouseLeaveonMouseMoveonPlotRefUpdatedonStageClickonStageDoubleClickonStageMouseDownonStageMouseMoveonStageMouseUponStageWheelrenderresizeshowMouseEnterWidgetstartPanningstartSelectionupdateChartupdatePanupdateSelection Constructors constructor new ScatterPlotComponent(props: ScatterPlotComponentProps): ScatterPlotComponent Overrides React.Component&lt;ScatterPlotComponentProps&gt;.constructor Parameters props: ScatterPlotComponentProps Returns ScatterPlotComponent Properties chartArea chartArea: ChartArea height height: number = 0 interactionMode interactionMode: InteractionMode = InteractionMode.NONE isMouseEntered isMouseEntered: boolean = false selectionBoxEnd selectionBoxEnd: { x: number; y: number } = ... Type declaration x: number y: number selectionBoxStart selectionBoxStart: { x: number; y: number } = ... Type declaration x: number y: number width width: number = 0 Accessors isPanning get isPanning(): boolean Returns boolean isSelecting get isSelecting(): boolean Returns boolean zoomMode get zoomMode(): ZoomMode Returns ZoomMode Methods endInteractions endInteractions(): void Returns void exportData exportData(): void Returns void exportImage exportImage(): void Returns void hideMouseEnterWidget hideMouseEnterWidget(): void Returns void onKeyDown onKeyDown(ev: KeyboardEvent): void Parameters ev: KeyboardEvent Returns void onMouseEnter onMouseEnter(): void Returns void onMouseLeave onMouseLeave(): void Returns void onMouseMove onMouseMove(): void Returns void onPlotRefUpdated onPlotRefUpdated(plotRef: any): void Parameters plotRef: any Returns void onStageClick onStageClick(ev: any): void Parameters ev: any Returns void onStageDoubleClick onStageDoubleClick(): void Returns void onStageMouseDown onStageMouseDown(ev: any): void Parameters ev: any Returns void onStageMouseMove onStageMouseMove(ev: any): void Parameters ev: any Returns void onStageMouseUp onStageMouseUp(ev: any): void Parameters ev: any Returns void onStageWheel onStageWheel(ev: any): void Parameters ev: any Returns void render render(): any Returns any resize resize(w: any, h: any): void Parameters w: any h: any Returns void showMouseEnterWidget showMouseEnterWidget(): void Returns void startPanning startPanning(x: number, y: number): void Parameters x: number y: number Returns void startSelection startSelection(x: number, y: number): void Parameters x: number y: number Returns void updateChart updateChart(chartArea: ChartArea): void Parameters chartArea: ChartArea Returns void updatePan updatePan(x: number, y: number): void Parameters x: number y: number Returns void updateSelection updateSelection(x: number, y: number): void Parameters x: number y: number Returns void","keywords":""},{"title":"ScatterPlotSettingsPanelComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/ScatterPlotSettingsPanelComponent","content":"ScatterPlotSettingsPanelComponent Hierarchy unknown&lt;ScatterPlotSettingsPanelComponentProps&gt; ScatterPlotSettingsPanelComponent Index Constructors constructor Methods render Constructors constructor new ScatterPlotSettingsPanelComponent(): ScatterPlotSettingsPanelComponent Inherited from React.Component&lt;ScatterPlotSettingsPanelComponentProps&gt;.constructor Returns ScatterPlotSettingsPanelComponent Methods render render(): any Returns any","keywords":""},{"title":"ScatterPlotComponentProps","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/ScatterPlotComponentProps","content":"ScatterPlotComponentProps Index Constructors constructor Properties colorRangeEndcommentscursorNearestPointcursorXYdarkModedatadataBackgroundColordataStatgraphClickedgraphCursorMovedgraphRightClickedgraphZoomResetgraphZoomedXgraphZoomedXYgraphZoomedYheightimageNameindicatorInteractionChannelisGroupSubPlotlineColorlogYmouseEnteredmultiPlotPropsMapopacityplotNameplotTypepointRadiusscrollZoomshowLegendshowTopAxisshowXAxisLabelshowXAxisTickstickTypeXtickTypeYtopAxisTickFormatterupdateChartAreawidthxLabelxMaxxMinxTickMarkLengthxZeroLineColoryLabelyMaxyMinyZeroLineColorzIndexzeroLineWidth Constructors constructor new ScatterPlotComponentProps(): ScatterPlotComponentProps Returns ScatterPlotComponentProps Properties optionalcolorRangeEnd colorRangeEnd?: number optionalcomments comments?: string[] optionalcursorNearestPoint cursorNearestPoint?: { x: number; y: number } Type declaration x: number y: number optionalcursorXY cursorXY?: { image: Point3D; profiler: Point3D; unit: string } Type declaration image: Point3D profiler: Point3D unit: string optionaldarkMode darkMode?: boolean optionaldata data?: { x: number; y: number; z?: number }[] optionaldataBackgroundColor dataBackgroundColor?: string[] optionaldataStat dataStat?: { mean: number; rms: number } Type declaration mean: number rms: number optionalgraphClicked graphClicked?: (x: number, y: number, data: { x: number; y: number; z?: number }[]) =&gt; void Type declaration (x: number, y: number, data: { x: number; y: number; z?: number }[]): void Parameters x: number y: number data: { x: number; y: number; z?: number }[] Returns void optionalgraphCursorMoved graphCursorMoved?: (x: number, y: number) =&gt; void Type declaration (x: number, y: number): void Parameters x: number y: number Returns void optionalgraphRightClicked graphRightClicked?: (x: number) =&gt; void Type declaration (x: number): void Parameters x: number Returns void optionalgraphZoomReset graphZoomReset?: () =&gt; void Type declaration (): void Returns void optionalgraphZoomedX graphZoomedX?: (xMin: number, xMax: number) =&gt; void Type declaration (xMin: number, xMax: number): void Parameters xMin: number xMax: number Returns void optionalgraphZoomedXY graphZoomedXY?: (xMin: number, xMax: number, yMin: number, yMax: number) =&gt; void Type declaration (xMin: number, xMax: number, yMin: number, yMax: number): void Parameters xMin: number xMax: number yMin: number yMax: number Returns void optionalgraphZoomedY graphZoomedY?: (yMin: number, yMax: number) =&gt; void Type declaration (yMin: number, yMax: number): void Parameters yMin: number yMax: number Returns void optionalheight height?: number optionalimageName imageName?: string optionalindicatorInteractionChannel indicatorInteractionChannel?: { currentChannel: Point3D; hoveredChannel: Point3D; start: boolean } Type declaration currentChannel: Point3D hoveredChannel: Point3D start: boolean optionalisGroupSubPlot isGroupSubPlot?: boolean optionallineColor lineColor?: string optionallogY logY?: boolean optionalmouseEntered mouseEntered?: (value: boolean) =&gt; void Type declaration (value: boolean): void Parameters value: boolean Returns void optionalmultiPlotPropsMap multiPlotPropsMap?: Map&lt;string, MultiPlotProps&gt; optionalopacity opacity?: number optionalplotName plotName?: string optionalplotType plotType?: PlotType optionalpointRadius pointRadius?: number optionalscrollZoom scrollZoom?: boolean optionalshowLegend showLegend?: boolean optionalshowTopAxis showTopAxis?: boolean optionalshowXAxisLabel showXAxisLabel?: boolean optionalshowXAxisTicks showXAxisTicks?: boolean optionaltickTypeX tickTypeX?: TickType optionaltickTypeY tickTypeY?: TickType optionaltopAxisTickFormatter topAxisTickFormatter?: (value: number, index: number, values: Tick[]) =&gt; string | number Type declaration (value: number, index: number, values: Tick[]): string | number Parameters value: number index: number values: Tick[] Returns string | number optionalupdateChartArea updateChartArea?: (chartArea: ChartArea) =&gt; void Type declaration (chartArea: ChartArea): void Parameters chartArea: ChartArea Returns void optionalwidth width?: number optionalxLabel xLabel?: string optionalxMax xMax?: number optionalxMin xMin?: number optionalxTickMarkLength xTickMarkLength?: number optionalxZeroLineColor xZeroLineColor?: string optionalyLabel yLabel?: string optionalyMax yMax?: number optionalyMin yMin?: number optionalyZeroLineColor yZeroLineColor?: string optionalzIndex zIndex?: boolean optionalzeroLineWidth zeroLineWidth?: number","keywords":""},{"title":"SimpleTableComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/SimpleTableComponent","content":"SimpleTableComponent Hierarchy unknown&lt;SimpleTableComponentProps&gt; SimpleTableComponent Index Constructors constructor Methods render Constructors constructor new SimpleTableComponent(): SimpleTableComponent Inherited from React.Component&lt;SimpleTableComponentProps&gt;.constructor Returns SimpleTableComponent Methods render render(): any Returns any","keywords":""},{"title":"SimpleTableComponentProps","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/SimpleTableComponentProps","content":"SimpleTableComponentProps Index Constructors constructor Properties boldIndexcolumnHeaderscolumnWidthsdatasetdefaultRowHeightenableGhostCellsisIndexZeronumVisibleRowsonColumnWidthChangedtooltipIndexupdateTableRef Constructors constructor new SimpleTableComponentProps(): SimpleTableComponentProps Returns SimpleTableComponentProps Properties optionalboldIndex boldIndex?: number[] columnHeaders columnHeaders: CatalogHeader[] optionalcolumnWidths columnWidths?: number[] dataset dataset: Map&lt;number, any&gt; optionaldefaultRowHeight defaultRowHeight?: number optionalenableGhostCells enableGhostCells?: boolean optionalisIndexZero isIndexZero?: boolean numVisibleRows numVisibleRows: number optionalonColumnWidthChanged onColumnWidthChanged?: (index: number, size: number) =&gt; void Type declaration (index: number, size: number): void Parameters index: number size: number Returns void optionaltooltipIndex tooltipIndex?: number optionalupdateTableRef updateTableRef?: (ref: Table) =&gt; void Type declaration (ref: Table): void Parameters ref: Table Returns void","keywords":""},{"title":"ScatterPlotSettingsPanelComponentProps","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/ScatterPlotSettingsPanelComponentProps","content":"ScatterPlotSettingsPanelComponentProps Index Constructors constructor Properties colorMapequalAxeshandleEqualAxesValuesChangedhandleInvertedColorMapChangedinvertedColorMappointTransparencyscatterPlotPointSizesetColormapsetPointTransparencysetScatterPlotPointSize Constructors constructor new ScatterPlotSettingsPanelComponentProps(): ScatterPlotSettingsPanelComponentProps Returns ScatterPlotSettingsPanelComponentProps Properties colorMap colorMap: string equalAxes equalAxes: boolean handleEqualAxesValuesChanged handleEqualAxesValuesChanged: (changeEvent: ChangeEvent&lt;HTMLInputElement&gt;) =&gt; void Type declaration (changeEvent: ChangeEvent&lt;HTMLInputElement&gt;): void Parameters changeEvent: ChangeEvent&lt;HTMLInputElement&gt; Returns void handleInvertedColorMapChanged handleInvertedColorMapChanged: (changeEvent: ChangeEvent&lt;HTMLInputElement&gt;) =&gt; void Type declaration (changeEvent: ChangeEvent&lt;HTMLInputElement&gt;): void Parameters changeEvent: ChangeEvent&lt;HTMLInputElement&gt; Returns void invertedColorMap invertedColorMap: boolean pointTransparency pointTransparency: number scatterPlotPointSize scatterPlotPointSize: number setColormap setColormap: (val: string) =&gt; void Type declaration (val: string): void Parameters val: string Returns void setPointTransparency setPointTransparency: (val: number) =&gt; void Type declaration (val: number): void Parameters val: number Returns void setScatterPlotPointSize setScatterPlotPointSize: (val: number) =&gt; void Type declaration (val: number): void Parameters val: number Returns void","keywords":""},{"title":"SmoothingSettingsComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/SmoothingSettingsComponent","content":"SmoothingSettingsComponent Hierarchy unknown&lt;{ diableDecimation?: boolean; diableStyle?: boolean; disableColorAndLineWidth?: boolean; smoothingStore: ProfileSmoothingStore }&gt; SmoothingSettingsComponent Index Constructors constructor Methods render Constructors constructor new SmoothingSettingsComponent(): SmoothingSettingsComponent Inherited from React.Component&lt;{ smoothingStore: ProfileSmoothingStore; diableDecimation?: boolean; diableStyle?: boolean; disableColorAndLineWidth?: boolean; }&gt;.constructor Returns SmoothingSettingsComponent Methods render render(): any Returns any","keywords":""},{"title":"InputType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/enum/InputType","content":"InputType Index Enumeration Members SizeXCoordYCoord Enumeration Members Size Size: Size XCoord XCoord: XCoord YCoord YCoord: YCoord","keywords":""},{"title":"SpectralSettingsComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/class/SpectralSettingsComponent","content":"SpectralSettingsComponent Hierarchy unknown&lt;{ disable: boolean; disableChannelOption?: boolean; frame: FrameStore; onSpectralCoordinateChange: (coordinate: string) =&gt; void; onSpectralCoordinateChangeSecondary?: (coordinate: string) =&gt; void; onSpectralSystemChange: (system: string) =&gt; void; secondaryAxisCursorInfoVisible?: boolean }&gt; SpectralSettingsComponent Index Constructors constructor Methods render Constructors constructor new SpectralSettingsComponent(): SpectralSettingsComponent Inherited from React.Component&lt;{ frame: FrameStore; onSpectralCoordinateChange: (coordinate: string) =&gt; void; onSpectralCoordinateChangeSecondary?: (coordinate: string) =&gt; void; onSpectralSystemChange: (system: string) =&gt; void; disable: boolean; disableChannelOption?: boolean; secondaryAxisCursorInfoVisible?: boolean; }&gt;.constructor Returns SpectralSettingsComponent Methods render render(): any Returns any","keywords":""},{"title":"InteractionMode","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/enum/InteractionMode","content":"InteractionMode Index Enumeration Members NONEPANNINGSELECTING Enumeration Members NONE NONE: 0 PANNING PANNING: 2 SELECTING SELECTING: 1","keywords":""},{"title":"LinePlotSelectingMode","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/enum/LinePlotSelectingMode","content":"LinePlotSelectingMode Index Enumeration Members BOXHORIZONTALLINEVERTICAL Enumeration Members BOX BOX: 0 HORIZONTAL HORIZONTAL: 1 LINE LINE: 3 VERTICAL VERTICAL: 2","keywords":""},{"title":"PlotType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/enum/PlotType","content":"PlotType Index Enumeration Members LINESPOINTSSTEPS Enumeration Members LINES LINES: Lines POINTS POINTS: Points STEPS STEPS: Steps","keywords":""},{"title":"LineSettings","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/enum/LineSettings","content":"LineSettings Index Enumeration Members LINE_WIDTH_STEP_SIZEMAX_POINT_SIZEMAX_WIDTHMIN_POINT_SIZEMIN_WIDTHPOINT_SIZE_STEP_SIZE Enumeration Members LINE_WIDTH_STEP_SIZE LINE_WIDTH_STEP_SIZE: 0.5 MAX_POINT_SIZE MAX_POINT_SIZE: 10 MAX_WIDTH MAX_WIDTH: 10 MIN_POINT_SIZE MIN_POINT_SIZE: 0.5 MIN_WIDTH MIN_WIDTH: 0.5 POINT_SIZE_STEP_SIZE POINT_SIZE_STEP_SIZE: 0.5","keywords":""},{"title":"ScatterSettings","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/enum/ScatterSettings","content":"ScatterSettings Index Enumeration Members MAX_POINT_SIZEMAX_TRANSPARENCYMIN_POINT_SIZEMIN_TRANSPARENCYPOINT_SIZE_STEP_SIZETRANSPARENCY_STEP_SIZE Enumeration Members MAX_POINT_SIZE MAX_POINT_SIZE: 10 MAX_TRANSPARENCY MAX_TRANSPARENCY: 1 MIN_POINT_SIZE MIN_POINT_SIZE: 0.5 MIN_TRANSPARENCY MIN_TRANSPARENCY: 0.1 POINT_SIZE_STEP_SIZE POINT_SIZE_STEP_SIZE: 0.5 TRANSPARENCY_STEP_SIZE TRANSPARENCY_STEP_SIZE: 0.1","keywords":""},{"title":"SmoothingType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/enum/SmoothingType","content":"SmoothingType Index Enumeration Members BINNINGBOXCARDECIMATIONGAUSSIANHANNINGNONESAVITZKY_GOLAY Enumeration Members BINNING BINNING: Binning BOXCAR BOXCAR: Boxcar DECIMATION DECIMATION: Decimation GAUSSIAN GAUSSIAN: Gaussian HANNING HANNING: Hanning NONE NONE: None SAVITZKY_GOLAY SAVITZKY_GOLAY: Savitzky-Golay","keywords":""},{"title":"ZoomMode","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/enum/ZoomMode","content":"ZoomMode Index Enumeration Members NONEXXYY Enumeration Members NONE NONE: 0 X X: 1 XY XY: 3 Y Y: 2","keywords":""},{"title":"AnnotationMenuComponent","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/function/AnnotationMenuComponent","content":"AnnotationMenuComponent Callable AnnotationMenuComponent(__namedParameters: AnnotationMenuComponentProps): any Parameters __namedParameters: AnnotationMenuComponentProps Returns any","keywords":""},{"title":"ErrorToast","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/function/ErrorToast","content":"ErrorToast Callable ErrorToast(message: string): IToastProps Parameters message: string Returns IToastProps","keywords":""},{"title":"CoordNumericInput","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/function/CoordNumericInput","content":"CoordNumericInput Callable CoordNumericInput(__namedParameters: CoordNumericInputProps): any Parameters __namedParameters: CoordNumericInputProps Returns any","keywords":""},{"title":"ImageCoordNumericInput","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/function/ImageCoordNumericInput","content":"ImageCoordNumericInput Callable ImageCoordNumericInput(__namedParameters: ImageCoordNumericInputProps): any Parameters __namedParameters: ImageCoordNumericInputProps Returns any","keywords":""},{"title":"SuccessToast","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/function/SuccessToast","content":"SuccessToast Callable SuccessToast(icon: IconName, message: string, timeout?: number): IToastProps Parameters icon: IconName message: string optionaltimeout: number Returns IToastProps","keywords":""},{"title":"WarningToast","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/function/WarningToast","content":"WarningToast Callable WarningToast(message: string): IToastProps Parameters message: string Returns IToastProps","keywords":""},{"title":"ClearableNumericInputProps","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/interface/ClearableNumericInputProps","content":"ClearableNumericInputProps Hierarchy unknown ClearableNumericInputProps Index Properties additionalFormContentdisplayExponentialfocusedinlineintegerOnlylabellabelInfomaxminonValueChangedonValueClearedresetDisabledshowTooltiptooltipContenttooltipPlacementvalue Properties optionaladditionalFormContent additionalFormContent?: ReactNode optionaldisplayExponential displayExponential?: boolean optionalfocused focused?: boolean optionalinline inline?: boolean optionalintegerOnly integerOnly?: boolean label label: string optionallabelInfo labelInfo?: any optionalmax max?: number optionalmin min?: number onValueChanged onValueChanged: (val: number) =&gt; void Type declaration (val: number): void Parameters val: number Returns void onValueCleared onValueCleared: () =&gt; void Type declaration (): void Returns void optionalresetDisabled resetDisabled?: boolean optionalshowTooltip showTooltip?: boolean optionaltooltipContent tooltipContent?: string optionaltooltipPlacement tooltipPlacement?: Placement value value: number","keywords":""},{"title":"LineMarker","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/interface/LineMarker","content":"LineMarker Index Properties colordashdragCustomBoundarydragMovedraggablehorizontalidinteractionMarkerisMouseMovelabelopacityvaluewidth Properties optionalcolor color?: string optionaldash dash?: number[] optionaldragCustomBoundary dragCustomBoundary?: { xMax?: number; xMin?: number; yMax?: number; yMin?: number } Type declaration optionalxMax?: number optionalxMin?: number optionalyMax?: number optionalyMin?: number optionaldragMove dragMove?: (val: number) =&gt; void Type declaration (val: number): void Parameters val: number Returns void optionaldraggable draggable?: boolean horizontal horizontal: boolean id id: string optionalinteractionMarker interactionMarker?: boolean optionalisMouseMove isMouseMove?: boolean optionallabel label?: string optionalopacity opacity?: number value value: number optionalwidth width?: number","keywords":""},{"title":"LinePlotInsideBoxMarker","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/interface/LinePlotInsideBoxMarker","content":"LinePlotInsideBoxMarker Index Properties boundarycoloropacitystrokeColortext Properties boundary boundary: { xMax: number; xMin: number; yMax: number; yMin: number } Type declaration xMax: number xMin: number yMax: number yMin: number optionalcolor color?: string optionalopacity opacity?: number optionalstrokeColor strokeColor?: string optionaltext text?: string","keywords":""},{"title":"LinePlotInsideTextMarker","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/interface/LinePlotInsideTextMarker","content":"LinePlotInsideTextMarker Index Properties colorfontSizeopacitytextxy Properties optionalcolor color?: string optionalfontSize fontSize?: number optionalopacity opacity?: number text text: string x x: number y y: number","keywords":""},{"title":"PopoverSettingsComponentProps","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/interface/PopoverSettingsComponentProps","content":"PopoverSettingsComponentProps Index Properties contentWidthisOpenonHideClickedonShowClicked Properties contentWidth contentWidth: number isOpen isOpen: boolean optionalonHideClicked onHideClicked?: () =&gt; void Type declaration (): void Returns void optionalonShowClicked onShowClicked?: () =&gt; void Type declaration (): void Returns void","keywords":""},{"title":"SafeNumericInputProps","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-components/Shared/interface/SafeNumericInputProps","content":"SafeNumericInputProps Hierarchy unknown SafeNumericInputProps Index Properties intOnly Methods onBluronKeyDown Properties optionalintOnly intOnly?: boolean Methods optionalonBlur onBlur(ev: FocusEvent&lt;HTMLInputElement&gt;): void Parameters ev: FocusEvent&lt;HTMLInputElement&gt; Returns void optionalonKeyDown onKeyDown(ev: KeyboardEvent&lt;HTMLInputElement&gt;): void Parameters ev: KeyboardEvent&lt;HTMLInputElement&gt; Returns void","keywords":""},{"title":"carta-frontend/models","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models","content":"carta-frontend/models Index Classes AbstractCatalogProfileStoreAngularSizeCatalogControlMapCompressionQualityControlMapCursorPositionEventFreqLayoutConfigPoint2DPresetLayoutRegionCreationModeSnippetThemeTileCacheTileCoordinateTransform2DWCSPoint2DWCSTypeZoomZoomPoint Enumerations AngularSizeUnitCatalogOverlayCatalogSystemTypeCatalogTypeCursorInfoVisibilityFileFilterModeFrequencyUnitImagePanelModeIntensityUnitTypePOLARIZATIONSSpectralColorMapSpectralSystemSpectralTypeSpectralUnitWCSMatchingType Functions FindIntensityUnitTypeGenCoordinateLabelGetCommonIntensityOptionsGetFreqInGHzGetIntensityConversionGetIntensityOptionsIsIntensitySupportedIsSpectralMatchingTypeValidIsSpectralSystemSupportedIsSpectralTypeSupportedIsSpectralUnitSupportedIsWCSMatchingTypeValidStatsTypeStringToFileListFilterMode Interfaces CatalogInfoChannelInfoCursorInfoFrameViewLineOptionSpectralInfoSpectralTypeSetWorkspaceWorkspaceContourConfigWorkspaceFileWorkspaceListItemWorkspaceRegionWorkspaceRenderConfigWorkspaceVectorOverlayConfig Type Aliases FileIdIntensityConfigIntensityConversionLineKeyRegionId Variables CARTA_INFOCOMPUTED_POLARIZATIONSFULL_POLARIZATIONSMOMENT_TEXTPOLARIZATION_LABELSSPECTRAL_COORDS_SUPPORTEDSPECTRAL_DEFAULT_UNITSPECTRAL_MATCHING_TYPESSPECTRAL_TYPE_STRINGSTANDARD_POLARIZATIONSSTANDARD_SPECTRAL_TYPE_SETSSTATISTICS_TEXTSUPPORTED_STATISTICS_TYPESVALID_COORDINATESVALID_XY_COORDINATES Type Aliases FileId FileId: number IntensityConfig IntensityConfig: { bmaj?: number[]; bmin?: number[]; cdelta1?: number; cdelta2?: number; freqGHz?: number[]; nativeIntensityUnit: string } Type declaration optionalbmaj?: number[] optionalbmin?: number[] optionalcdelta1?: number optionalcdelta2?: number optionalfreqGHz?: number[] nativeIntensityUnit: string IntensityConversion IntensityConversion: (values: Float32Array | Float64Array) =&gt; Float32Array | Float64Array Type declaration (values: Float32Array | Float64Array): Float32Array | Float64Array Parameters values: Float32Array | Float64Array Returns Float32Array | Float64Array LineKey LineKey: string | number RegionId RegionId: number Variables constCARTA_INFO CARTA_INFO: { acronym: string; date: any; fullName: string; version: any; year: any } = ... Type declaration acronym: string date: any fullName: string version: any year: any constCOMPUTED_POLARIZATIONS COMPUTED_POLARIZATIONS: Map&lt;number, string&gt; = ... constFULL_POLARIZATIONS FULL_POLARIZATIONS: Map&lt;number, string&gt; = ... constMOMENT_TEXT MOMENT_TEXT: Map&lt;Moment, { tag: string; text: string }&gt; = ... constPOLARIZATION_LABELS POLARIZATION_LABELS: Map&lt;string, string&gt; = ... constSPECTRAL_COORDS_SUPPORTED SPECTRAL_COORDS_SUPPORTED: Map&lt;string, { type: SpectralType; unit: SpectralUnit }&gt; = ... constSPECTRAL_DEFAULT_UNIT SPECTRAL_DEFAULT_UNIT: Map&lt;SpectralType, SpectralUnit&gt; = ... constSPECTRAL_MATCHING_TYPES SPECTRAL_MATCHING_TYPES: SpectralType[] = ... constSPECTRAL_TYPE_STRING SPECTRAL_TYPE_STRING: Map&lt;SpectralType, string&gt; = ... constSTANDARD_POLARIZATIONS STANDARD_POLARIZATIONS: Map&lt;number, string&gt; = ... constSTANDARD_SPECTRAL_TYPE_SETS STANDARD_SPECTRAL_TYPE_SETS: SpectralTypeSet[] = ... constSTATISTICS_TEXT STATISTICS_TEXT: Map&lt;StatsType, string&gt; = ... constSUPPORTED_STATISTICS_TYPES SUPPORTED_STATISTICS_TYPES: any[] = ... constVALID_COORDINATES VALID_COORDINATES: string[] = ... constVALID_XY_COORDINATES VALID_XY_COORDINATES: string[] = ...","keywords":""},{"title":"AngularSize","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/class/AngularSize","content":"AngularSize Index Constructors constructor Properties unitvalue Methods convertFromArcsecconvertValueFromArcsec Constructors constructor new AngularSize(): AngularSize Returns AngularSize Properties unit unit: AngularSizeUnit value value: number Methods publicstaticconvertFromArcsec convertFromArcsec(arcsec: number, supportMilliarcsec?: boolean): AngularSize Parameters arcsec: number supportMilliarcsec: boolean = false Returns AngularSize publicstaticconvertValueFromArcsec convertValueFromArcsec(arcsec: number, dstUnit: AngularSizeUnit): number Parameters arcsec: number dstUnit: AngularSizeUnit Returns number","keywords":""},{"title":"CatalogControlMap","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/class/CatalogControlMap","content":"CatalogControlMap Hierarchy ControlMap CatalogControlMap Index Constructors constructor Properties destinationglheightmaxPointminPointsourcetexturewidth Methods createTexturegetTextureXhasTextureForContextsetGridsetMinMaxPointupdateCatalogBoundary Constructors constructor new CatalogControlMap(src: FrameStore, dst: FrameStore, astTransform: FrameSet, width: number, height: number): CatalogControlMap Overrides ControlMap.constructor Parameters src: FrameStore dst: FrameStore astTransform: FrameSet width: number height: number Returns CatalogControlMap Properties readonlydestination destination: FrameStore Inherited from ControlMap.destination gl gl: WebGL2RenderingContext Inherited from ControlMap.gl readonlyheight height: number Inherited from ControlMap.height maxPoint maxPoint: Point2D Inherited from ControlMap.maxPoint minPoint minPoint: Point2D Inherited from ControlMap.minPoint readonlysource source: FrameStore Inherited from ControlMap.source texture texture: WebGLTexture Inherited from ControlMap.texture readonlywidth width: number Inherited from ControlMap.width Methods createTexture createTexture(gl: WebGL2RenderingContext): void Inherited from ControlMap.createTexture Parameters gl: WebGL2RenderingContext Returns void getTextureX getTextureX(gl: WebGL2RenderingContext): WebGLTexture Overrides ControlMap.getTextureX Parameters gl: WebGL2RenderingContext Returns WebGLTexture hasTextureForContext hasTextureForContext(gl: WebGL2RenderingContext): boolean Inherited from ControlMap.hasTextureForContext Parameters gl: WebGL2RenderingContext Returns boolean setGrid setGrid(astTransform?: Mapping): void Inherited from ControlMap.setGrid Parameters optionalastTransform: Mapping Returns void setMinMaxPoint setMinMaxPoint(minX: any, minY: any, maxX: any, maxY: any): void Inherited from ControlMap.setMinMaxPoint Parameters minX: any minY: any maxX: any maxY: any Returns void updateCatalogBoundary updateCatalogBoundary(): void Returns void","keywords":""},{"title":"abstractAbstractCatalogProfileStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/class/AbstractCatalogProfileStore","content":"abstractAbstractCatalogProfileStore Hierarchy AbstractCatalogProfileStore CatalogProfileStoreCatalogOnlineQueryProfileStore Index Constructors constructor Properties catalogControlHeadercatalogCoordinateSystemcatalogFilterRequestcatalogHeadercatalogInfocatalogTypefilterDataSizefilterIndexMaploadingDatanumVisibleRowsprogressselectedPointIndicessortedIndexMapsortingInfoupdateModeupdateTableViewupdatingDataStreamCoordinateSystemName Accessors activedSystemautoScrollRowNumbercatalogDatacatalogFileIdcatalogOriginalDatadisplayedColumnHeadershasFilterinitCatalogControlHeaderisFileBasedCatalogloadOntoImageregionSelectedselectedDatashouldUpdateDatasystemCoordinateMaptableColumnWidtsupdateRequestDataSize Methods clearDataget1DPlotDataget2DPlotDatagetOriginIndicesgetSortedIndicesgetUserFiltersresetCatalogFilterRequestresetFilterRequestresetUserFilterssetCatalogCoordinateSystemsetColumnFiltersetHeaderDisplaysetLoadingDataStatussetMaxRowssetProgresssetSelectedPointIndicessetSortingInfosetTableColumnWidthsetUpdateModesetUpdatingDataStreamupdateTableStatusgetCatalogSystem Constructors constructor new AbstractCatalogProfileStore(catalogType: CatalogType, catalogData: Map&lt;number, ProcessedColumnData&gt;): AbstractCatalogProfileStore Parameters catalogType: CatalogType catalogData: Map&lt;number, ProcessedColumnData&gt; Returns AbstractCatalogProfileStore Properties abstractcatalogControlHeader catalogControlHeader: Map&lt;string, ControlHeader&gt; catalogCoordinateSystem catalogCoordinateSystem: { coordinate: { x: CatalogOverlay; y: CatalogOverlay }; epoch: string; equinox: string; system: CatalogSystemType } Type declaration coordinate: { x: CatalogOverlay; y: CatalogOverlay } x: CatalogOverlay y: CatalogOverlay epoch: string equinox: string system: CatalogSystemType catalogFilterRequest catalogFilterRequest: CatalogFilterRequest abstractcatalogHeader catalogHeader: ICatalogHeader[] abstractcatalogInfo catalogInfo: CatalogInfo catalogType catalogType: CatalogType filterDataSize filterDataSize: number filterIndexMap filterIndexMap: number[] loadingData loadingData: boolean abstractnumVisibleRows numVisibleRows: number progress progress: number selectedPointIndices selectedPointIndices: number[] sortedIndexMap sortedIndexMap: number[] sortingInfo sortingInfo: { columnName: string; sortingType: SortingType } Type declaration columnName: string sortingType: SortingType updateMode updateMode: CatalogUpdateMode updateTableView updateTableView: boolean updatingDataStream updatingDataStream: boolean publicstaticreadonlyCoordinateSystemName CoordinateSystemName: Map&lt;CatalogSystemType, string&gt; = ... Accessors activedSystem get activedSystem(): { x: CatalogOverlay; y: CatalogOverlay } Returns { x: CatalogOverlay; y: CatalogOverlay } x: CatalogOverlay y: CatalogOverlay autoScrollRowNumber get autoScrollRowNumber(): IRegion Returns IRegion catalogData get catalogData(): Map&lt;number, ProcessedColumnData&gt; Returns Map&lt;number, ProcessedColumnData&gt; catalogFileId get catalogFileId(): number Returns number catalogOriginalData get catalogOriginalData(): Map&lt;number, ProcessedColumnData&gt; Returns Map&lt;number, ProcessedColumnData&gt; displayedColumnHeaders get displayedColumnHeaders(): CatalogHeader[] Returns CatalogHeader[] hasFilter get hasFilter(): boolean Returns boolean abstractinitCatalogControlHeader get initCatalogControlHeader(): Map&lt;string, ControlHeader&gt; Returns Map&lt;string, ControlHeader&gt; isFileBasedCatalog get isFileBasedCatalog(): boolean Returns boolean abstractloadOntoImage get loadOntoImage(): boolean Returns boolean regionSelected get regionSelected(): number Returns number selectedData get selectedData(): Map&lt;number, ProcessedColumnData&gt; Returns Map&lt;number, ProcessedColumnData&gt; abstractshouldUpdateData get shouldUpdateData(): boolean Returns boolean systemCoordinateMap get systemCoordinateMap(): Map&lt;CatalogSystemType, { x: CatalogOverlay; y: CatalogOverlay }&gt; Returns Map&lt;CatalogSystemType, { x: CatalogOverlay; y: CatalogOverlay }&gt; tableColumnWidts get tableColumnWidts(): number[] Returns number[] abstractupdateRequestDataSize get updateRequestDataSize(): any Returns any Methods clearData clearData(): void Returns void publicget1DPlotData get1DPlotData(column: string): { headerInfo: ICatalogHeader; wcsData?: TypedArray } Parameters column: string Returns { headerInfo: ICatalogHeader; wcsData?: TypedArray } headerInfo: ICatalogHeader optionalwcsData?: TypedArray publicget2DPlotData get2DPlotData(xColumnName: string, yColumnName: string, columnsData: Map&lt;number, ProcessedColumnData&gt;): { wcsX?: number[]; wcsY?: number[]; xHeaderInfo: ICatalogHeader; yHeaderInfo: ICatalogHeader } Parameters xColumnName: string yColumnName: string columnsData: Map&lt;number, ProcessedColumnData&gt; Returns { wcsX?: number[]; wcsY?: number[]; xHeaderInfo: ICatalogHeader; yHeaderInfo: ICatalogHeader } optionalwcsX?: number[] optionalwcsY?: number[] xHeaderInfo: ICatalogHeader yHeaderInfo: ICatalogHeader getOriginIndices getOriginIndices(selectedPointIndices: number[]): number[] Parameters selectedPointIndices: number[] Returns number[] getSortedIndices getSortedIndices(selectedPointIndices: number[]): number[] Parameters selectedPointIndices: number[] Returns number[] publicgetUserFilters getUserFilters(): FilterConfig[] Returns FilterConfig[] abstractresetCatalogFilterRequest resetCatalogFilterRequest(): void Returns void abstractresetFilterRequest resetFilterRequest(filterConfigs?: FilterConfig[]): void Parameters optionalfilterConfigs: FilterConfig[] Returns void resetUserFilters resetUserFilters(): void Returns void setCatalogCoordinateSystem setCatalogCoordinateSystem(catalogSystem: CatalogSystemType): void Parameters catalogSystem: CatalogSystemType Returns void setColumnFilter setColumnFilter(filter: string, columnName: string): void Parameters filter: string columnName: string Returns void setHeaderDisplay setHeaderDisplay(val: boolean, columnName: string): void Parameters val: boolean columnName: string Returns void setLoadingDataStatus setLoadingDataStatus(val: boolean): void Parameters val: boolean Returns void abstractsetMaxRows setMaxRows(maxRows: number): void Parameters maxRows: number Returns void setProgress setProgress(val: number): void Parameters val: number Returns void setSelectedPointIndices setSelectedPointIndices(pointIndices: number[], autoPanZoom: boolean): void Parameters pointIndices: number[] autoPanZoom: boolean Returns void abstractsetSortingInfo setSortingInfo(columnName: string, sortingType: SortingType, columnIndex?: number): void Parameters columnName: string sortingType: SortingType optionalcolumnIndex: number Returns void setTableColumnWidth setTableColumnWidth(width: number, columnName: string): void Parameters width: number columnName: string Returns void setUpdateMode setUpdateMode(mode: CatalogUpdateMode): void Parameters mode: CatalogUpdateMode Returns void setUpdatingDataStream setUpdatingDataStream(val: boolean): void Parameters val: boolean Returns void updateTableStatus updateTableStatus(val: boolean): void Parameters val: boolean Returns void publicstaticgetCatalogSystem getCatalogSystem(system: string): CatalogSystemType Parameters system: string Returns CatalogSystemType","keywords":""},{"title":"CompressionQuality","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/class/CompressionQuality","content":"CompressionQuality Index Constructors constructor Properties ANIMATION_DEFAULTANIMATION_MAXANIMATION_MINANIMATION_STEPIMAGE_DEFAULTIMAGE_MAXIMAGE_MINIMAGE_STEP Methods isAnimationCompressionQualityValidisImageCompressionQualityValid Constructors constructor new CompressionQuality(): CompressionQuality Returns CompressionQuality Properties publicstaticreadonlyANIMATION_DEFAULT ANIMATION_DEFAULT: 9 = 9 publicstaticreadonlyANIMATION_MAX ANIMATION_MAX: 32 = 32 publicstaticreadonlyANIMATION_MIN ANIMATION_MIN: 1 = 1 publicstaticreadonlyANIMATION_STEP ANIMATION_STEP: 1 = 1 publicstaticreadonlyIMAGE_DEFAULT IMAGE_DEFAULT: 11 = 11 publicstaticreadonlyIMAGE_MAX IMAGE_MAX: 32 = 32 publicstaticreadonlyIMAGE_MIN IMAGE_MIN: 1 = 1 publicstaticreadonlyIMAGE_STEP IMAGE_STEP: 1 = 1 Methods publicstaticisAnimationCompressionQualityValid isAnimationCompressionQualityValid(value: number): boolean Parameters value: number Returns boolean publicstaticisImageCompressionQualityValid isImageCompressionQualityValid(value: number): boolean Parameters value: number Returns boolean","keywords":""},{"title":"CursorPosition","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/class/CursorPosition","content":"CursorPosition Index Constructors constructor Properties FIXEDTRACKING Methods isValid Constructors constructor new CursorPosition(): CursorPosition Returns CursorPosition Properties publicstaticreadonlyFIXED FIXED: fixed = &quot;fixed&quot; publicstaticreadonlyTRACKING TRACKING: tracking = &quot;tracking&quot; Methods publicstaticisValid isValid(cursorPosition: string): boolean Parameters cursorPosition: string Returns boolean","keywords":""},{"title":"ControlMap","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/class/ControlMap","content":"ControlMap Hierarchy ControlMap CatalogControlMap Index Constructors constructor Properties destinationglheightmaxPointminPointsourcetexturewidth Methods createTexturegetTextureXhasTextureForContextsetGridsetMinMaxPoint Constructors constructor new ControlMap(src: FrameStore, dst: FrameStore, astTransform: Mapping, width: number, height: number, updateBoudary?: boolean): ControlMap Parameters src: FrameStore dst: FrameStore astTransform: Mapping width: number height: number updateBoudary: boolean = true Returns ControlMap Properties readonlydestination destination: FrameStore gl gl: WebGL2RenderingContext readonlyheight height: number maxPoint maxPoint: Point2D minPoint minPoint: Point2D readonlysource source: FrameStore texture texture: WebGLTexture readonlywidth width: number Methods createTexture createTexture(gl: WebGL2RenderingContext): void Parameters gl: WebGL2RenderingContext Returns void getTextureX getTextureX(gl: WebGL2RenderingContext): WebGLTexture Parameters gl: WebGL2RenderingContext Returns WebGLTexture hasTextureForContext hasTextureForContext(gl: WebGL2RenderingContext): boolean Parameters gl: WebGL2RenderingContext Returns boolean setGrid setGrid(astTransform?: Mapping): void Parameters optionalastTransform: Mapping Returns void setMinMaxPoint setMinMaxPoint(minX: any, minY: any, maxX: any, maxY: any): void Parameters minX: any minY: any maxX: any maxY: any Returns void","keywords":""},{"title":"Event","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/class/Event","content":"Event Index Constructors constructor Properties EVENT_NUMBEREVENT_TYPES Methods getEventNameFromTypegetEventTypeFromNameisEventTypeValid Constructors constructor new Event(): Event Returns Event Properties publicstaticreadonlyEVENT_NUMBER EVENT_NUMBER: number = Event.EVENT_TYPES.length publicstaticreadonlyEVENT_TYPES EVENT_TYPES: EventType[] = ... Methods publicstaticgetEventNameFromType getEventNameFromType(eventType: EventType): string Parameters eventType: EventType Returns string publicstaticgetEventTypeFromName getEventTypeFromName(eventName: string): EventType Parameters eventName: string Returns EventType publicstaticisEventTypeValid isEventTypeValid(eventType: EventType): boolean Parameters eventType: EventType Returns boolean","keywords":""},{"title":"Freq","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/class/Freq","content":"Freq Index Constructors constructor Properties unitvalue Methods convertUnitFromHzconvertUnitToHz Constructors constructor new Freq(): Freq Returns Freq Properties unit unit: FrequencyUnit value value: number Methods publicstaticconvertUnitFromHz convertUnitFromHz(freq: number): Freq Parameters freq: number Returns Freq publicstaticconvertUnitToHz convertUnitToHz(freq: Freq): number Parameters freq: Freq Returns number","keywords":""},{"title":"Point2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/class/Point2D","content":"Point2D Index Constructors constructor Properties xy Methods ToString Constructors constructor new Point2D(): Point2D Returns Point2D Properties x x: number y y: number Methods publicstaticToString ToString(point: Point2D, unit: string, decimals?: number): string Parameters point: Point2D unit: string decimals: number = -1 Returns string","keywords":""},{"title":"LayoutConfig","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/class/LayoutConfig","content":"LayoutConfig Index Constructors constructor Properties CurrentSchemaVersionLayoutValidator Methods CreateConfigToApplyCreateConfigToSaveGetPresetConfigIsUserLayoutValidUpgradeLayout Constructors constructor new LayoutConfig(): LayoutConfig Returns LayoutConfig Properties publicstaticCurrentSchemaVersion CurrentSchemaVersion: number = 2 publicstaticLayoutValidator LayoutValidator: any = ... Methods publicstaticCreateConfigToApply CreateConfigToApply(newParentContent: any, parentContent: any, componentConfigs: any[]): void Parameters newParentContent: any parentContent: any componentConfigs: any[] Returns void publicstaticCreateConfigToSave CreateConfigToSave(appStore: AppStore, rootConfig: any): { docked: { content: any[]; type: any }; floating: any[]; layoutVersion: number } Parameters appStore: AppStore rootConfig: any Returns { docked: { content: any[]; type: any }; floating: any[]; layoutVersion: number } docked: { content: any[]; type: any } content: any[] type: any floating: any[] layoutVersion: number publicstaticGetPresetConfig GetPresetConfig(presetName: string): { docked: { content: ({ content: any[]; type: string; width: number } | { content: any; type: string; width?: undefined })[]; type: string }; floating: any[]; layoutVersion: number } Parameters presetName: string Returns { docked: { content: ({ content: any[]; type: string; width: number } | { content: any; type: string; width?: undefined })[]; type: string }; floating: any[]; layoutVersion: number } docked: { content: ({ content: any[]; type: string; width: number } | { content: any; type: string; width?: undefined })[]; type: string } content: ({ content: any[]; type: string; width: number } | { content: any; type: string; width?: undefined })[] type: string floating: any[] layoutVersion: number publicstaticIsUserLayoutValid IsUserLayoutValid(layoutName: string, layoutConfig: any): boolean Parameters layoutName: string layoutConfig: any Returns boolean publicstaticUpgradeLayout UpgradeLayout(layout: { docked: any; floating: any; layoutVersion: 2 | 1 }): void Parameters layout: { docked: any; floating: any; layoutVersion: 2 | 1 } Returns void","keywords":""},{"title":"PresetLayout","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/class/PresetLayout","content":"PresetLayout Index Constructors constructor Properties CONTINUUMANALYSISCUBEANALYSISCUBEVIEWDEFAULTPRESETSPRESET_CONFIGS Methods isPreset Constructors constructor new PresetLayout(): PresetLayout Returns PresetLayout Properties publicstaticreadonlyCONTINUUMANALYSIS CONTINUUMANALYSIS: Continuum Analysis = &quot;Continuum Analysis&quot; publicstaticreadonlyCUBEANALYSIS CUBEANALYSIS: Cube Analysis = &quot;Cube Analysis&quot; publicstaticreadonlyCUBEVIEW CUBEVIEW: Cube View = &quot;Cube View&quot; publicstaticreadonlyDEFAULT DEFAULT: Default = &quot;Default&quot; publicstaticreadonlyPRESETS PRESETS: string[] = ... publicstaticreadonlyPRESET_CONFIGS PRESET_CONFIGS: Map&lt;string, any&gt; = ... Methods publicstaticisPreset isPreset(layoutName: string): boolean Parameters layoutName: string Returns boolean","keywords":""},{"title":"RegionCreationMode","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/class/RegionCreationMode","content":"RegionCreationMode Index Constructors constructor Properties CENTERCORNER Methods isValid Constructors constructor new RegionCreationMode(): RegionCreationMode Returns RegionCreationMode Properties publicstaticreadonlyCENTER CENTER: center = &quot;center&quot; publicstaticreadonlyCORNER CORNER: corner = &quot;corner&quot; Methods publicstaticisValid isValid(regionCreationMode: string): boolean Parameters regionCreationMode: string Returns boolean","keywords":""},{"title":"Theme","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/class/Theme","content":"Theme Index Constructors constructor Properties AUTODARKLIGHT Methods isValid Constructors constructor new Theme(): Theme Returns Theme Properties publicstaticreadonlyAUTO AUTO: auto = &quot;auto&quot; publicstaticreadonlyDARK DARK: dark = &quot;dark&quot; publicstaticreadonlyLIGHT LIGHT: light = &quot;light&quot; Methods publicstaticisValid isValid(theme: string): boolean Parameters theme: string Returns boolean","keywords":""},{"title":"TileCache","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/class/TileCache","content":"TileCache Index Constructors constructor Properties GPU_DEFAULTGPU_MAXGPU_MINGPU_STEPSYSTEM_DEFAULTSYSTEM_MAXSYSTEM_MINSYSTEM_STEP Methods isGPUTileCacheValidisSystemTileCacheValid Constructors constructor new TileCache(): TileCache Returns TileCache Properties publicstaticreadonlyGPU_DEFAULT GPU_DEFAULT: 1024 = 1024 publicstaticreadonlyGPU_MAX GPU_MAX: 8192 = 8192 publicstaticreadonlyGPU_MIN GPU_MIN: 1024 = 1024 publicstaticreadonlyGPU_STEP GPU_STEP: 256 = 256 publicstaticreadonlySYSTEM_DEFAULT SYSTEM_DEFAULT: 4096 = 4096 publicstaticreadonlySYSTEM_MAX SYSTEM_MAX: 16384 = 16384 publicstaticreadonlySYSTEM_MIN SYSTEM_MIN: 1024 = 1024 publicstaticreadonlySYSTEM_STEP SYSTEM_STEP: 256 = 256 Methods publicstaticisGPUTileCacheValid isGPUTileCacheValid(value: number): boolean Parameters value: number Returns boolean publicstaticisSystemTileCacheValid isSystemTileCacheValid(value: number): boolean Parameters value: number Returns boolean","keywords":""},{"title":"Snippet","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/class/Snippet","content":"Snippet Index Constructors constructor Properties categoriescodedescriptionfrontendVersionrequiressnippetVersiontagsFrontendVersionSnippetVersion Constructors constructor new Snippet(): Snippet Returns Snippet Properties categories categories: string[] code code: string optionaldescription description?: string frontendVersion frontendVersion: string optionalrequires requires?: string[] snippetVersion snippetVersion: number optionaltags tags?: string[] staticreadonlyFrontendVersion FrontendVersion: any = version staticreadonlySnippetVersion SnippetVersion: 1 = 1","keywords":""},{"title":"Transform2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/class/Transform2D","content":"Transform2D Index Constructors constructor Properties originrotationscaletranslation Methods transformCoordinate Constructors constructor new Transform2D(astTransform: Mapping, refPixel: Point2D): Transform2D Parameters astTransform: Mapping refPixel: Point2D Returns Transform2D Properties origin origin: Point2D rotation rotation: number scale scale: number translation translation: Point2D Methods transformCoordinate transformCoordinate(point: Point2D, forward?: boolean): Point2D Parameters point: Point2D forward: boolean = true Returns Point2D","keywords":""},{"title":"TileCoordinate","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/class/TileCoordinate","content":"TileCoordinate Index Constructors constructor Properties layerxy Methods encodeAddFileIdDecodeEncodeEncodeCoordinateGetFileIdGetLayerRemoveFileId Constructors constructor new TileCoordinate(x: number, y: number, layer: number): TileCoordinate Parameters x: number y: number layer: number Returns TileCoordinate Properties layer layer: number x x: number y y: number Methods publicencode encode(): number Returns number publicstaticAddFileId AddFileId(encodedCoordinate: number, fileId: number): number Parameters encodedCoordinate: number fileId: number Returns number publicstaticDecode Decode(encodedCoordinate: number): TileCoordinate Parameters encodedCoordinate: number Returns TileCoordinate publicstaticEncode Encode(x: number, y: number, layer: number): number Parameters x: number y: number layer: number Returns number publicstaticEncodeCoordinate EncodeCoordinate(coordinate: { layer: number; x: number; y: number }): number Parameters coordinate: { layer: number; x: number; y: number } Returns number publicstaticGetFileId GetFileId(encodedCoordinate: number): number Parameters encodedCoordinate: number Returns number publicstaticGetLayer GetLayer(encodedCoordinate: number): number Parameters encodedCoordinate: number Returns number publicstaticRemoveFileId RemoveFileId(encodedCoordinate: number): number Parameters encodedCoordinate: number Returns number","keywords":""},{"title":"WCSPoint2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/class/WCSPoint2D","content":"WCSPoint2D Index Constructors constructor Properties xy Methods ToString Constructors constructor new WCSPoint2D(): WCSPoint2D Returns WCSPoint2D Properties x x: string y y: string Methods publicstaticToString ToString(wcsPoint: WCSPoint2D): string Parameters wcsPoint: WCSPoint2D Returns string","keywords":""},{"title":"WCSType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/class/WCSType","content":"WCSType Index Constructors constructor Properties AUTOMATICDEGREESSEXAGESIMAL Methods isValid Constructors constructor new WCSType(): WCSType Returns WCSType Properties publicstaticreadonlyAUTOMATIC AUTOMATIC: Automatic = &quot;Automatic&quot; publicstaticreadonlyDEGREES DEGREES: Degrees = &quot;Degrees&quot; publicstaticreadonlySEXAGESIMAL SEXAGESIMAL: Sexagesimal = &quot;Sexagesimal&quot; Methods publicstaticisValid isValid(wcsType: string): boolean Parameters wcsType: string Returns boolean","keywords":""},{"title":"Zoom","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/class/Zoom","content":"Zoom Index Constructors constructor Properties FITFULL Methods isValid Constructors constructor new Zoom(): Zoom Returns Zoom Properties publicstaticreadonlyFIT FIT: fit = &quot;fit&quot; publicstaticreadonlyFULL FULL: full = &quot;full&quot; Methods publicstaticisValid isValid(zoomMode: string): boolean Parameters zoomMode: string Returns boolean","keywords":""},{"title":"ZoomPoint","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/class/ZoomPoint","content":"ZoomPoint Index Constructors constructor Properties CENTERCURSOR Methods isValid Constructors constructor new ZoomPoint(): ZoomPoint Returns ZoomPoint Properties publicstaticreadonlyCENTER CENTER: center = &quot;center&quot; publicstaticreadonlyCURSOR CURSOR: cursor = &quot;cursor&quot; Methods publicstaticisValid isValid(zoomPoint: string): boolean Parameters zoomPoint: string Returns boolean","keywords":""},{"title":"AngularSizeUnit","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/enum/AngularSizeUnit","content":"AngularSizeUnit Index Enumeration Members ARCMINARCSECDEGMILLIARCSEC Enumeration Members ARCMIN ARCMIN: arcmin ARCSEC ARCSEC: arcsec DEG DEG: deg MILLIARCSEC MILLIARCSEC: marcsec","keywords":""},{"title":"CatalogOverlay","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/enum/CatalogOverlay","content":"CatalogOverlay Index Enumeration Members DECELATELONGLATGLONNONERAXX0X1YY0Y1 Enumeration Members DEC DEC: DEC ELAT ELAT: ELAT ELON ELON: ELON GLAT GLAT: GLAT GLON GLON: GLON NONE NONE: None RA RA: RA X X: X X0 X0: X0 X1 X1: X1 Y Y: Y Y0 Y0: Y0 Y1 Y1: Y1","keywords":""},{"title":"CatalogSystemType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/enum/CatalogSystemType","content":"CatalogSystemType Index Enumeration Members EclipticFK4FK5GalacticICRSPixel0Pixel1 Enumeration Members Ecliptic Ecliptic: ECLIPTIC FK4 FK4: FK4 FK5 FK5: FK5 Galactic Galactic: GALACTIC ICRS ICRS: ICRS Pixel0 Pixel0: Pixel0 Pixel1 Pixel1: Pixel1","keywords":""},{"title":"CatalogType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/enum/CatalogType","content":"CatalogType Index Enumeration Members FILESIMBADVIZIER Enumeration Members FILE FILE: 2 SIMBAD SIMBAD: 1 VIZIER VIZIER: 0","keywords":""},{"title":"CursorInfoVisibility","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/enum/CursorInfoVisibility","content":"CursorInfoVisibility Index Enumeration Members ActiveImageAlwaysHideTiledNever Enumeration Members ActiveImage ActiveImage: activeImage Always Always: always HideTiled HideTiled: hideTiled Never Never: never","keywords":""},{"title":"FileFilterMode","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/enum/FileFilterMode","content":"FileFilterMode Index Enumeration Members AllContentExtension Enumeration Members All All: all Content Content: content Extension Extension: extension","keywords":""},{"title":"FrequencyUnit","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/enum/FrequencyUnit","content":"FrequencyUnit Index Enumeration Members GHZHZKHZMHZ Enumeration Members GHZ GHZ: GHz HZ HZ: Hz KHZ KHZ: kHz MHZ MHZ: MHz","keywords":""},{"title":"ImagePanelMode","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/enum/ImagePanelMode","content":"ImagePanelMode Index Enumeration Members DynamicFixedNone Enumeration Members Dynamic Dynamic: dynamic Fixed Fixed: fixed None None: none","keywords":""},{"title":"IntensityUnitType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/enum/IntensityUnitType","content":"IntensityUnitType Index Enumeration Members JyArcsec2JyBeamJyPixelJySrKelvinUnsupported Enumeration Members JyArcsec2 JyArcsec2: 3 JyBeam JyBeam: 1 JyPixel JyPixel: 4 JySr JySr: 2 Kelvin Kelvin: 0 Unsupported Unsupported: 5","keywords":""},{"title":"SpectralColorMap","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/enum/SpectralColorMap","content":"SpectralColorMap Index Enumeration Members ENERFREQWAVE Enumeration Members ENER ENER: ENER FREQ FREQ: FREQ WAVE WAVE: WAVE","keywords":""},{"title":"POLARIZATIONS","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/enum/POLARIZATIONS","content":"POLARIZATIONS Index Enumeration Members ILLLRPFlinearPFtotalPanglePlinearPtotalQRLRRUVXXXYYXYY Enumeration Members I I: 1 LL LL: -2 LR LR: -4 PFlinear PFlinear: 16 PFtotal PFtotal: 15 Pangle Pangle: 17 Plinear Plinear: 14 Ptotal Ptotal: 13 Q Q: 2 RL RL: -3 RR RR: -1 U U: 3 V V: 4 XX XX: -5 XY XY: -7 YX YX: -8 YY YY: -6","keywords":""},{"title":"SpectralSystem","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/enum/SpectralSystem","content":"SpectralSystem Index Enumeration Members BARYLSRDLSRKTOPO Enumeration Members BARY BARY: BARYCENT LSRD LSRD: LSRD LSRK LSRK: LSRK TOPO TOPO: TOPOCENT","keywords":""},{"title":"SpectralType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/enum/SpectralType","content":"SpectralType Index Enumeration Members AWAVCHANNELFREQVOPTVRADWAVE Enumeration Members AWAV AWAV: AWAV CHANNEL CHANNEL: CHANNEL FREQ FREQ: FREQ VOPT VOPT: VOPT VRAD VRAD: VRAD WAVE WAVE: WAVE","keywords":""},{"title":"SpectralUnit","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/enum/SpectralUnit","content":"SpectralUnit Index Enumeration Members ANGSTROMGHZHZKHZKMSMMHZMMMSNMUM Enumeration Members ANGSTROM ANGSTROM: Angstrom GHZ GHZ: GHz HZ HZ: Hz KHZ KHZ: kHz KMS KMS: km/s M M: m MHZ MHZ: MHz MM MM: mm MS MS: m/s NM NM: nm UM UM: um","keywords":""},{"title":"WCSMatchingType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/enum/WCSMatchingType","content":"WCSMatchingType Index Enumeration Members NONESPATIALSPECTRAL Enumeration Members NONE NONE: 0 SPATIAL SPATIAL: 1 SPECTRAL SPECTRAL: 2","keywords":""},{"title":"FindIntensityUnitType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/function/FindIntensityUnitType","content":"FindIntensityUnitType Callable FindIntensityUnitType(unitStr: string): IntensityUnitType Parameters unitStr: string Returns IntensityUnitType","keywords":""},{"title":"GenCoordinateLabel","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/function/GenCoordinateLabel","content":"GenCoordinateLabel Callable GenCoordinateLabel(type: SpectralType, unit: SpectralUnit): string Parameters type: SpectralType unit: SpectralUnit Returns string","keywords":""},{"title":"GetCommonIntensityOptions","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/function/GetCommonIntensityOptions","content":"GetCommonIntensityOptions Callable GetCommonIntensityOptions(intensityConfigs: IntensityConfig[]): string[] Parameters intensityConfigs: IntensityConfig[] Returns string[]","keywords":""},{"title":"GetFreqInGHz","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/function/GetFreqInGHz","content":"GetFreqInGHz Callable GetFreqInGHz(unit: string, value: number): number Parameters unit: string value: number Returns number","keywords":""},{"title":"GetIntensityConversion","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/function/GetIntensityConversion","content":"GetIntensityConversion Callable GetIntensityConversion(config: IntensityConfig, unitTo: string): IntensityConversion Parameters config: IntensityConfig unitTo: string Returns IntensityConversion","keywords":""},{"title":"GetIntensityOptions","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/function/GetIntensityOptions","content":"GetIntensityOptions Callable GetIntensityOptions(config: IntensityConfig): string[] Parameters config: IntensityConfig Returns string[]","keywords":""},{"title":"IsIntensitySupported","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/function/IsIntensitySupported","content":"IsIntensitySupported Callable IsIntensitySupported(unitStr: string): boolean Parameters unitStr: string Returns boolean","keywords":""},{"title":"IsSpectralMatchingTypeValid","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/function/IsSpectralMatchingTypeValid","content":"IsSpectralMatchingTypeValid Callable IsSpectralMatchingTypeValid(type: SpectralType): boolean Parameters type: SpectralType Returns boolean","keywords":""},{"title":"IsSpectralSystemSupported","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/function/IsSpectralSystemSupported","content":"IsSpectralSystemSupported Callable IsSpectralSystemSupported(systemStr: string): boolean Parameters systemStr: string Returns boolean","keywords":""},{"title":"IsSpectralTypeSupported","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/function/IsSpectralTypeSupported","content":"IsSpectralTypeSupported Callable IsSpectralTypeSupported(typeStr: string): boolean Parameters typeStr: string Returns boolean","keywords":""},{"title":"IsSpectralUnitSupported","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/function/IsSpectralUnitSupported","content":"IsSpectralUnitSupported Callable IsSpectralUnitSupported(unit: string): boolean Parameters unit: string Returns boolean","keywords":""},{"title":"IsWCSMatchingTypeValid","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/function/IsWCSMatchingTypeValid","content":"IsWCSMatchingTypeValid Callable IsWCSMatchingTypeValid(type: string): boolean Parameters type: string Returns boolean","keywords":""},{"title":"ToFileListFilterMode","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/function/ToFileListFilterMode","content":"ToFileListFilterMode Callable ToFileListFilterMode(mode: FileFilterMode): CARTA.FileListFilterMode Parameters mode: FileFilterMode Returns CARTA.FileListFilterMode","keywords":""},{"title":"StatsTypeString","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/function/StatsTypeString","content":"StatsTypeString Callable StatsTypeString(statsType: StatsType): string Parameters statsType: StatsType Returns string","keywords":""},{"title":"CatalogInfo","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/interface/CatalogInfo","content":"CatalogInfo Index Properties dataSizedirectoryfileIdfileInfo Properties dataSize dataSize: number directory directory: string fileId fileId: number fileInfo fileInfo: ICatalogFileInfo","keywords":""},{"title":"ChannelInfo","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/interface/ChannelInfo","content":"ChannelInfo Index Properties fromWCSgetChannelIndexSimplegetChannelIndexWCSindexesvalues Properties fromWCS fromWCS: boolean getChannelIndexSimple getChannelIndexSimple: (x: number) =&gt; number Type declaration (x: number): number Parameters x: number Returns number getChannelIndexWCS getChannelIndexWCS: (x: number) =&gt; number Type declaration (x: number): number Parameters x: number Returns number indexes indexes: number[] values values: number[]","keywords":""},{"title":"CursorInfo","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/interface/CursorInfo","content":"CursorInfo Index Properties infoWCSisInsideImageposImageSpaceposWCS Properties infoWCS infoWCS: { x: string; y: string } Type declaration x: string y: string isInsideImage isInsideImage: boolean posImageSpace posImageSpace: Point2D posWCS posWCS: Point2D","keywords":""},{"title":"FrameView","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/interface/FrameView","content":"FrameView Index Properties mipxMaxxMinyMaxyMin Properties mip mip: number xMax xMax: number xMin xMin: number yMax yMax: number yMin yMin: number","keywords":""},{"title":"SpectralInfo","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/interface/SpectralInfo","content":"SpectralInfo Index Properties channelfreqStringspectralStringvelocityString Properties channel channel: number optionalfreqString freqString?: string spectralString spectralString: string optionalvelocityString velocityString?: string","keywords":""},{"title":"LineOption","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/interface/LineOption","content":"LineOption Hierarchy unknown LineOption Index Properties activedisabledhightlighticonisAnnotationisCustomIcon Properties optionalactive active?: boolean optionaldisabled disabled?: boolean optionalhightlight hightlight?: boolean optionalicon icon?: any optionalisAnnotation isAnnotation?: boolean optionalisCustomIcon isCustomIcon?: boolean","keywords":""},{"title":"SpectralTypeSet","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/interface/SpectralTypeSet","content":"SpectralTypeSet Index Properties codenameunit Properties code code: string name name: string unit unit: string","keywords":""},{"title":"WorkspaceContourConfig","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/interface/WorkspaceContourConfig","content":"WorkspaceContourConfig Index Properties colorcolormapcolormapBiascolormapContrastcolormapEnableddashModelevelssmoothingFactorsmoothingModethicknessvisible Properties optionalcolor color?: RGBColor optionalcolormap colormap?: string colormapBias colormapBias: number colormapContrast colormapContrast: number colormapEnabled colormapEnabled: boolean dashMode dashMode: ContourDashMode levels levels: number[] smoothingFactor smoothingFactor: number smoothingMode smoothingMode: SmoothingMode thickness thickness: number visible visible: boolean","keywords":""},{"title":"Workspace","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/interface/Workspace","content":"Workspace Index Properties datedescriptioneditablefilesfrontendVersionidnamereferencesselectedFilethumbnailworkspaceVersion Properties optionaldate date?: number optionaldescription description?: string optionaleditable editable?: boolean optionalfiles files?: WorkspaceFile[] frontendVersion frontendVersion: number optionalid id?: string optionalname name?: string optionalreferences references?: { raster?: number; spatial?: number; spectral?: number } Type declaration optionalraster?: number optionalspatial?: number optionalspectral?: number optionalselectedFile selectedFile?: number optionalthumbnail thumbnail?: string workspaceVersion workspaceVersion: number","keywords":""},{"title":"WorkspaceListItem","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/interface/WorkspaceListItem","content":"WorkspaceListItem Index Properties dateidname Properties date date: number optionalid id?: string name name: string","keywords":""},{"title":"WorkspaceFile","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/interface/WorkspaceFile","content":"WorkspaceFile Index Properties centerchannelcontourConfigdirectoryfilenamehduidreferencesregionsSetrenderConfigstokesvectorOverlayConfigzoomLevel Properties optionalcenter center?: Point2D optionalchannel channel?: number optionalcontourConfig contourConfig?: WorkspaceContourConfig optionaldirectory directory?: string filename filename: string optionalhdu hdu?: string id id: number optionalreferences references?: { raster?: number; spatial?: number; spectral?: number } Type declaration optionalraster?: number optionalspatial?: number optionalspectral?: number optionalregionsSet regionsSet?: { regions?: WorkspaceRegion[]; selectedRegion?: number } Type declaration optionalregions?: WorkspaceRegion[] optionalselectedRegion?: number optionalrenderConfig renderConfig?: WorkspaceRenderConfig optionalstokes stokes?: number optionalvectorOverlayConfig vectorOverlayConfig?: WorkspaceVectorOverlayConfig optionalzoomLevel zoomLevel?: number","keywords":""},{"title":"WorkspaceRegion","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/interface/WorkspaceRegion","content":"WorkspaceRegion Index Properties annotationStylescolordashesidlineWidthlockednamepointsrotationtype Properties optionalannotationStyles annotationStyles?: any optionalcolor color?: string optionaldashes dashes?: number[] id id: number optionallineWidth lineWidth?: number optionallocked locked?: boolean optionalname name?: string points points: Point2D[] rotation rotation: number type type: RegionType","keywords":""},{"title":"WorkspaceRenderConfig","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/interface/WorkspaceRenderConfig","content":"WorkspaceRenderConfig Index Properties alphabiascolorMapcontrastgammainvertedscaleMaxscaleMinscalingselectedPercentileuseCubeHistogramuseCubeHistogramContoursvisible Properties optionalalpha alpha?: number optionalbias bias?: number optionalcolorMap colorMap?: string optionalcontrast contrast?: number optionalgamma gamma?: number optionalinverted inverted?: boolean optionalscaleMax scaleMax?: number[] optionalscaleMin scaleMin?: number[] optionalscaling scaling?: FrameScaling optionalselectedPercentile selectedPercentile?: number[] optionaluseCubeHistogram useCubeHistogram?: boolean optionaluseCubeHistogramContours useCubeHistogramContours?: boolean optionalvisible visible?: boolean","keywords":""},{"title":"WorkspaceVectorOverlayConfig","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-models/interface/WorkspaceVectorOverlayConfig","content":"WorkspaceVectorOverlayConfig Index Properties angularSourcecolorcolormapcolormapBiascolormapContrastcolormapEnableddebiasingfractionalIntensityintensityMaxintensityMinintensitySourcelengthMaxlengthMinpixelAveragingpixelAveragingEnabledqErrorrotationOffsetthicknessthresholdthresholdEnableduErrorvisible Properties angularSource angularSource: VectorOverlaySource optionalcolor color?: RGBColor optionalcolormap colormap?: string colormapBias colormapBias: number colormapContrast colormapContrast: number colormapEnabled colormapEnabled: boolean debiasing debiasing: boolean fractionalIntensity fractionalIntensity: boolean intensityMax intensityMax: number intensityMin intensityMin: number intensitySource intensitySource: VectorOverlaySource lengthMax lengthMax: number lengthMin lengthMin: number pixelAveraging pixelAveraging: number pixelAveragingEnabled pixelAveragingEnabled: boolean qError qError: number rotationOffset rotationOffset: number thickness thickness: number threshold threshold: number thresholdEnabled thresholdEnabled: boolean uError uError: number visible visible: boolean","keywords":""},{"title":"carta-frontend/services","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services","content":"carta-frontend/services Index Classes ApiServiceBackendServiceCatalogApiServiceCatalogWebGLServiceContourWebGLServiceDeferredExecutionEntryPreviewWebGLServiceScriptingServiceSplatalogueServiceTelemetryServiceTileServiceTileWebGLServiceVectorOverlayWebGLService Enumerations CatalogDatabaseCatalogTextureTypeConnectionStatusTelemetryActionTelemetryMode Interfaces CompressedTileRasterTileRuntimeConfigSpectralLineResponseTelemetryMessageTileStreamDetails Variables INVALID_ANIMATION_IDMAX_TEXTURESTEXTURE_SIZETILE_SIZE Variables constINVALID_ANIMATION_ID INVALID_ANIMATION_ID: -1 = -1 constMAX_TEXTURES MAX_TEXTURES: 8 = 8 constTEXTURE_SIZE TEXTURE_SIZE: 4096 = 4096 constTILE_SIZE TILE_SIZE: 256 = 256","keywords":""},{"title":"ApiService","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/class/ApiService","content":"ApiService Index Constructors constructor Properties RuntimeConfig Accessors accessTokenauthenticatedtokenLifetimeInstance Methods clearLayoutclearPreferencesclearSnippetclearWorkspacegetLayoutsgetPreferencesgetSharedWorkspaceKeygetSnippetsgetWorkspacegetWorkspaceListlogoutsetLayoutsetPreferencesetPreferencessetSnippetsetTokensetWorkspacestopServerSetRuntimeConfig Constructors constructor new ApiService(): ApiService Returns ApiService Properties publicstaticRuntimeConfig RuntimeConfig: RuntimeConfig = {} Accessors accessToken get accessToken(): string Returns string authenticated get authenticated(): boolean Returns boolean tokenLifetime get tokenLifetime(): number Returns number staticInstance get Instance(): ApiService Returns ApiService Methods publicclearLayout clearLayout(layoutName: string): Promise&lt;any&gt; Parameters layoutName: string Returns Promise&lt;any&gt; publicclearPreferences clearPreferences(keys: string[]): Promise&lt;any&gt; Parameters keys: string[] Returns Promise&lt;any&gt; publicclearSnippet clearSnippet(snippetName: string): Promise&lt;any&gt; Parameters snippetName: string Returns Promise&lt;any&gt; publicclearWorkspace clearWorkspace(workspaceName: string): Promise&lt;any&gt; Parameters workspaceName: string Returns Promise&lt;any&gt; publicgetLayouts getLayouts(): Promise&lt;{}&gt; Returns Promise&lt;{}&gt; publicgetPreferences getPreferences(): Promise&lt;any&gt; Returns Promise&lt;any&gt; publicgetSharedWorkspaceKey getSharedWorkspaceKey(workspaceId: string): Promise&lt;string&gt; Parameters workspaceId: string Returns Promise&lt;string&gt; publicgetSnippets getSnippets(): Promise&lt;Map&lt;string, Snippet&gt;&gt; Returns Promise&lt;Map&lt;string, Snippet&gt;&gt; publicgetWorkspace getWorkspace(name: string, isKey?: boolean): Promise&lt;Workspace&gt; Parameters name: string isKey: boolean = false Returns Promise&lt;Workspace&gt; publicgetWorkspaceList getWorkspaceList(): Promise&lt;any&gt; Returns Promise&lt;any&gt; publiclogout logout(): Promise&lt;void&gt; Returns Promise&lt;void&gt; publicsetLayout setLayout(layoutName: string, layout: any): Promise&lt;boolean&gt; Parameters layoutName: string layout: any Returns Promise&lt;boolean&gt; publicsetPreference setPreference(key: string, value: any): Promise&lt;any&gt; Parameters key: string value: any Returns Promise&lt;any&gt; publicsetPreferences setPreferences(preferences: any): Promise&lt;any&gt; Parameters preferences: any Returns Promise&lt;any&gt; publicsetSnippet setSnippet(snippetName: string, snippet: Snippet): Promise&lt;any&gt; Parameters snippetName: string snippet: Snippet Returns Promise&lt;any&gt; setToken setToken(tokenString: string, tokenLifetime?: number): boolean Parameters tokenString: string tokenLifetime: number = Number.MAX_VALUE Returns boolean publicsetWorkspace setWorkspace(workspaceName: string, workspace: Workspace): Promise&lt;Workspace&gt; Parameters workspaceName: string workspace: Workspace Returns Promise&lt;Workspace&gt; publicstopServer stopServer(): Promise&lt;void&gt; Returns Promise&lt;void&gt; publicstaticSetRuntimeConfig SetRuntimeConfig(data: any): void Parameters data: any Returns void","keywords":""},{"title":"CatalogApiService","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/class/CatalogApiService","content":"CatalogApiService Index Constructors constructor Properties SimbadHyperLink Accessors Instance Methods appendSimbadCatalogappendVizierCatalogcancelQuerygetSimbadCatalogloadCatalogqueryVizierSourcequeryVizierTableNameresetCancelTokenSource Constructors constructor new CatalogApiService(): CatalogApiService Returns CatalogApiService Properties publicstaticreadonlySimbadHyperLink SimbadHyperLink: { bibcode: string; mainId: string } = ... Type declaration bibcode: string mainId: string Accessors staticInstance get Instance(): CatalogApiService Returns CatalogApiService Methods publicappendSimbadCatalog appendSimbadCatalog(query: string): Promise&lt;number&gt; Parameters query: string Returns Promise&lt;number&gt; publicappendVizierCatalog appendVizierCatalog(resources: Map&lt;string, VizierResource&gt;): void Parameters resources: Map&lt;string, VizierResource&gt; Returns void publiccancelQuery cancelQuery(type: CatalogDatabase): void Parameters type: CatalogDatabase Returns void publicgetSimbadCatalog getSimbadCatalog(query: string): Promise&lt;AxiosResponse&lt;any&gt;&gt; Parameters query: string Returns Promise&lt;AxiosResponse&lt;any&gt;&gt; loadCatalog loadCatalog(fileId: number, catalogInfo: CatalogInfo, headers: ICatalogHeader[], columnData: Map&lt;number, ProcessedColumnData&gt;, type: CatalogType): void Parameters fileId: number catalogInfo: CatalogInfo headers: ICatalogHeader[] columnData: Map&lt;number, ProcessedColumnData&gt; type: CatalogType Returns void publicqueryVizierSource queryVizierSource(point: WCSPoint2D, radius: number, unit: RadiusUnits, max: number, sources: VizierResource[]): Promise&lt;Map&lt;string, VizierResource&gt;&gt; Parameters point: WCSPoint2D radius: number unit: RadiusUnits max: number sources: VizierResource[] Returns Promise&lt;Map&lt;string, VizierResource&gt;&gt; publicqueryVizierTableName queryVizierTableName(point: WCSPoint2D, radius: number, unit: RadiusUnits, keyWords: string): Promise&lt;Map&lt;string, VizierResource&gt;&gt; Parameters point: WCSPoint2D radius: number unit: RadiusUnits keyWords: string Returns Promise&lt;Map&lt;string, VizierResource&gt;&gt; publicresetCancelTokenSource resetCancelTokenSource(type: CatalogDatabase): void Parameters type: CatalogDatabase Returns void","keywords":""},{"title":"BackendService","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/class/BackendService","content":"BackendService Index Properties animationIdcatalogStreamconnectionDroppedconnectionStatuscontourStreamendToEndPingerrorStreamfittingProgressStreamhistogramStreamlistProgressStreamloggingEnabledmomentProgressStreampvPreviewStreampvProgressStreamrasterSyncStreamrasterTileStreamscriptingStreamserverFeatureFlagsserverUrlsessionIdspatialProfileStreamspectralProfileStreamstatsStreamvectorTileStream Accessors Instance Methods addRequiredTilescancelRequestingFileListcancelRequestingFittingcancelRequestingMomentcancelRequestingPVcloseCatalogFilecloseFileclosePvPreviewconnectexportRegiongetCatalogFileInfogetCatalogListgetFileInfogetFileListgetRegionFileInfogetRegionListimportRegionloadCatalogFileloadFileloadStokeFilesremoveRegionremoveRequiredTilesrequestFittingrequestMomentrequestPVresumeSessionsaveFilesendAnimationFlowControlsendPingsendScriptingResponseserverHasFeaturesetAuthTokensetCatalogFilterRequestsetChannelssetContourParameterssetCursorsetHistogramRequirementssetRegionsetSpatialRequirementssetSpectralRequirementssetStatsRequirementssetVectorOverlayParametersstartAnimationstopAnimationstopPvPreviewupdateEndToEndPing Properties publicanimationId animationId: number readonlycatalogStream catalogStream: Subject&lt;CatalogFilterResponse&gt; connectionDropped connectionDropped: boolean connectionStatus connectionStatus: ConnectionStatus readonlycontourStream contourStream: Subject&lt;ContourImageData&gt; endToEndPing endToEndPing: number readonlyerrorStream errorStream: Subject&lt;ErrorData&gt; readonlyfittingProgressStream fittingProgressStream: Subject&lt;FittingProgress&gt; readonlyhistogramStream histogramStream: Subject&lt;RegionHistogramData&gt; readonlylistProgressStream listProgressStream: Subject&lt;ListProgress&gt; readonlyloggingEnabled loggingEnabled: boolean readonlymomentProgressStream momentProgressStream: Subject&lt;MomentProgress&gt; readonlypvPreviewStream pvPreviewStream: Subject&lt;PvPreviewData&gt; readonlypvProgressStream pvProgressStream: Subject&lt;PvProgress&gt; readonlyrasterSyncStream rasterSyncStream: Subject&lt;RasterTileSync&gt; readonlyrasterTileStream rasterTileStream: Subject&lt;RasterTileData&gt; readonlyscriptingStream scriptingStream: Subject&lt;ScriptingRequest&gt; publicserverFeatureFlags serverFeatureFlags: number publicserverUrl serverUrl: string publicsessionId sessionId: number readonlyspatialProfileStream spatialProfileStream: Subject&lt;SpatialProfileData&gt; readonlyspectralProfileStream spectralProfileStream: Subject&lt;SpectralProfileData&gt; readonlystatsStream statsStream: Subject&lt;RegionStatsData&gt; readonlyvectorTileStream vectorTileStream: Subject&lt;VectorOverlayTileData&gt; Accessors staticInstance get Instance(): BackendService Returns BackendService Methods addRequiredTiles addRequiredTiles(fileId: number, tiles: number[], quality: number): boolean Parameters fileId: number tiles: number[] quality: number Returns boolean cancelRequestingFileList cancelRequestingFileList(fileListType: FileListType): any Parameters fileListType: FileListType Returns any cancelRequestingFitting cancelRequestingFitting(fileId: number): any Parameters fileId: number Returns any cancelRequestingMoment cancelRequestingMoment(fileId: number): any Parameters fileId: number Returns any cancelRequestingPV cancelRequestingPV(fileId: number): any Parameters fileId: number Returns any closeCatalogFile closeCatalogFile(fileId: number): boolean Parameters fileId: number Returns boolean closeFile closeFile(fileId: number): boolean Parameters fileId: number Returns boolean closePvPreview closePvPreview(previewId: number): boolean Parameters previewId: number Returns boolean connect connect(url: string): Promise&lt;IRegisterViewerAck&gt; Parameters url: string Returns Promise&lt;IRegisterViewerAck&gt; exportRegion exportRegion(directory: string, file: string, type: FileType, coordType: CoordinateType, fileId: number, regionStyles: Map&lt;number, IRegionStyle&gt;): Promise&lt;IExportRegionAck&gt; Parameters directory: string file: string type: FileType coordType: CoordinateType fileId: number regionStyles: Map&lt;number, IRegionStyle&gt; Returns Promise&lt;IExportRegionAck&gt; getCatalogFileInfo getCatalogFileInfo(directory: string, name: string): Promise&lt;ICatalogFileInfoResponse&gt; Parameters directory: string name: string Returns Promise&lt;ICatalogFileInfoResponse&gt; getCatalogList getCatalogList(directory: string, filterMode: FileListFilterMode): Promise&lt;ICatalogListResponse&gt; Parameters directory: string filterMode: FileListFilterMode Returns Promise&lt;ICatalogListResponse&gt; getFileInfo getFileInfo(directory: string, file: string, hdu: string): Promise&lt;IFileInfoResponse&gt; Parameters directory: string file: string hdu: string Returns Promise&lt;IFileInfoResponse&gt; getFileList getFileList(directory: string, filterMode: FileListFilterMode): Promise&lt;IFileListResponse&gt; Parameters directory: string filterMode: FileListFilterMode Returns Promise&lt;IFileListResponse&gt; getRegionFileInfo getRegionFileInfo(directory: string, file: string): Promise&lt;IRegionFileInfoResponse&gt; Parameters directory: string file: string Returns Promise&lt;IRegionFileInfoResponse&gt; getRegionList getRegionList(directory: string, filterMode: FileListFilterMode): Promise&lt;IRegionListResponse&gt; Parameters directory: string filterMode: FileListFilterMode Returns Promise&lt;IRegionListResponse&gt; importRegion importRegion(directory: string, file: string, type: FileType, fileId: number): Promise&lt;IImportRegionAck&gt; Parameters directory: string file: string type: FileType fileId: number Returns Promise&lt;IImportRegionAck&gt; loadCatalogFile loadCatalogFile(directory: string, name: string, fileId: number, previewDataSize: number): Promise&lt;IOpenCatalogFileAck&gt; Parameters directory: string name: string fileId: number previewDataSize: number Returns Promise&lt;IOpenCatalogFileAck&gt; loadFile loadFile(directory: string, file: string, hdu: string, fileId: number, imageArithmetic: boolean): Promise&lt;IOpenFileAck&gt; Parameters directory: string file: string hdu: string fileId: number imageArithmetic: boolean Returns Promise&lt;IOpenFileAck&gt; loadStokeFiles loadStokeFiles(stokesFiles: IStokesFile[], fileId: number, renderMode: RenderMode): Promise&lt;IConcatStokesFilesAck&gt; Parameters stokesFiles: IStokesFile[] fileId: number renderMode: RenderMode Returns Promise&lt;IConcatStokesFilesAck&gt; removeRegion removeRegion(regionId: number): boolean Parameters regionId: number Returns boolean removeRequiredTiles removeRequiredTiles(fileId: number, tiles: number[]): boolean Parameters fileId: number tiles: number[] Returns boolean requestFitting requestFitting(message: IFittingRequest): Promise&lt;IFittingResponse&gt; Parameters message: IFittingRequest Returns Promise&lt;IFittingResponse&gt; requestMoment requestMoment(message: IMomentRequest): Promise&lt;IMomentResponse&gt; Parameters message: IMomentRequest Returns Promise&lt;IMomentResponse&gt; requestPV requestPV(message: IPvRequest): Promise&lt;IPvResponse&gt; Parameters message: IPvRequest Returns Promise&lt;IPvResponse&gt; resumeSession resumeSession(message: IResumeSession): Promise&lt;IResumeSessionAck&gt; Parameters message: IResumeSession Returns Promise&lt;IResumeSessionAck&gt; saveFile saveFile(fileId: number, outputFileDirectory: string, outputFileName: string, outputFileType: FileType, regionId?: number, channels?: number[], stokes?: number[], keepDegenerate?: boolean, restFreq?: number): Promise&lt;ISaveFileAck&gt; Parameters fileId: number outputFileDirectory: string outputFileName: string outputFileType: FileType optionalregionId: number optionalchannels: number[] optionalstokes: number[] optionalkeepDegenerate: boolean optionalrestFreq: number Returns Promise&lt;ISaveFileAck&gt; sendAnimationFlowControl sendAnimationFlowControl(message: IAnimationFlowControl): boolean Parameters message: IAnimationFlowControl Returns boolean sendPing sendPing(): void Returns void sendScriptingResponse sendScriptingResponse(message: IScriptingResponse): boolean Parameters message: IScriptingResponse Returns boolean publicserverHasFeature serverHasFeature(feature: ServerFeatureFlags): boolean Parameters feature: ServerFeatureFlags Returns boolean setAuthToken setAuthToken(token: string): void Parameters token: string Returns void setCatalogFilterRequest setCatalogFilterRequest(filterRequest: ICatalogFilterRequest): boolean Parameters filterRequest: ICatalogFilterRequest Returns boolean setChannels setChannels(fileId: number, channel: number, stokes: number, requiredTiles: IAddRequiredTiles): boolean Parameters fileId: number channel: number stokes: number requiredTiles: IAddRequiredTiles Returns boolean setContourParameters setContourParameters(message: ISetContourParameters): boolean Parameters message: ISetContourParameters Returns boolean setCursor setCursor(fileId: number, x: number, y: number): boolean Parameters fileId: number x: number y: number Returns boolean setHistogramRequirements setHistogramRequirements(requirementsMessage: ISetHistogramRequirements): boolean Parameters requirementsMessage: ISetHistogramRequirements Returns boolean setRegion setRegion(fileId: number, regionId: number, region: RegionStore, isRequestingPreview?: boolean): Promise&lt;ISetRegionAck&gt; Parameters fileId: number regionId: number region: RegionStore optionalisRequestingPreview: boolean Returns Promise&lt;ISetRegionAck&gt; setSpatialRequirements setSpatialRequirements(requirementsMessage: ISetSpatialRequirements): boolean Parameters requirementsMessage: ISetSpatialRequirements Returns boolean setSpectralRequirements setSpectralRequirements(requirementsMessage: ISetSpectralRequirements): boolean Parameters requirementsMessage: ISetSpectralRequirements Returns boolean setStatsRequirements setStatsRequirements(requirementsMessage: ISetStatsRequirements): boolean Parameters requirementsMessage: ISetStatsRequirements Returns boolean setVectorOverlayParameters setVectorOverlayParameters(message: ISetVectorOverlayParameters): boolean Parameters message: ISetVectorOverlayParameters Returns boolean startAnimation startAnimation(animationMessage: IStartAnimation): Promise&lt;IStartAnimationAck&gt; Parameters animationMessage: IStartAnimation Returns Promise&lt;IStartAnimationAck&gt; stopAnimation stopAnimation(animationMessage: IStopAnimation): boolean Parameters animationMessage: IStopAnimation Returns boolean stopPvPreview stopPvPreview(previewId: number): boolean Parameters previewId: number Returns boolean updateEndToEndPing updateEndToEndPing(): void Returns void","keywords":""},{"title":"CatalogWebGLService","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/class/CatalogWebGLService","content":"CatalogWebGLService Index Properties glshaderUniforms Accessors Instance Methods clearTexturegetDataTexturesetCanvasSizeupdateDataTextureupdatePositionArrayupdatePositionTexture Properties readonlygl gl: WebGL2RenderingContext shaderUniforms shaderUniforms: ShaderUniforms Accessors staticInstance get Instance(): CatalogWebGLService Returns CatalogWebGLService Methods publicclearTexture clearTexture(fileId: number): void Parameters fileId: number Returns void publicgetDataTexture getDataTexture(fileId: number, textureType: CatalogTextureType): WebGLTexture Parameters fileId: number textureType: CatalogTextureType Returns WebGLTexture publicsetCanvasSize setCanvasSize(width: number, height: number): void Parameters width: number height: number Returns void publicupdateDataTexture updateDataTexture(fileId: number, dataPoints: Uint8Array | Float32Array, textureType: CatalogTextureType): void Parameters fileId: number dataPoints: Uint8Array | Float32Array textureType: CatalogTextureType Returns void publicupdatePositionArray updatePositionArray(fileId: number, dataPoints: Float32Array, offset: number): void Parameters fileId: number dataPoints: Float32Array offset: number Returns void publicupdatePositionTexture updatePositionTexture(fileId: number): boolean Parameters fileId: number Returns boolean","keywords":""},{"title":"ContourWebGLService","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/class/ContourWebGLService","content":"ContourWebGLService Index Properties glshaderUniformsvertexNormalAttributevertexPositionAttribute Accessors Instance Methods setCanvasSize Properties readonlygl gl: WebGL2RenderingContext shaderUniforms shaderUniforms: ShaderUniforms vertexNormalAttribute vertexNormalAttribute: number vertexPositionAttribute vertexPositionAttribute: number Accessors staticInstance get Instance(): ContourWebGLService Returns ContourWebGLService Methods publicsetCanvasSize setCanvasSize(width: number, height: number): void Parameters width: number height: number Returns void","keywords":""},{"title":"Deferred <T>","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/class/Deferred","content":"Deferred &lt;T&gt; Index Constructors constructor Accessors promise Methods rejectresolve Constructors constructor new Deferred&lt;T&gt;(): Deferred&lt;T&gt; Type parameters T Returns Deferred&lt;T&gt; Accessors publicpromise get promise(): Promise&lt;T&gt; Returns Promise&lt;T&gt; Methods publicreject reject(reason: any): void Parameters reason: any Returns void publicresolve resolve(value: T): void Parameters value: T Returns void","keywords":""},{"title":"ExecutionEntry","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/class/ExecutionEntry","content":"ExecutionEntry Index Constructors constructor Properties actionasyncparameterstargetvalid Methods executeFromScriptingRequestFromString Constructors constructor new ExecutionEntry(): ExecutionEntry Returns ExecutionEntry Properties action action: string async async: boolean parameters parameters: any[] target target: string valid valid: boolean Methods execute execute(): Promise&lt;any&gt; Returns Promise&lt;any&gt; staticFromScriptingRequest FromScriptingRequest(requestMessage: IScriptingRequest): ExecutionEntry Parameters requestMessage: IScriptingRequest Returns ExecutionEntry staticFromString FromString(entryString: string): ExecutionEntry Parameters entryString: string Returns ExecutionEntry","keywords":""},{"title":"PreviewWebGLService","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/class/PreviewWebGLService","content":"PreviewWebGLService Hierarchy TileWebGLService PreviewWebGLService Index Properties cmapTextureglshaderProgramshaderUniformsvertexPositionAttributevertexPositionBuffervertexUVAttributevertexUVBuffer Accessors Instance Methods setCanvasSize Properties cmapTexture cmapTexture: WebGLTexture Inherited from TileWebGLService.cmapTexture readonlygl gl: WebGL2RenderingContext Inherited from TileWebGLService.gl shaderProgram shaderProgram: WebGLProgram Inherited from TileWebGLService.shaderProgram shaderUniforms shaderUniforms: ShaderUniforms Inherited from TileWebGLService.shaderUniforms vertexPositionAttribute vertexPositionAttribute: number Inherited from TileWebGLService.vertexPositionAttribute vertexPositionBuffer vertexPositionBuffer: WebGLBuffer Inherited from TileWebGLService.vertexPositionBuffer vertexUVAttribute vertexUVAttribute: number Inherited from TileWebGLService.vertexUVAttribute vertexUVBuffer vertexUVBuffer: WebGLBuffer Inherited from TileWebGLService.vertexUVBuffer Accessors staticInstance get Instance(): PreviewWebGLService Overrides TileWebGLService.Instance Returns PreviewWebGLService Methods publicsetCanvasSize setCanvasSize(width: number, height: number): void Inherited from TileWebGLService.setCanvasSize Parameters width: number height: number Returns void","keywords":""},{"title":"ScriptingService","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/class/ScriptingService","content":"ScriptingService Index Constructors constructor Accessors Instance Methods executeEntrieshandleScriptingRequestDelay Constructors constructor new ScriptingService(): ScriptingService Returns ScriptingService Accessors staticInstance get Instance(): ScriptingService Returns ScriptingService Methods executeEntries executeEntries(executionEntries: ExecutionEntry[]): Promise&lt;void&gt; Parameters executionEntries: ExecutionEntry[] Returns Promise&lt;void&gt; handleScriptingRequest handleScriptingRequest(requestMessage: IScriptingRequest): Promise&lt;IScriptingResponse&gt; Parameters requestMessage: IScriptingRequest Returns Promise&lt;IScriptingResponse&gt; staticDelay Delay(timeout: number): Promise&lt;void&gt; Parameters timeout: number Returns Promise&lt;void&gt;","keywords":""},{"title":"SplatalogueService","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/class/SplatalogueService","content":"SplatalogueService Index Accessors Instance Methods query Accessors staticInstance get Instance(): SplatalogueService Returns SplatalogueService Methods query query(freqMin: number, freqMax: number, intensityLimit?: number): Promise&lt;SpectralLineResponse&gt; Parameters freqMin: number freqMax: number optionalintensityLimit: number Returns Promise&lt;SpectralLineResponse&gt;","keywords":""},{"title":"TelemetryService","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/class/TelemetryService","content":"TelemetryService Index Properties ServerUrl Accessors consentRequireddecodedUserIdeffectiveTelemetryModeInstance Methods addFileCloseEntryaddFileOpenEntryaddSpectralProfileEntryaddTelemetryEntrycheckAndGenerateIdclearTelemetryflushTelemetrygetDboptInoptOut Properties publicstaticreadonlyServerUrl ServerUrl: https://telemetry.cartavis.org = &quot;https://telemetry.cartavis.org&quot; Accessors consentRequired get consentRequired(): boolean Returns boolean decodedUserId get decodedUserId(): string Returns string effectiveTelemetryMode get effectiveTelemetryMode(): TelemetryMode Returns TelemetryMode staticInstance get Instance(): TelemetryService Returns TelemetryService Methods addFileCloseEntry addFileCloseEntry(id: number): Promise&lt;void&gt; Parameters id: number Returns Promise&lt;void&gt; addFileOpenEntry addFileOpenEntry(id: number, type: FileType, width: number, height: number, depth: number, stokes: number, generated: boolean): Promise&lt;void&gt; Parameters id: number type: FileType width: number height: number depth: number stokes: number generated: boolean Returns Promise&lt;void&gt; addSpectralProfileEntry addSpectralProfileEntry(profileLength: number, regionType: RegionType, regionId: number, width: number, height: number, depth: number): void Parameters profileLength: number regionType: RegionType regionId: number width: number height: number depth: number Returns void addTelemetryEntry addTelemetryEntry(action: TelemetryAction, details?: object, id?: string): Promise&lt;void&gt; Parameters action: TelemetryAction optionaldetails: object optionalid: string Returns Promise&lt;void&gt; checkAndGenerateId checkAndGenerateId(forceNewId?: boolean): Generator&lt;any, boolean, unknown&gt; Parameters forceNewId: boolean = false Returns Generator&lt;any, boolean, unknown&gt; clearTelemetry clearTelemetry(): Promise&lt;void&gt; Returns Promise&lt;void&gt; flushTelemetry flushTelemetry(includeEndSession?: boolean): Promise&lt;void&gt; Parameters includeEndSession: boolean = false Returns Promise&lt;void&gt; getDb getDb(): Promise&lt;IDBPDatabase&lt;TelemetryDb&gt;&gt; Returns Promise&lt;IDBPDatabase&lt;TelemetryDb&gt;&gt; optIn optIn(mode: TelemetryMode): Promise&lt;void&gt; Parameters mode: TelemetryMode Returns Promise&lt;void&gt; optOut optOut(): Promise&lt;void&gt; Returns Promise&lt;void&gt;","keywords":""},{"title":"TileWebGLService","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/class/TileWebGLService","content":"TileWebGLService Hierarchy TileWebGLService PreviewWebGLService Index Properties cmapTextureglshaderProgramshaderUniformsvertexPositionAttributevertexPositionBuffervertexUVAttributevertexUVBuffer Accessors Instance Methods setCanvasSize Properties cmapTexture cmapTexture: WebGLTexture readonlygl gl: WebGL2RenderingContext shaderProgram shaderProgram: WebGLProgram shaderUniforms shaderUniforms: ShaderUniforms vertexPositionAttribute vertexPositionAttribute: number vertexPositionBuffer vertexPositionBuffer: WebGLBuffer vertexUVAttribute vertexUVAttribute: number vertexUVBuffer vertexUVBuffer: WebGLBuffer Accessors staticInstance get Instance(): TileWebGLService Returns TileWebGLService Methods publicsetCanvasSize setCanvasSize(width: number, height: number): void Parameters width: number height: number Returns void","keywords":""},{"title":"TileService","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/class/TileService","content":"TileService Index Properties remainingTilestileStreamworkersReady Accessors zfpReadyInstance Methods clearCompressedCacheclearGPUCacheclearRequestQueuedecompressPreviewRasterDatagetTilegetTileTextureParametershandleFileClosedrequestTilessetAnimationEnabledsetCachesetWorkerReadyupdateHiddenFileChannelsupdateRemainingTileCountuploadTileToGPU Properties remainingTiles remainingTiles: number readonlytileStream tileStream: Subject&lt;TileStreamDetails&gt; workersReady workersReady: boolean[] Accessors zfpReady get zfpReady(): boolean Returns boolean staticInstance get Instance(): TileService Returns TileService Methods clearCompressedCache clearCompressedCache(fileId: number): void Parameters fileId: number Returns void clearGPUCache clearGPUCache(fileId: number): void Parameters fileId: number Returns void clearRequestQueue clearRequestQueue(fileId?: number): void Parameters optionalfileId: number Returns void publicdecompressPreviewRasterData decompressPreviewRasterData(previewData: PvPreviewData): void Parameters previewData: PvPreviewData Returns void getTile getTile(tileCoordinateEncoded: number, fileId: number, channel: number, stokes: number, peek?: boolean): any Parameters tileCoordinateEncoded: number fileId: number channel: number stokes: number peek: boolean = false Returns any getTileTextureParameters getTileTextureParameters(tile: RasterTile): { offset: { x: number; y: number }; texture: WebGLTexture } Parameters tile: RasterTile Returns { offset: { x: number; y: number }; texture: WebGLTexture } offset: { x: number; y: number } x: number y: number texture: WebGLTexture handleFileClosed handleFileClosed(fileId: number): void Parameters fileId: number Returns void requestTiles requestTiles(tiles: TileCoordinate[], fileId: number, channel: number, stokes: number, focusPoint: Point2D, compressionQuality: number, channelsChanged?: boolean): void Parameters tiles: TileCoordinate[] fileId: number channel: number stokes: number focusPoint: Point2D compressionQuality: number channelsChanged: boolean = false Returns void publicsetAnimationEnabled setAnimationEnabled(val: boolean): void Parameters val: boolean Returns void publicsetCache setCache(lruCapacityGPU: number, lruCapacitySystem: number): void Parameters lruCapacityGPU: number lruCapacitySystem: number Returns void setWorkerReady setWorkerReady(index: number): void Parameters index: number Returns void updateHiddenFileChannels updateHiddenFileChannels(fileId: number, channel: number, stokes: number): void Parameters fileId: number channel: number stokes: number Returns void updateRemainingTileCount updateRemainingTileCount(): void Returns void uploadTileToGPU uploadTileToGPU(tile: RasterTile): void Parameters tile: RasterTile Returns void","keywords":""},{"title":"VectorOverlayWebGLService","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/class/VectorOverlayWebGLService","content":"VectorOverlayWebGLService Index Properties glshaderUniforms Accessors Instance Methods setCanvasSize Properties readonlygl gl: WebGL2RenderingContext shaderUniforms shaderUniforms: ShaderUniforms Accessors staticInstance get Instance(): VectorOverlayWebGLService Returns VectorOverlayWebGLService Methods publicsetCanvasSize setCanvasSize(width: number, height: number): void Parameters width: number height: number Returns void","keywords":""},{"title":"CatalogDatabase","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/enum/CatalogDatabase","content":"CatalogDatabase Index Enumeration Members SIMBADVIZIER Enumeration Members SIMBAD SIMBAD: SIMBAD VIZIER VIZIER: VizieR","keywords":""},{"title":"CatalogTextureType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/enum/CatalogTextureType","content":"CatalogTextureType Index Enumeration Members ColorOrientationPositionSelectedSourceSizeSizeMinor Enumeration Members Color Color: 2 Orientation Orientation: 3 Position Position: 0 SelectedSource SelectedSource: 4 Size Size: 1 SizeMinor SizeMinor: 5","keywords":""},{"title":"ConnectionStatus","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/enum/ConnectionStatus","content":"ConnectionStatus Index Enumeration Members ACTIVECLOSEDPENDING Enumeration Members ACTIVE ACTIVE: 2 CLOSED CLOSED: 0 PENDING PENDING: 1","keywords":""},{"title":"TelemetryMode","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/enum/TelemetryMode","content":"TelemetryMode Index Enumeration Members MinimalNoneUsage Enumeration Members Minimal Minimal: minimal None None: none Usage Usage: usage","keywords":""},{"title":"TelemetryAction","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/enum/TelemetryAction","content":"TelemetryAction Index Enumeration Members CatalogLoadingConnectionEndSessionFileCloseFileOpenMomentGenerationOptInOptOutPvGenerationRetryConnectionSpectralProfileGeneration Enumeration Members CatalogLoading CatalogLoading: catalogLoading Connection Connection: connection EndSession EndSession: endSession FileClose FileClose: fileClose FileOpen FileOpen: fileOpen MomentGeneration MomentGeneration: momentGeneration OptIn OptIn: optIn OptOut OptOut: optOut PvGeneration PvGeneration: pvGeneration RetryConnection RetryConnection: retryConnection SpectralProfileGeneration SpectralProfileGeneration: spectralProfileGeneration","keywords":""},{"title":"CompressedTile","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/interface/CompressedTile","content":"CompressedTile Index Properties compressionQualitytile Properties compressionQuality compressionQuality: number tile tile: ITileData","keywords":""},{"title":"RasterTile","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/interface/RasterTile","content":"RasterTile Index Properties dataheighttextureCoordinatewidth Properties data data: Float32Array height height: number textureCoordinate textureCoordinate: number width width: number","keywords":""},{"title":"RuntimeConfig","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/interface/RuntimeConfig","content":"RuntimeConfig Index Properties apiAddressdashboardAddressgoogleClientIdlogoutAddresstokenRefreshAddress Properties optionalapiAddress apiAddress?: string optionaldashboardAddress dashboardAddress?: string optionalgoogleClientId googleClientId?: string optionallogoutAddress logoutAddress?: string optionaltokenRefreshAddress tokenRefreshAddress?: string","keywords":""},{"title":"SpectralLineResponse","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/interface/SpectralLineResponse","content":"SpectralLineResponse Index Properties dataSizeheadersspectralLineData Properties dataSize dataSize: number headers headers: ICatalogHeader[] spectralLineData spectralLineData: {} Type declaration [key string]: CARTA.IColumnData","keywords":""},{"title":"TelemetryMessage","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/interface/TelemetryMessage","content":"TelemetryMessage Index Properties actiondetailsidsessionIdtimestampusageEntryversion Properties action action: TelemetryAction optionaldetails details?: any id id: string sessionId sessionId: string timestamp timestamp: number optionalusageEntry usageEntry?: boolean version version: string","keywords":""},{"title":"TileStreamDetails","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-services/interface/TileStreamDetails","content":"TileStreamDetails Index Properties channelfileIdflushstokestileCount Properties channel channel: number fileId fileId: number flush flush: boolean stokes stokes: number tileCount tileCount: number","keywords":""},{"title":"AlertStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/AlertStore","content":"AlertStore Index Properties alertIconalertTextalertTypealertVisibleinteractiveAlertTextshowDashboardLink Accessors Instance Methods dismissAlerthandleInteractiveAlertClosedshowAlertshowInteractiveAlertshowRetryAlert Properties alertIcon alertIcon: any alertText alertText: any alertType alertType: AlertType alertVisible alertVisible: boolean interactiveAlertText interactiveAlertText: any showDashboardLink showDashboardLink: boolean Accessors staticInstance get Instance(): AlertStore Returns AlertStore Methods dismissAlert dismissAlert(): void Returns void handleInteractiveAlertClosed handleInteractiveAlertClosed(confirmed: boolean): void Parameters confirmed: boolean Returns void showAlert showAlert(text: any, icon?: any, showDashboard?: boolean): void Parameters text: any optionalicon: any showDashboard: boolean = false Returns void showInteractiveAlert showInteractiveAlert(text: any, icon?: any, showDashboard?: boolean): Promise&lt;boolean&gt; Parameters text: any optionalicon: any showDashboard: boolean = false Returns Promise&lt;boolean&gt; showRetryAlert showRetryAlert(text: any, icon?: any, showDashboard?: boolean): Promise&lt;boolean&gt; Parameters text: any optionalicon: any showDashboard: boolean = false Returns Promise&lt;boolean&gt;","keywords":""},{"title":"carta-frontend/stores","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores","content":"carta-frontend/stores Index Classes ASTSettingsStringAlertStoreAnimatorStoreAppStoreCatalogOnlineQueryConfigStoreCatalogOnlineQueryProfileStoreCatalogPlotWidgetStoreCatalogProfileStoreCatalogStoreCatalogWidgetStoreColorbarStoreCompassAnnotationStoreContourConfigStoreContourStoreDialogStoreDistanceMeasuringStoreEmptyWidgetStoreFileBrowserStoreFrameStoreHelpStoreHistogramWidgetStoreImageFittingIndividualStoreImageFittingStoreLayerListWidgetStoreLayoutStoreLogEntryLogStoreOverlayAxisSettingsOverlayBeamSettingsOverlayBeamStoreOverlayBorderSettingsOverlayColorbarSettingsOverlayGlobalSettingsOverlayGridSettingsOverlayLabelSettingsOverlayNumberSettingsOverlayStoreOverlayTickSettingsOverlayTitleSettingsPaddingPointAnnotationStorePreferenceStoreProfileFittingIndividualStoreProfileFittingStoreProfileSmoothingStorePvGeneratorWidgetStoreRegionSetStoreRegionStoreRegionWidgetStoreRenderConfigStoreRenderConfigWidgetStoreRestFreqStoreRulerAnnotationStoreSnippetStoreSpatialProfileStoreSpatialProfileWidgetStoreSpectralLineQueryWidgetStoreSpectralProfileSelectionStoreSpectralProfileStoreSpectralProfileWidgetStoreStatsWidgetStoreStokesAnalysisWidgetStoreTextAnnotationStoreVectorAnnotationStoreVectorOverlayConfigStoreVectorOverlayStoreWidgetConfigWidgetPropsWidgetsStore Enumerations AlertTypeAnimationModeAstColorsIndexBeamTypeBrowserModeCatalogCoordinateCatalogOverlayShapeCatalogPlotTypeCatalogSettingsTabsCatalogUpdateModeContourDashModeContourGeneratorTypeCoordinateModeFileFilteringTypeFittingContinuumFittingFunctionFontFontStyleFrameScalingHelpTypeLabelTypeLayerListSettingsTabsMomentSelectingModeMultiProfileCategoryNumberFormatTypePVAxisPlayModePreferenceKeysRadiusUnitsRedshiftTypeRegionIdRegionModeRegionsOpacityRegionsTypeSelectionModeSpectralLineHeadersSpectralLineQueryRangeTypeSpectralLineQueryUnitStokesCoordinateSystemTypeVectorOverlaySourceWidgetType Interfaces CatalogPlotWidgetStorePropsDefaultWidgetConfigFrameInfoISelectedFileSpectralLineVectorOverlayTile Type Aliases BorderCatalogFileTypeControlHeaderDragModeImageFileTypeMultiPlotDataRegionFileTypeValueClipVizierItemXBorder Variables ACTIVE_FILE_IDCENTER_POINT_INDEXCURSOR_REGION_IDFOCUS_REGION_RATIONUMBER_FORMAT_LABELPREVIEW_PV_FILEIDSIZE_POINT_INDEXWCS_PRECISION Type Aliases Border Border: { xMax: number; xMin: number; yMax: number; yMin: number } Type declaration xMax: number xMin: number yMax: number yMin: number CatalogFileType CatalogFileType: CARTA.CatalogFileType.VOTable | CARTA.CatalogFileType.FITSTable ControlHeader ControlHeader: { columnIndex: number; columnWidth: number; dataIndex: number; display: boolean; filter: string } Type declaration columnIndex: number columnWidth: number dataIndex: number display: boolean filter: string DragMode DragMode: zoom | pan | select | lasso | orbit | turntable | false ImageFileType ImageFileType: CARTA.FileType.CASA | CARTA.FileType.FITS | CARTA.FileType.HDF5 | CARTA.FileType.MIRIAD MultiPlotData MultiPlotData: { colors: string[]; comments: Comments[]; data: DataPoints[]; fittingData: { x: number[]; y: Float32Array | Float64Array }; labels: { image: string; plot: string }[]; numProfiles: number; plotName: { image: string; plot: string }; progress: number; secondaryXData: number[][]; smoothedData: DataPoints[]; xMax: number; xMin: number; yMax: number; yMean: number; yMin: number; yRms: number } Type declaration colors: string[] comments: Comments[] data: DataPoints[] fittingData: { x: number[]; y: Float32Array | Float64Array } x: number[] y: Float32Array | Float64Array labels: { image: string; plot: string }[] numProfiles: number plotName: { image: string; plot: string } image: string plot: string progress: number secondaryXData: number[][] smoothedData: DataPoints[] xMax: number xMin: number yMax: number yMean: number yMin: number yRms: number RegionFileType RegionFileType: CARTA.FileType.CRTF | CARTA.FileType.DS9_REG ValueClip ValueClip: size-min | size-max | angle-min | angle-max VizierItem VizierItem: { description: string; name: string } Type declaration description: string name: string XBorder XBorder: { xMax: number; xMin: number } Type declaration xMax: number xMin: number Variables constACTIVE_FILE_ID ACTIVE_FILE_ID: -1 = -1 constCENTER_POINT_INDEX CENTER_POINT_INDEX: 0 = 0 constCURSOR_REGION_ID CURSOR_REGION_ID: 0 = 0 constFOCUS_REGION_RATIO FOCUS_REGION_RATIO: 0.4 = 0.4 constNUMBER_FORMAT_LABEL NUMBER_FORMAT_LABEL: Map&lt;NumberFormatType, string&gt; = ... constPREVIEW_PV_FILEID PREVIEW_PV_FILEID: -2 = -2 constSIZE_POINT_INDEX SIZE_POINT_INDEX: 1 = 1 constWCS_PRECISION WCS_PRECISION: 10 = 10","keywords":""},{"title":"AnimatorStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/AnimatorStore","content":"AnimatorStore Index Constructors constructor Properties animationActiveanimationModeframeRatemaxFrameRatemaxStepminFrameRateminStepplayModestep Accessors frameIntervalserverAnimationActiveInstance Methods animatesetAnimationModesetFrameRatesetStepstartAnimationstopAnimation Constructors constructor new AnimatorStore(): AnimatorStore Returns AnimatorStore Properties animationActive animationActive: boolean animationMode animationMode: AnimationMode frameRate frameRate: number maxFrameRate maxFrameRate: number maxStep maxStep: number minFrameRate minFrameRate: number minStep minStep: number playMode playMode: PlayMode step step: number Accessors frameInterval get frameInterval(): number Returns number serverAnimationActive get serverAnimationActive(): boolean Returns boolean staticInstance get Instance(): AnimatorStore Returns AnimatorStore Methods animate animate(): void Returns void setAnimationMode setAnimationMode(val: AnimationMode): void Parameters val: AnimationMode Returns void setFrameRate setFrameRate(val: number): void Parameters val: number Returns void setStep setStep(val: number): void Parameters val: number Returns void startAnimation startAnimation(): Generator&lt;Promise&lt;IStartAnimationAck&gt;, void, unknown&gt; Returns Generator&lt;Promise&lt;IStartAnimationAck&gt;, void, unknown&gt; stopAnimation stopAnimation(): void Returns void","keywords":""},{"title":"ASTSettingsString","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/ASTSettingsString","content":"ASTSettingsString Index Constructors constructor Properties stringList Methods addaddSectiontoString Constructors constructor new ASTSettingsString(): ASTSettingsString Returns ASTSettingsString Properties stringList stringList: string[] Methods add add(name: string, value: any, storeIf?: boolean): void Parameters name: string value: any storeIf: boolean = true Returns void addSection addSection(section: string): void Parameters section: string Returns void toString toString(): string Returns string","keywords":""},{"title":"CatalogOnlineQueryConfigStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/CatalogOnlineQueryConfigStore","content":"CatalogOnlineQueryConfigStore Index Constructors constructor Properties catalogDBcenterPixelCoordcoordsFormatcoordsTypeenablePointSelectionisObjectQueryingisQueryingmaxObjectobjectNameradiusUnitssearchRadiusvizierKeyWordsvizierResourcevizierSelectedTableNameMAX_OBJECTSMIN_OBJECTSOBJECT_SIZE Accessors activeFramecenterPixelCoordAsPoint2DdisableObjectSearchenableLoadViziermaxRadiusradiusAsArcmradiusAsArcsradiusAsDegsearchRadiusInDegreeselectedVizierSourceshowVizierResultvizierTableInstance Methods convertToDegconvertToPixelremoveVizierSelectedTableresetMaxObjectsresetObjectNameresetSearchRadiusresetVizierresetVizierSelectedTablesetCatalogDBsetCoordsFormatsetCoordsTypesetFrameCentersetMaxObjectssetObjectNamesetObjectQueryStatussetPointSelectionsetQueryStatussetRadiusUnitssetSearchRadiussetVizierKeyWordssetVizierQueryResultupdateCenterPixelCoordupdateVizierSelectedTable Constructors constructor new CatalogOnlineQueryConfigStore(): CatalogOnlineQueryConfigStore Returns CatalogOnlineQueryConfigStore Properties catalogDB catalogDB: CatalogDatabase centerPixelCoord centerPixelCoord: { x: string; y: string } Type declaration x: string y: string coordsFormat coordsFormat: NumberFormatType coordsType coordsType: CatalogSystemType enablePointSelection enablePointSelection: boolean isObjectQuerying isObjectQuerying: boolean isQuerying isQuerying: boolean maxObject maxObject: number objectName objectName: string radiusUnits radiusUnits: RadiusUnits searchRadius searchRadius: number vizierKeyWords vizierKeyWords: string vizierResource vizierResource: Map&lt;string, VizierResource&gt; vizierSelectedTableName vizierSelectedTableName: VizierItem[] publicstaticreadonlyMAX_OBJECTS MAX_OBJECTS: 10000000 = 10000000 publicstaticreadonlyMIN_OBJECTS MIN_OBJECTS: 1 = 1 publicstaticreadonlyOBJECT_SIZE OBJECT_SIZE: 1000 = 1000 Accessors activeFrame get activeFrame(): FrameStore Returns FrameStore centerPixelCoordAsPoint2D get centerPixelCoordAsPoint2D(): Point2D Returns Point2D disableObjectSearch get disableObjectSearch(): boolean Returns boolean enableLoadVizier get enableLoadVizier(): boolean Returns boolean maxRadius get maxRadius(): number Returns number radiusAsArcm get radiusAsArcm(): number Returns number radiusAsArcs get radiusAsArcs(): number Returns number radiusAsDeg get radiusAsDeg(): number Returns number searchRadiusInDegree get searchRadiusInDegree(): number Returns number selectedVizierSource get selectedVizierSource(): VizierResource[] Returns VizierResource[] showVizierResult get showVizierResult(): boolean Returns boolean vizierTable get vizierTable(): VizierItem[] Returns VizierItem[] staticInstance get Instance(): CatalogOnlineQueryConfigStore Returns CatalogOnlineQueryConfigStore Methods convertToDeg convertToDeg(pixelCoords: Point2D, system?: SystemType): { x: string; y: string } Parameters pixelCoords: Point2D optionalsystem: SystemType Returns { x: string; y: string } x: string y: string convertToPixel convertToPixel(coords: Point2D): Point2D Parameters coords: Point2D Returns Point2D removeVizierSelectedTable removeVizierSelectedTable(table: string): void Parameters table: string Returns void resetMaxObjects resetMaxObjects(): void Returns void resetObjectName resetObjectName(): void Returns void resetSearchRadius resetSearchRadius(): void Returns void resetVizier resetVizier(): void Returns void resetVizierSelectedTable resetVizierSelectedTable(): void Returns void setCatalogDB setCatalogDB(db: CatalogDatabase): void Parameters db: CatalogDatabase Returns void setCoordsFormat setCoordsFormat(format: NumberFormatType): void Parameters format: NumberFormatType Returns void setCoordsType setCoordsType(type: CatalogSystemType): void Parameters type: CatalogSystemType Returns void publicsetFrameCenter setFrameCenter(): void Returns void setMaxObjects setMaxObjects(size: number): void Parameters size: number Returns void setObjectName setObjectName(object: string): void Parameters object: string Returns void setObjectQueryStatus setObjectQueryStatus(isQuerying: boolean): void Parameters isQuerying: boolean Returns void setPointSelection setPointSelection(): void Returns void setQueryStatus setQueryStatus(isQuerying: boolean): void Parameters isQuerying: boolean Returns void setRadiusUnits setRadiusUnits(units: RadiusUnits): void Parameters units: RadiusUnits Returns void setSearchRadius setSearchRadius(radius: number): void Parameters radius: number Returns void setVizierKeyWords setVizierKeyWords(keyWords: string): void Parameters keyWords: string Returns void setVizierQueryResult setVizierQueryResult(resources: Map&lt;string, VizierResource&gt;): void Parameters resources: Map&lt;string, VizierResource&gt; Returns void updateCenterPixelCoord updateCenterPixelCoord(center: Point2D): void Parameters center: Point2D Returns void updateVizierSelectedTable updateVizierSelectedTable(table: VizierItem): void Parameters table: VizierItem Returns void","keywords":""},{"title":"CatalogOnlineQueryProfileStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/CatalogOnlineQueryProfileStore","content":"CatalogOnlineQueryProfileStore Hierarchy AbstractCatalogProfileStore CatalogOnlineQueryProfileStore Index Constructors constructor Properties catalogControlHeadercatalogCoordinateSystemcatalogFilterRequestcatalogHeadercatalogInfocatalogTypefilterDataSizefilterIndexMaploadingDatanumVisibleRowsprogressselectedPointIndicessortedIndexMapsortingInfoupdateModeupdateTableViewupdatingDataStreamCoordinateSystemName Accessors activedSystemautoScrollRowNumbercatalogDatacatalogFileIdcatalogOriginalDatadisplayedColumnHeadershasFilterinitCatalogControlHeaderisFileBasedCatalogloadOntoImagemaxRowsregionSelectedselectedDatashouldUpdateDatasystemCoordinateMaptableColumnWidtsupdateRequestDataSize Methods clearDatafilterColumnDataget1DPlotDataget2DPlotDatagetOriginIndicesgetSortedIndicesgetUserFiltersinitFilterIndexMapinitSortedIndexMapresetCatalogFilterRequestresetFilterRequestresetUserFilterssetCatalogCoordinateSystemsetColumnFiltersetHeaderDisplaysetLoadingDataStatussetMaxRowssetProgresssetSelectedPointIndicessetSortingInfosetTableColumnWidthsetUpdateModesetUpdatingDataStreamupdateCatalogDataupdateSortedIndexMapupdateTableStatusgetCatalogSystem Constructors constructor new CatalogOnlineQueryProfileStore(catalogInfo: CatalogInfo, catalogHeader: ICatalogHeader[], catalogData: Map&lt;number, ProcessedColumnData&gt;, catalogType: CatalogType): CatalogOnlineQueryProfileStore Overrides AbstractCatalogProfileStore.constructor Parameters catalogInfo: CatalogInfo catalogHeader: ICatalogHeader[] catalogData: Map&lt;number, ProcessedColumnData&gt; catalogType: CatalogType Returns CatalogOnlineQueryProfileStore Properties catalogControlHeader catalogControlHeader: Map&lt;string, ControlHeader&gt; Overrides AbstractCatalogProfileStore.catalogControlHeader catalogCoordinateSystem catalogCoordinateSystem: { coordinate: { x: CatalogOverlay; y: CatalogOverlay }; epoch: string; equinox: string; system: CatalogSystemType } Inherited from AbstractCatalogProfileStore.catalogCoordinateSystem Type declaration coordinate: { x: CatalogOverlay; y: CatalogOverlay } x: CatalogOverlay y: CatalogOverlay epoch: string equinox: string system: CatalogSystemType catalogFilterRequest catalogFilterRequest: CatalogFilterRequest Inherited from AbstractCatalogProfileStore.catalogFilterRequest catalogHeader catalogHeader: ICatalogHeader[] Overrides AbstractCatalogProfileStore.catalogHeader catalogInfo catalogInfo: CatalogInfo Overrides AbstractCatalogProfileStore.catalogInfo catalogType catalogType: CatalogType Inherited from AbstractCatalogProfileStore.catalogType filterDataSize filterDataSize: number Inherited from AbstractCatalogProfileStore.filterDataSize filterIndexMap filterIndexMap: number[] Inherited from AbstractCatalogProfileStore.filterIndexMap loadingData loadingData: boolean Inherited from AbstractCatalogProfileStore.loadingData numVisibleRows numVisibleRows: number Overrides AbstractCatalogProfileStore.numVisibleRows progress progress: number Inherited from AbstractCatalogProfileStore.progress selectedPointIndices selectedPointIndices: number[] Inherited from AbstractCatalogProfileStore.selectedPointIndices sortedIndexMap sortedIndexMap: number[] Inherited from AbstractCatalogProfileStore.sortedIndexMap sortingInfo sortingInfo: { columnName: string; sortingType: SortingType } Inherited from AbstractCatalogProfileStore.sortingInfo Type declaration columnName: string sortingType: SortingType updateMode updateMode: CatalogUpdateMode Inherited from AbstractCatalogProfileStore.updateMode updateTableView updateTableView: boolean Inherited from AbstractCatalogProfileStore.updateTableView updatingDataStream updatingDataStream: boolean Inherited from AbstractCatalogProfileStore.updatingDataStream publicstaticreadonlyCoordinateSystemName CoordinateSystemName: Map&lt;CatalogSystemType, string&gt; = ... Inherited from AbstractCatalogProfileStore.CoordinateSystemName Accessors activedSystem get activedSystem(): { x: CatalogOverlay; y: CatalogOverlay } Inherited from AbstractCatalogProfileStore.activedSystem Returns { x: CatalogOverlay; y: CatalogOverlay } x: CatalogOverlay y: CatalogOverlay autoScrollRowNumber get autoScrollRowNumber(): IRegion Inherited from AbstractCatalogProfileStore.autoScrollRowNumber Returns IRegion catalogData get catalogData(): Map&lt;number, ProcessedColumnData&gt; Inherited from AbstractCatalogProfileStore.catalogData Returns Map&lt;number, ProcessedColumnData&gt; catalogFileId get catalogFileId(): number Inherited from AbstractCatalogProfileStore.catalogFileId Returns number catalogOriginalData get catalogOriginalData(): Map&lt;number, ProcessedColumnData&gt; Inherited from AbstractCatalogProfileStore.catalogOriginalData Returns Map&lt;number, ProcessedColumnData&gt; displayedColumnHeaders get displayedColumnHeaders(): CatalogHeader[] Inherited from AbstractCatalogProfileStore.displayedColumnHeaders Returns CatalogHeader[] hasFilter get hasFilter(): boolean Inherited from AbstractCatalogProfileStore.hasFilter Returns boolean initCatalogControlHeader get initCatalogControlHeader(): Map&lt;string, ControlHeader&gt; Overrides AbstractCatalogProfileStore.initCatalogControlHeader Returns Map&lt;string, ControlHeader&gt; isFileBasedCatalog get isFileBasedCatalog(): boolean Inherited from AbstractCatalogProfileStore.isFileBasedCatalog Returns boolean loadOntoImage get loadOntoImage(): boolean Overrides AbstractCatalogProfileStore.loadOntoImage Returns boolean maxRows get maxRows(): number Returns number regionSelected get regionSelected(): number Inherited from AbstractCatalogProfileStore.regionSelected Returns number selectedData get selectedData(): Map&lt;number, ProcessedColumnData&gt; Inherited from AbstractCatalogProfileStore.selectedData Returns Map&lt;number, ProcessedColumnData&gt; shouldUpdateData get shouldUpdateData(): boolean Overrides AbstractCatalogProfileStore.shouldUpdateData Returns boolean systemCoordinateMap get systemCoordinateMap(): Map&lt;CatalogSystemType, { x: CatalogOverlay; y: CatalogOverlay }&gt; Inherited from AbstractCatalogProfileStore.systemCoordinateMap Returns Map&lt;CatalogSystemType, { x: CatalogOverlay; y: CatalogOverlay }&gt; tableColumnWidts get tableColumnWidts(): number[] Inherited from AbstractCatalogProfileStore.tableColumnWidts Returns number[] updateRequestDataSize get updateRequestDataSize(): CatalogFilterRequest Overrides AbstractCatalogProfileStore.updateRequestDataSize Returns CatalogFilterRequest Methods clearData clearData(): void Inherited from AbstractCatalogProfileStore.clearData Returns void filterColumnData filterColumnData(catalogColumn: [], filterConfig: FilterConfig): number[] Parameters catalogColumn: [] filterConfig: FilterConfig Returns number[] publicget1DPlotData get1DPlotData(column: string): { headerInfo: ICatalogHeader; wcsData?: TypedArray } Inherited from AbstractCatalogProfileStore.get1DPlotData Parameters column: string Returns { headerInfo: ICatalogHeader; wcsData?: TypedArray } headerInfo: ICatalogHeader optionalwcsData?: TypedArray publicget2DPlotData get2DPlotData(xColumnName: string, yColumnName: string, columnsData: Map&lt;number, ProcessedColumnData&gt;): { wcsX?: number[]; wcsY?: number[]; xHeaderInfo: ICatalogHeader; yHeaderInfo: ICatalogHeader } Inherited from AbstractCatalogProfileStore.get2DPlotData Parameters xColumnName: string yColumnName: string columnsData: Map&lt;number, ProcessedColumnData&gt; Returns { wcsX?: number[]; wcsY?: number[]; xHeaderInfo: ICatalogHeader; yHeaderInfo: ICatalogHeader } optionalwcsX?: number[] optionalwcsY?: number[] xHeaderInfo: ICatalogHeader yHeaderInfo: ICatalogHeader getOriginIndices getOriginIndices(selectedPointIndices: number[]): number[] Inherited from AbstractCatalogProfileStore.getOriginIndices Parameters selectedPointIndices: number[] Returns number[] getSortedIndices getSortedIndices(selectedPointIndices: number[]): number[] Inherited from AbstractCatalogProfileStore.getSortedIndices Parameters selectedPointIndices: number[] Returns number[] publicgetUserFilters getUserFilters(): FilterConfig[] Inherited from AbstractCatalogProfileStore.getUserFilters Returns FilterConfig[] initFilterIndexMap initFilterIndexMap(): void Returns void initSortedIndexMap initSortedIndexMap(): void Returns void resetCatalogFilterRequest resetCatalogFilterRequest(): void Overrides AbstractCatalogProfileStore.resetCatalogFilterRequest Returns void resetFilterRequest resetFilterRequest(filterConfigs?: FilterConfig[]): void Overrides AbstractCatalogProfileStore.resetFilterRequest Parameters optionalfilterConfigs: FilterConfig[] Returns void resetUserFilters resetUserFilters(): void Inherited from AbstractCatalogProfileStore.resetUserFilters Returns void setCatalogCoordinateSystem setCatalogCoordinateSystem(catalogSystem: CatalogSystemType): void Inherited from AbstractCatalogProfileStore.setCatalogCoordinateSystem Parameters catalogSystem: CatalogSystemType Returns void setColumnFilter setColumnFilter(filter: string, columnName: string): void Inherited from AbstractCatalogProfileStore.setColumnFilter Parameters filter: string columnName: string Returns void setHeaderDisplay setHeaderDisplay(val: boolean, columnName: string): void Inherited from AbstractCatalogProfileStore.setHeaderDisplay Parameters val: boolean columnName: string Returns void setLoadingDataStatus setLoadingDataStatus(val: boolean): void Inherited from AbstractCatalogProfileStore.setLoadingDataStatus Parameters val: boolean Returns void setMaxRows setMaxRows(maxRows: number): void Overrides AbstractCatalogProfileStore.setMaxRows Parameters maxRows: number Returns void setProgress setProgress(val: number): void Inherited from AbstractCatalogProfileStore.setProgress Parameters val: number Returns void setSelectedPointIndices setSelectedPointIndices(pointIndices: number[], autoPanZoom: boolean): void Inherited from AbstractCatalogProfileStore.setSelectedPointIndices Parameters pointIndices: number[] autoPanZoom: boolean Returns void setSortingInfo setSortingInfo(columnName: string, sortingType: SortingType): void Overrides AbstractCatalogProfileStore.setSortingInfo Parameters columnName: string sortingType: SortingType Returns void setTableColumnWidth setTableColumnWidth(width: number, columnName: string): void Inherited from AbstractCatalogProfileStore.setTableColumnWidth Parameters width: number columnName: string Returns void setUpdateMode setUpdateMode(mode: CatalogUpdateMode): void Inherited from AbstractCatalogProfileStore.setUpdateMode Parameters mode: CatalogUpdateMode Returns void setUpdatingDataStream setUpdatingDataStream(val: boolean): void Inherited from AbstractCatalogProfileStore.setUpdatingDataStream Parameters val: boolean Returns void updateCatalogData updateCatalogData(catalogFilter: CatalogFilterResponse, catalogData: Map&lt;number, ProcessedColumnData&gt;): void Parameters catalogFilter: CatalogFilterResponse catalogData: Map&lt;number, ProcessedColumnData&gt; Returns void updateSortedIndexMap updateSortedIndexMap(): void Returns void updateTableStatus updateTableStatus(val: boolean): void Inherited from AbstractCatalogProfileStore.updateTableStatus Parameters val: boolean Returns void publicstaticgetCatalogSystem getCatalogSystem(system: string): CatalogSystemType Inherited from AbstractCatalogProfileStore.getCatalogSystem Parameters system: string Returns CatalogSystemType","keywords":""},{"title":"CatalogPlotWidgetStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/CatalogPlotWidgetStore","content":"CatalogPlotWidgetStore Index Constructors constructor Properties dragmodefittinghistogramBorderindicatorInfologScaleYminMaxXnBinxplotTypescatterborderstatisticstatisticColumnNamexColumnNameyColumnName Accessors enableStatisticfittingResultStringisHistogramAutoScaledXisScatterAutoScaledshowFittingResultshowStatisticResultstatisticString Methods initLinearFittinginitStatisticsetColumnXsetColumnYsetDragmodesetFittingsetHistogramXBordersetIndicatorsetLogScaleYsetMinMaxXsetNumBinsXsetScatterbordersetStatisticsetStatisticColumn Constructors constructor new CatalogPlotWidgetStore(props: CatalogPlotWidgetStoreProps): CatalogPlotWidgetStore Parameters props: CatalogPlotWidgetStoreProps Returns CatalogPlotWidgetStore Properties dragmode dragmode: DragMode fitting fitting: Fitting histogramBorder histogramBorder: XBorder indicatorInfo indicatorInfo: Point2D logScaleY logScaleY: boolean minMaxX minMaxX: { maxVal: number; minVal: number } Type declaration maxVal: number minVal: number nBinx nBinx: number plotType plotType: CatalogPlotType scatterborder scatterborder: Border statistic statistic: Statistic statisticColumnName statisticColumnName: string xColumnName xColumnName: string yColumnName yColumnName: string Accessors enableStatistic get enableStatistic(): boolean Returns boolean fittingResultString get fittingResultString(): string Returns string isHistogramAutoScaledX get isHistogramAutoScaledX(): boolean Returns boolean isScatterAutoScaled get isScatterAutoScaled(): boolean Returns boolean showFittingResult get showFittingResult(): boolean Returns boolean showStatisticResult get showStatisticResult(): boolean Returns boolean statisticString get statisticString(): string Returns string Methods initLinearFitting initLinearFitting(): void Returns void initStatistic initStatistic(): void Returns void setColumnX setColumnX(columnName: string): void Parameters columnName: string Returns void setColumnY setColumnY(columnName: string): void Parameters columnName: string Returns void setDragmode setDragmode(mode: DragMode): void Parameters mode: DragMode Returns void setFitting setFitting(value: Fitting): void Parameters value: Fitting Returns void setHistogramXBorder setHistogramXBorder(xborder: XBorder): void Parameters xborder: XBorder Returns void setIndicator setIndicator(val: Point2D): void Parameters val: Point2D Returns void setLogScaleY setLogScaleY(val: boolean): void Parameters val: boolean Returns void setMinMaxX setMinMaxX(value: { maxVal: number; minVal: number }): void Parameters value: { maxVal: number; minVal: number } Returns void setNumBinsX setNumBinsX(val: number): void Parameters val: number Returns void setScatterborder setScatterborder(border: Border): void Parameters border: Border Returns void setStatistic setStatistic(value: Statistic): void Parameters value: Statistic Returns void setStatisticColumn setStatisticColumn(columnName: string): void Parameters columnName: string Returns void","keywords":""},{"title":"CatalogProfileStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/CatalogProfileStore","content":"CatalogProfileStore Hierarchy AbstractCatalogProfileStore CatalogProfileStore Index Constructors constructor Properties catalogControlHeadercatalogCoordinateSystemcatalogFilterRequestcatalogHeadercatalogInfocatalogTypefilterDataSizefilterIndexMaploadingDatamaxRowsnumVisibleRowsprogressselectedPointIndicessortedIndexMapsortingInfosubsetEndIndexupdateModeupdateTableViewupdatingDataStreamCoordinateSystemNameInitTableRows Accessors activedSystemautoScrollRowNumbercatalogDatacatalogFileIdcatalogOriginalDatacolumnIndicesdisplayedColumnHeadershasFilterinitCatalogControlHeaderinitCatalogFilterRequestisFileBasedCatalogloadOntoImageregionSelectedselectedDatashouldUpdateDatasystemCoordinateMaptableColumnWidtsupdateRequestDataSize Methods clearDataget1DPlotDataget2DPlotDatagetOriginIndicesgetSortedIndicesgetUserFiltersresetCatalogFilterRequestresetFilterRequestresetUserFilterssetCatalogCoordinateSystemsetCatalogHeadersetColumnFiltersetHeaderDisplaysetLoadingDataStatussetMaxRowssetNumVisibleRowssetProgresssetSelectedPointIndicessetSortingInfosetSubsetEndIndexsetTableColumnWidthsetUpdateModesetUpdatingDataStreamsetUserFilterupdateCatalogDataupdateTableStatusgetCatalogSystem Constructors constructor new CatalogProfileStore(catalogInfo: CatalogInfo, catalogHeader: ICatalogHeader[], catalogData: Map&lt;number, ProcessedColumnData&gt;, catalogType?: CatalogType): CatalogProfileStore Overrides AbstractCatalogProfileStore.constructor Parameters catalogInfo: CatalogInfo catalogHeader: ICatalogHeader[] catalogData: Map&lt;number, ProcessedColumnData&gt; catalogType: CatalogType = CatalogType.FILE Returns CatalogProfileStore Properties catalogControlHeader catalogControlHeader: Map&lt;string, ControlHeader&gt; Overrides AbstractCatalogProfileStore.catalogControlHeader catalogCoordinateSystem catalogCoordinateSystem: { coordinate: { x: CatalogOverlay; y: CatalogOverlay }; epoch: string; equinox: string; system: CatalogSystemType } Inherited from AbstractCatalogProfileStore.catalogCoordinateSystem Type declaration coordinate: { x: CatalogOverlay; y: CatalogOverlay } x: CatalogOverlay y: CatalogOverlay epoch: string equinox: string system: CatalogSystemType catalogFilterRequest catalogFilterRequest: CatalogFilterRequest Inherited from AbstractCatalogProfileStore.catalogFilterRequest catalogHeader catalogHeader: ICatalogHeader[] Overrides AbstractCatalogProfileStore.catalogHeader catalogInfo catalogInfo: CatalogInfo Overrides AbstractCatalogProfileStore.catalogInfo catalogType catalogType: CatalogType Inherited from AbstractCatalogProfileStore.catalogType filterDataSize filterDataSize: number Inherited from AbstractCatalogProfileStore.filterDataSize filterIndexMap filterIndexMap: number[] Inherited from AbstractCatalogProfileStore.filterIndexMap loadingData loadingData: boolean Inherited from AbstractCatalogProfileStore.loadingData maxRows maxRows: number numVisibleRows numVisibleRows: number Overrides AbstractCatalogProfileStore.numVisibleRows progress progress: number Inherited from AbstractCatalogProfileStore.progress selectedPointIndices selectedPointIndices: number[] Inherited from AbstractCatalogProfileStore.selectedPointIndices sortedIndexMap sortedIndexMap: number[] Inherited from AbstractCatalogProfileStore.sortedIndexMap sortingInfo sortingInfo: { columnName: string; sortingType: SortingType } Inherited from AbstractCatalogProfileStore.sortingInfo Type declaration columnName: string sortingType: SortingType subsetEndIndex subsetEndIndex: number updateMode updateMode: CatalogUpdateMode Inherited from AbstractCatalogProfileStore.updateMode updateTableView updateTableView: boolean Inherited from AbstractCatalogProfileStore.updateTableView updatingDataStream updatingDataStream: boolean Inherited from AbstractCatalogProfileStore.updatingDataStream publicstaticreadonlyCoordinateSystemName CoordinateSystemName: Map&lt;CatalogSystemType, string&gt; = ... Inherited from AbstractCatalogProfileStore.CoordinateSystemName publicstaticreadonlyInitTableRows InitTableRows: 50 = 50 Accessors activedSystem get activedSystem(): { x: CatalogOverlay; y: CatalogOverlay } Inherited from AbstractCatalogProfileStore.activedSystem Returns { x: CatalogOverlay; y: CatalogOverlay } x: CatalogOverlay y: CatalogOverlay autoScrollRowNumber get autoScrollRowNumber(): IRegion Inherited from AbstractCatalogProfileStore.autoScrollRowNumber Returns IRegion catalogData get catalogData(): Map&lt;number, ProcessedColumnData&gt; Inherited from AbstractCatalogProfileStore.catalogData Returns Map&lt;number, ProcessedColumnData&gt; catalogFileId get catalogFileId(): number Inherited from AbstractCatalogProfileStore.catalogFileId Returns number catalogOriginalData get catalogOriginalData(): Map&lt;number, ProcessedColumnData&gt; Inherited from AbstractCatalogProfileStore.catalogOriginalData Returns Map&lt;number, ProcessedColumnData&gt; columnIndices get columnIndices(): number[] Returns number[] displayedColumnHeaders get displayedColumnHeaders(): CatalogHeader[] Inherited from AbstractCatalogProfileStore.displayedColumnHeaders Returns CatalogHeader[] hasFilter get hasFilter(): boolean Inherited from AbstractCatalogProfileStore.hasFilter Returns boolean initCatalogControlHeader get initCatalogControlHeader(): Map&lt;string, ControlHeader&gt; Overrides AbstractCatalogProfileStore.initCatalogControlHeader Returns Map&lt;string, ControlHeader&gt; initCatalogFilterRequest get initCatalogFilterRequest(): CatalogFilterRequest Returns CatalogFilterRequest isFileBasedCatalog get isFileBasedCatalog(): boolean Inherited from AbstractCatalogProfileStore.isFileBasedCatalog Returns boolean loadOntoImage get loadOntoImage(): boolean Overrides AbstractCatalogProfileStore.loadOntoImage Returns boolean regionSelected get regionSelected(): number Inherited from AbstractCatalogProfileStore.regionSelected Returns number selectedData get selectedData(): Map&lt;number, ProcessedColumnData&gt; Inherited from AbstractCatalogProfileStore.selectedData Returns Map&lt;number, ProcessedColumnData&gt; shouldUpdateData get shouldUpdateData(): boolean Overrides AbstractCatalogProfileStore.shouldUpdateData Returns boolean systemCoordinateMap get systemCoordinateMap(): Map&lt;CatalogSystemType, { x: CatalogOverlay; y: CatalogOverlay }&gt; Inherited from AbstractCatalogProfileStore.systemCoordinateMap Returns Map&lt;CatalogSystemType, { x: CatalogOverlay; y: CatalogOverlay }&gt; tableColumnWidts get tableColumnWidts(): number[] Inherited from AbstractCatalogProfileStore.tableColumnWidts Returns number[] updateRequestDataSize get updateRequestDataSize(): CatalogFilterRequest Overrides AbstractCatalogProfileStore.updateRequestDataSize Returns CatalogFilterRequest Methods clearData clearData(): void Inherited from AbstractCatalogProfileStore.clearData Returns void publicget1DPlotData get1DPlotData(column: string): { headerInfo: ICatalogHeader; wcsData?: TypedArray } Inherited from AbstractCatalogProfileStore.get1DPlotData Parameters column: string Returns { headerInfo: ICatalogHeader; wcsData?: TypedArray } headerInfo: ICatalogHeader optionalwcsData?: TypedArray publicget2DPlotData get2DPlotData(xColumnName: string, yColumnName: string, columnsData: Map&lt;number, ProcessedColumnData&gt;): { wcsX?: number[]; wcsY?: number[]; xHeaderInfo: ICatalogHeader; yHeaderInfo: ICatalogHeader } Inherited from AbstractCatalogProfileStore.get2DPlotData Parameters xColumnName: string yColumnName: string columnsData: Map&lt;number, ProcessedColumnData&gt; Returns { wcsX?: number[]; wcsY?: number[]; xHeaderInfo: ICatalogHeader; yHeaderInfo: ICatalogHeader } optionalwcsX?: number[] optionalwcsY?: number[] xHeaderInfo: ICatalogHeader yHeaderInfo: ICatalogHeader getOriginIndices getOriginIndices(selectedPointIndices: number[]): number[] Inherited from AbstractCatalogProfileStore.getOriginIndices Parameters selectedPointIndices: number[] Returns number[] getSortedIndices getSortedIndices(selectedPointIndices: number[]): number[] Inherited from AbstractCatalogProfileStore.getSortedIndices Parameters selectedPointIndices: number[] Returns number[] publicgetUserFilters getUserFilters(): FilterConfig[] Inherited from AbstractCatalogProfileStore.getUserFilters Returns FilterConfig[] resetCatalogFilterRequest resetCatalogFilterRequest(): void Overrides AbstractCatalogProfileStore.resetCatalogFilterRequest Returns void resetFilterRequest resetFilterRequest(): void Overrides AbstractCatalogProfileStore.resetFilterRequest Returns void resetUserFilters resetUserFilters(): void Inherited from AbstractCatalogProfileStore.resetUserFilters Returns void setCatalogCoordinateSystem setCatalogCoordinateSystem(catalogSystem: CatalogSystemType): void Inherited from AbstractCatalogProfileStore.setCatalogCoordinateSystem Parameters catalogSystem: CatalogSystemType Returns void setCatalogHeader setCatalogHeader(catalogHeader: CatalogHeader[]): void Parameters catalogHeader: CatalogHeader[] Returns void setColumnFilter setColumnFilter(filter: string, columnName: string): void Inherited from AbstractCatalogProfileStore.setColumnFilter Parameters filter: string columnName: string Returns void setHeaderDisplay setHeaderDisplay(val: boolean, columnName: string): void Inherited from AbstractCatalogProfileStore.setHeaderDisplay Parameters val: boolean columnName: string Returns void setLoadingDataStatus setLoadingDataStatus(val: boolean): void Inherited from AbstractCatalogProfileStore.setLoadingDataStatus Parameters val: boolean Returns void setMaxRows setMaxRows(maxRows: number): void Overrides AbstractCatalogProfileStore.setMaxRows Parameters maxRows: number Returns void setNumVisibleRows setNumVisibleRows(val: number): void Parameters val: number Returns void setProgress setProgress(val: number): void Inherited from AbstractCatalogProfileStore.setProgress Parameters val: number Returns void setSelectedPointIndices setSelectedPointIndices(pointIndices: number[], autoPanZoom: boolean): void Inherited from AbstractCatalogProfileStore.setSelectedPointIndices Parameters pointIndices: number[] autoPanZoom: boolean Returns void setSortingInfo setSortingInfo(columnName: string, sortingType: SortingType): void Overrides AbstractCatalogProfileStore.setSortingInfo Parameters columnName: string sortingType: SortingType Returns void setSubsetEndIndex setSubsetEndIndex(val: number): void Parameters val: number Returns void setTableColumnWidth setTableColumnWidth(width: number, columnName: string): void Inherited from AbstractCatalogProfileStore.setTableColumnWidth Parameters width: number columnName: string Returns void setUpdateMode setUpdateMode(mode: CatalogUpdateMode): void Inherited from AbstractCatalogProfileStore.setUpdateMode Parameters mode: CatalogUpdateMode Returns void setUpdatingDataStream setUpdatingDataStream(val: boolean): void Inherited from AbstractCatalogProfileStore.setUpdatingDataStream Parameters val: boolean Returns void setUserFilter setUserFilter(catalogFilterRequest: CatalogFilterRequest): void Parameters catalogFilterRequest: CatalogFilterRequest Returns void updateCatalogData updateCatalogData(catalogFilter: CatalogFilterResponse, catalogData: Map&lt;number, ProcessedColumnData&gt;): void Parameters catalogFilter: CatalogFilterResponse catalogData: Map&lt;number, ProcessedColumnData&gt; Returns void updateTableStatus updateTableStatus(val: boolean): void Inherited from AbstractCatalogProfileStore.updateTableStatus Parameters val: boolean Returns void publicstaticgetCatalogSystem getCatalogSystem(system: string): CatalogSystemType Inherited from AbstractCatalogProfileStore.getCatalogSystem Parameters system: string Returns CatalogSystemType","keywords":""},{"title":"CatalogStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/CatalogStore","content":"CatalogStore Index Properties catalogCountscatalogPlotscatalogProfileStorescatalogProfilescatalogWidgetsimageAssociatedCatalogId Accessors activeCatalogFilescatalogGLDatavisibleCatalogFilesInstance Methods addCatalogclearCatalogPlotsByComponentIdclearCatalogPlotsByFileIdclearCatalogPlotsByWidgetIdclearImageCoordsDatacloseAssociatedCatalogconvertToImageCoordinategetAssociatedIdByWidgetIdgetCatalogFileNamesgetCatalogWidgetStoregetFrameIdByCatalogIdgetFrameMinMaxPointsgetImageIdByCatalogremoveCatalogresetActiveCatalogFilesetCatalogPlotsupdateCatalogProfilesupdateImageAssociatedCatalogId Properties catalogCounts catalogCounts: Map&lt;number, number&gt; catalogPlots catalogPlots: Map&lt;string, ObservableMap&lt;number, string&gt;&gt; catalogProfileStores catalogProfileStores: Map&lt;number, CatalogProfileStore | CatalogOnlineQueryProfileStore&gt; catalogProfiles catalogProfiles: Map&lt;string, number&gt; catalogWidgets catalogWidgets: Map&lt;number, string&gt; imageAssociatedCatalogId imageAssociatedCatalogId: Map&lt;number, number[]&gt; Accessors activeCatalogFiles get activeCatalogFiles(): number[] Returns number[] catalogGLData get catalogGLData(): Map&lt;number, CatalogOverlayCoords&gt; Returns Map&lt;number, CatalogOverlayCoords&gt; visibleCatalogFiles get visibleCatalogFiles(): Map&lt;FrameStore, number[]&gt; Returns Map&lt;FrameStore, number[]&gt; staticInstance get Instance(): CatalogStore Returns CatalogStore Methods addCatalog addCatalog(fileId: number, size: number): void Parameters fileId: number size: number Returns void clearCatalogPlotsByComponentId clearCatalogPlotsByComponentId(componentId: string): void Parameters componentId: string Returns void clearCatalogPlotsByFileId clearCatalogPlotsByFileId(fileId: number): void Parameters fileId: number Returns void clearCatalogPlotsByWidgetId clearCatalogPlotsByWidgetId(widgetId: string): void Parameters widgetId: string Returns void clearImageCoordsData clearImageCoordsData(fileId: number): void Parameters fileId: number Returns void closeAssociatedCatalog closeAssociatedCatalog(imageFileId: number): void Parameters imageFileId: number Returns void convertToImageCoordinate convertToImageCoordinate(fileId: number, xData: number[], yData: number[], wcsInfo: FrameSet, xUnit: string, yUnit: string, catalogFrame: CatalogSystemType, subsetEndIndex: number, subsetDataSize: number): void Parameters fileId: number xData: number[] yData: number[] wcsInfo: FrameSet xUnit: string yUnit: string catalogFrame: CatalogSystemType subsetEndIndex: number subsetDataSize: number Returns void getAssociatedIdByWidgetId getAssociatedIdByWidgetId(catalogPlotWidgetId: string): { catalogFileId: number; catalogPlotComponentId: string } Parameters catalogPlotWidgetId: string Returns { catalogFileId: number; catalogPlotComponentId: string } catalogFileId: number catalogPlotComponentId: string getCatalogFileNames getCatalogFileNames(fileIds: number[]): Map&lt;number, string&gt; Parameters fileIds: number[] Returns Map&lt;number, string&gt; getCatalogWidgetStore getCatalogWidgetStore(fileId: number): CatalogWidgetStore Parameters fileId: number Returns CatalogWidgetStore getFrameIdByCatalogId getFrameIdByCatalogId(catalogId: number): number Parameters catalogId: number Returns number getFrameMinMaxPoints getFrameMinMaxPoints(frameId: number): { maxX: number; maxY: number; minX: number; minY: number } Parameters frameId: number Returns { maxX: number; maxY: number; minX: number; minY: number } maxX: number maxY: number minX: number minY: number getImageIdByCatalog getImageIdByCatalog(catalogFileId: number): any Parameters catalogFileId: number Returns any removeCatalog removeCatalog(fileId: number, catalogComponentId?: string): void Parameters fileId: number optionalcatalogComponentId: string Returns void resetActiveCatalogFile resetActiveCatalogFile(imageFileId: number): void Parameters imageFileId: number Returns void setCatalogPlots setCatalogPlots(componentId: string, fileId: number, widgetId: string): void Parameters componentId: string fileId: number widgetId: string Returns void updateCatalogProfiles updateCatalogProfiles(catalogFileId: number): void Parameters catalogFileId: number Returns void updateImageAssociatedCatalogId updateImageAssociatedCatalogId(activeFrameIndex: number, associatedCatalogFiles: number[]): void Parameters activeFrameIndex: number associatedCatalogFiles: number[] Returns void","keywords":""},{"title":"AppStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/AppStore","content":"AppStore Index Properties activeFrameactiveLayeractiveWorkspacealertStoreanimatorStoreapiServiceastReadybackendServicecartaComputeReadycatalogStorecontourDataSourcecursorFrozencursorMirrordialogStorefileBrowserStorefileLoadingfileSavingframeshelpStorehoveredFrameimageFittingStoreimageRatioisExportingImageisLoadingMultipleFileslayoutStoreloadingWorkspacelogStoremomentToMatchnewReleaseoverlayStorepreferenceStorepreviewFramesrasterScalingReferenceregionHistogramsregionStatsresumingSessionscriptingServiceshowNewReleasesnippetStorespatialProfilesspatialReferencespectralMatchingTypespectralProfilesspectralReferencesplashScreenVisiblesyncContourToFramesyncFrameToContoursystemThemetaskCurrentTimetaskProgresstaskStartTimetelemetryServicetileServicetoolbarExpandedusernamewidgetsStoreDEFAULT_STATS_TYPES Accessors activeFrameFileIdactiveFrameIndexappendFileDisabledcatalogNextFileIdcatalogNumcontourFramescurrentImagePagedarkThemeestimatedTaskRemainingTimeframeChannelsframeLockedToContourframeMapframeNamesframeNumframeOptionsframeStokesimagePanelModeimagesPerPagemodifierStringnumImageColumnsnumImagePagesnumImageRowsopenFileDisabledpixelRatioselectedRegionspatialAndSpectalMatchedFileIdsvectorOverlayFramesvisibleFramesInstance Methods addFrameaddPreviewFrameaddRegionsInBatchappendCatalogappendConcatFileappendFilecancelCubeHistogramRequestcancelRequestingMomentcancelRequestingPVclearRasterScalingReferenceclearSpatialReferenceclearSpectralReferencecloseCurrentFilecloseFilecloseOtherFilescloseWorkspacedecreaseImageRatiodelaydeleteRegiondeleteSelectedRegiondeleteWorkspaceendFileLoadingendFileSavingexportImageexportRegionsfetchParametergetAppContainergetFileListgetFramegetFrameIndexgetFrameNamegetImageDataUrlhandleCatalogFilterStreamhandleContourImageStreamhandleErrorStreamhandleFileProgressStreamhandleFittingProgressStreamhandleMomentProgressStreamhandlePvPreviewStreamhandlePvProgressStreamhandleRegionHistogramStreamhandleRegionStatsStreamhandleScriptingRequesthandleSpatialProfileStreamhandleSpectralProfileStreamhandleThemeChangehandleTileStreamhandleVectorTileStreamhideSplashScreenimportRegionloadConcatStokesloadDefaultFilesloadFileloadWorkspacenextFrameonReconnectAlertClosedopenConcatFileopenFileprevFramerecalculateRequirementsremoveAllFramesremoveCatalogremoveFrameremovePreviewFramereorderFramerequestCubeHistogramrequestFittingrequestMomentrequestPVrequestPreviewPVresetCursorRegionSpectralProfileProgressresetImageRatioresetRegionSpectralProfileProgressrestartTaskProgresssaveFilesaveWorkspacesendCatalogFiltersetActiveFramesetActiveFrameByIdsetActiveFrameByIndexsetAppContainersetAstReadysetAutoThemesetCanvasUpdatedsetChannelsByFramesetContourDataSourcesetCursorFrozensetDarkThemesetHoveredFramesetImageRatiosetImageViewDimensionssetIsCanvasUpdatedsetIsExportingImagesetLightThemesetLoadingMultipleFilessetMatchingEnabledsetRasterScalingMatchingEnabledsetRasterScalingReferencesetShowNewReleasesetSpatialMatchingEnabledsetSpatialReferencesetSpectralMatchingEnabledsetSpectralMatchingTypesetSpectralReferencesetThemesetToolbarExpandedsetUsernameshiftFrameshowSplashScreenstartFileLoadingstartFileSavingtoggleActiveLayertoggleCursorFrozentoggleCursorMirrortoggleFrameContourLocktoggleMomentToMatchtoggleRasterScalingMatchingtoggleSpatialMatchingtoggleSpectralMatchingtoggleToolbarExpandedupdateActiveLayerupdateCatalogProfileupdateChannelsupdateLayerPixelRatioupdateTaskProgresswaitForImageData Properties activeFrame activeFrame: FrameStore activeLayer activeLayer: ImageViewLayer activeWorkspace activeWorkspace: Workspace readonlyalertStore alertStore: AlertStore readonlyanimatorStore animatorStore: AnimatorStore readonlyapiService apiService: ApiService astReady astReady: boolean readonlybackendService backendService: BackendService cartaComputeReady cartaComputeReady: boolean readonlycatalogStore catalogStore: CatalogStore contourDataSource contourDataSource: FrameStore cursorFrozen cursorFrozen: boolean cursorMirror cursorMirror: boolean = false readonlydialogStore dialogStore: DialogStore readonlyfileBrowserStore fileBrowserStore: FileBrowserStore fileLoading fileLoading: boolean fileSaving fileSaving: boolean frames frames: FrameStore[] readonlyhelpStore helpStore: HelpStore hoveredFrame hoveredFrame: FrameStore readonlyimageFittingStore imageFittingStore: ImageFittingStore imageRatio imageRatio: number isExportingImage isExportingImage: boolean isLoadingMultipleFiles isLoadingMultipleFiles: boolean = false readonlylayoutStore layoutStore: LayoutStore loadingWorkspace loadingWorkspace: boolean readonlylogStore logStore: LogStore momentToMatch momentToMatch: boolean newRelease newRelease: string = &quot;&quot; readonlyoverlayStore overlayStore: OverlayStore readonlypreferenceStore preferenceStore: PreferenceStore previewFrames previewFrames: ObservableMap&lt;number, FrameStore&gt; rasterScalingReference rasterScalingReference: FrameStore regionHistograms regionHistograms: Map&lt;number, ObservableMap&lt;number, ObservableMap&lt;number, IRegionHistogramData&gt;&gt;&gt; regionStats regionStats: Map&lt;number, ObservableMap&lt;number, ObservableMap&lt;number, RegionStatsData&gt;&gt;&gt; resumingSession resumingSession: boolean readonlyscriptingService scriptingService: ScriptingService showNewRelease showNewRelease: boolean = false readonlysnippetStore snippetStore: SnippetStore spatialProfiles spatialProfiles: Map&lt;string, SpatialProfileStore&gt; spatialReference spatialReference: FrameStore spectralMatchingType spectralMatchingType: SpectralType spectralProfiles spectralProfiles: Map&lt;number, ObservableMap&lt;number, SpectralProfileStore&gt;&gt; spectralReference spectralReference: FrameStore splashScreenVisible splashScreenVisible: boolean = true syncContourToFrame syncContourToFrame: boolean syncFrameToContour syncFrameToContour: boolean systemTheme systemTheme: string taskCurrentTime taskCurrentTime: number taskProgress taskProgress: number taskStartTime taskStartTime: number readonlytelemetryService telemetryService: TelemetryService readonlytileService tileService: TileService toolbarExpanded toolbarExpanded: boolean username username: string = &quot;&quot; readonlywidgetsStore widgetsStore: WidgetsStore publicstaticreadonlyDEFAULT_STATS_TYPES DEFAULT_STATS_TYPES: any[] = ... Accessors activeFrameFileId get activeFrameFileId(): number Returns number activeFrameIndex get activeFrameIndex(): number Returns number appendFileDisabled get appendFileDisabled(): boolean Returns boolean catalogNextFileId get catalogNextFileId(): number Returns number catalogNum get catalogNum(): number Returns number contourFrames get contourFrames(): Map&lt;FrameStore, FrameStore[]&gt; Returns Map&lt;FrameStore, FrameStore[]&gt; currentImagePage get currentImagePage(): number Returns number darkTheme get darkTheme(): boolean Returns boolean estimatedTaskRemainingTime get estimatedTaskRemainingTime(): number Returns number frameChannels get frameChannels(): number[] Returns number[] frameLockedToContour get frameLockedToContour(): boolean Returns boolean frameMap get frameMap(): Map&lt;number, FrameStore&gt; Returns Map&lt;number, FrameStore&gt; frameNames get frameNames(): IOptionProps[] Returns IOptionProps[] frameNum get frameNum(): number Returns number frameOptions get frameOptions(): FrameOption[] Returns FrameOption[] frameStokes get frameStokes(): number[] Returns number[] imagePanelMode get imagePanelMode(): ImagePanelMode Returns ImagePanelMode imagesPerPage get imagesPerPage(): number Returns number modifierString get modifierString(): ctrl + | cmd + | alt + Returns ctrl + | cmd + | alt + numImageColumns get numImageColumns(): number Returns number numImagePages get numImagePages(): number Returns number numImageRows get numImageRows(): number Returns number openFileDisabled get openFileDisabled(): boolean Returns boolean pixelRatio get pixelRatio(): number Returns number selectedRegion get selectedRegion(): RegionStore Returns RegionStore spatialAndSpectalMatchedFileIds get spatialAndSpectalMatchedFileIds(): number[] Returns number[] vectorOverlayFrames get vectorOverlayFrames(): Map&lt;FrameStore, FrameStore[]&gt; Returns Map&lt;FrameStore, FrameStore[]&gt; visibleFrames get visibleFrames(): FrameStore[] Returns FrameStore[] staticInstance get Instance(): AppStore Returns AppStore Methods addFrame addFrame(ack: IOpenFileAck, directory: string, lelExpr: boolean, hdu: string, generated?: boolean, setAsActive?: boolean, updateStartingDirectory?: boolean): boolean Adds a frame to the frame array based on the provided parameters. Parameters ack: IOpenFileAck The ack message received after opening a file. directory: string The path to the parent directory of the file. lelExpr: boolean Whether the file is opened with an image arithmetic (CASA lattice expression) string. hdu: string The Header Data Unit (HDU) identifier of the file. generated: boolean = false Whether the frame is a generated in-memory image. Used for the telemetry message. setAsActive: boolean = true Whether the frame should be set as the active frame. updateStartingDirectory: boolean = true Whether to update the starting directory in the file browser. Required for carta-python. Returns boolean Whether the frame was successfully added. addPreviewFrame addPreviewFrame(ack: any, directory: string, hdu: string): FrameStore Parameters ack: any directory: string hdu: string Returns FrameStore addRegionsInBatch addRegionsInBatch(frame: FrameStore, regions: [string, IRegionInfo][], regionStyleMap: Map&lt;string, IRegionStyle&gt;, startIndex: number, count: number): void Parameters frame: FrameStore regions: [string, IRegionInfo][] regionStyleMap: Map&lt;string, IRegionStyle&gt; startIndex: number count: number Returns void appendCatalog appendCatalog(directory: string, file: string, previewDataSize: number, type: CatalogFileType): Generator&lt;Promise&lt;IOpenCatalogFileAck&gt;, number, unknown&gt; Parameters directory: string file: string previewDataSize: number type: CatalogFileType Returns Generator&lt;Promise&lt;IOpenCatalogFileAck&gt;, number, unknown&gt; appendConcatFile appendConcatFile(stokesFiles: IStokesFile[], directory: string, hdu: string): Promise&lt;any&gt; Parameters stokesFiles: IStokesFile[] directory: string hdu: string Returns Promise&lt;any&gt; appendFile appendFile(path: string, filename?: string, hdu?: string, imageArithmetic?: boolean, setAsActive?: boolean, updateStartingDirectory?: boolean): Generator&lt;Generator&lt;Promise&lt;IOpenFileAck&gt;, FrameStore, unknown&gt;, any, unknown&gt; Appends a file at the given path to the list of existing open files. @example // Append a file with the given path and filename const file = await appendFile(&quot;/path/to/directory&quot;, &quot;example.fits&quot;); Parameters path: string The path to the parent directory of the file to open, or of the file itself. optionalfilename: string The filename of the file to open. optionalhdu: string The Header Data Unit (HDU) to open. If left blank, the first image HDU will be opened. imageArithmetic: boolean = false Whether to treat the filename as an image arithmetic (CASA lattice expression) string. setAsActive: boolean = true Whether to set the appended file as the active frame. updateStartingDirectory: boolean = true Whether to update the starting directory in the file browser. Required for carta-python. Returns Generator&lt;Generator&lt;Promise&lt;IOpenFileAck&gt;, FrameStore, unknown&gt;, any, unknown&gt; A promise that resolves to the FrameStore of the opened file. cancelCubeHistogramRequest cancelCubeHistogramRequest(fileId?: number): void Parameters fileId: number = -1 Returns void cancelRequestingMoment cancelRequestingMoment(fileId?: number): void Parameters fileId: number = -1 Returns void cancelRequestingPV cancelRequestingPV(fileId?: number, previewId?: number): void Parameters fileId: number = -1 optionalpreviewId: number Returns void clearRasterScalingReference clearRasterScalingReference(): void Returns void clearSpatialReference clearSpatialReference(): void Returns void clearSpectralReference clearSpectralReference(): void Returns void closeCurrentFile closeCurrentFile(confirmClose?: boolean): void Closes the currently active image. Parameters confirmClose: boolean = false Flag indicating whether to display a confirmation dialog before closing. Returns void closeFile closeFile(frame: FrameStore, confirmClose?: boolean): Generator&lt;Promise&lt;boolean&gt;, void, unknown&gt; Parameters frame: FrameStore confirmClose: boolean = true Returns Generator&lt;Promise&lt;boolean&gt;, void, unknown&gt; closeOtherFiles closeOtherFiles(frame: FrameStore, confirmClose?: boolean): void Parameters frame: FrameStore confirmClose: boolean = true Returns void closeWorkspace closeWorkspace(): void Returns void decreaseImageRatio decreaseImageRatio(): void Returns void delay delay(time: number): Promise&lt;unknown&gt; Parameters time: number Returns Promise&lt;unknown&gt; deleteRegion deleteRegion(region: RegionStore): void Parameters region: RegionStore Returns void deleteSelectedRegion deleteSelectedRegion(): void Returns void deleteWorkspace deleteWorkspace(name: string): Promise&lt;void&gt; Parameters name: string Returns Promise&lt;void&gt; endFileLoading endFileLoading(): void Returns void endFileSaving endFileSaving(): void Returns void exportImage exportImage(imageRatio: number): void Parameters imageRatio: number Returns void exportRegions exportRegions(directory: string, file: string, coordType: CoordinateType, fileType: any, exportRegions: number[], targetFrame?: FrameStore): Generator&lt;Promise&lt;IExportRegionAck&gt;, void, unknown&gt; Exports specified regions and saves a region file to the provided directory. Parameters directory: string The directory where the region file will be saved. file: string The filename of the region file. coordType: CoordinateType The coordinate system used in the exported region file. fileType: any The type of the exported region file. exportRegions: number[] The indices of the regions to be exported. optionaltargetFrame: FrameStore The target frame containing the regions. If not provided, the active frame is used. Returns Generator&lt;Promise&lt;IExportRegionAck&gt;, void, unknown&gt; fetchParameter fetchParameter(val: any): any Parameters val: any Returns any publicgetAppContainer getAppContainer(): HTMLElement Returns HTMLElement getFileList getFileList(directory: string): Promise&lt;IFileListResponse&gt; Parameters directory: string Returns Promise&lt;IFileListResponse&gt; getFrame getFrame(fileId: number): FrameStore Parameters fileId: number Returns FrameStore getFrameIndex getFrameIndex(fileId: number): number Parameters fileId: number Returns number getFrameName getFrameName(fileId: number): string Parameters fileId: number Returns string getImageDataUrl getImageDataUrl(backgroundColor: string): string Parameters backgroundColor: string Returns string handleCatalogFilterStream handleCatalogFilterStream(catalogFilter: CatalogFilterResponse): void Parameters catalogFilter: CatalogFilterResponse Returns void handleContourImageStream handleContourImageStream(contourImageData: ContourImageData): void Parameters contourImageData: ContourImageData Returns void handleErrorStream handleErrorStream(errorData: ErrorData): void Parameters errorData: ErrorData Returns void handleFileProgressStream handleFileProgressStream(fileProgress: ListProgress): void Parameters fileProgress: ListProgress Returns void handleFittingProgressStream handleFittingProgressStream(fittingProgress: FittingProgress): void Parameters fittingProgress: FittingProgress Returns void handleMomentProgressStream handleMomentProgressStream(momentProgress: MomentProgress): void Parameters momentProgress: MomentProgress Returns void handlePvPreviewStream handlePvPreviewStream(pvPreviewData: PvPreviewData): void Parameters pvPreviewData: PvPreviewData Returns void handlePvProgressStream handlePvProgressStream(pvProgress: PvProgress): void Parameters pvProgress: PvProgress Returns void handleRegionHistogramStream handleRegionHistogramStream(regionHistogramData: RegionHistogramData): void Parameters regionHistogramData: RegionHistogramData Returns void handleRegionStatsStream handleRegionStatsStream(regionStatsData: RegionStatsData): void Parameters regionStatsData: RegionStatsData Returns void handleScriptingRequest handleScriptingRequest(request: IScriptingRequest): void Parameters request: IScriptingRequest Returns void handleSpatialProfileStream handleSpatialProfileStream(spatialProfileData: ISpatialProfileData): void Parameters spatialProfileData: ISpatialProfileData Returns void handleSpectralProfileStream handleSpectralProfileStream(spectralProfileData: SpectralProfileData): void Parameters spectralProfileData: SpectralProfileData Returns void handleThemeChange handleThemeChange(darkMode: boolean): void Parameters darkMode: boolean Returns void handleTileStream handleTileStream(tileStreamDetails: TileStreamDetails): void Parameters tileStreamDetails: TileStreamDetails Returns void handleVectorTileStream handleVectorTileStream(vectorTileData: IVectorOverlayTileData): void Parameters vectorTileData: IVectorOverlayTileData Returns void hideSplashScreen hideSplashScreen(): void Returns void importRegion importRegion(directory: string, file: string, type: any, targetFrame?: FrameStore): Generator&lt;Promise&lt;IImportRegionAck&gt;, void, unknown&gt; Imports a region file to the active frame or a specified frame. Supported file types are CRTF and DS9. Parameters directory: string The directory containing the region file. file: string The filename of the region file. type: any The type of the region file (CRTF or DS9_REG). optionaltargetFrame: FrameStore The frame to which the regions should be imported. If not provided, the active frame is used. If the frame is spatially matched, the reference frame is used. Returns Generator&lt;Promise&lt;IImportRegionAck&gt;, void, unknown&gt; loadConcatStokes loadConcatStokes(stokesFiles: IStokesFile[], directory: string, hdu: string): Promise&lt;any&gt; Parameters stokesFiles: IStokesFile[] directory: string hdu: string Returns Promise&lt;any&gt; loadDefaultFiles loadDefaultFiles(): Generator&lt;Generator&lt;Promise&lt;IOpenFileAck&gt;, FrameStore, unknown&gt; | Generator&lt;Generator&lt;Generator&lt;Promise&lt;IOpenFileAck&gt;, FrameStore, unknown&gt;, any, unknown&gt; | Promise&lt;Workspace&gt;, boolean, Workspace &amp; FrameStore&gt;, void, unknown&gt; Returns Generator&lt;Generator&lt;Promise&lt;IOpenFileAck&gt;, FrameStore, unknown&gt; | Generator&lt;Generator&lt;Generator&lt;Promise&lt;IOpenFileAck&gt;, FrameStore, unknown&gt;, any, unknown&gt; | Promise&lt;Workspace&gt;, boolean, Workspace &amp; FrameStore&gt;, void, unknown&gt; loadFile loadFile(path: string, filename: string, hdu: string, imageArithmetic: boolean, setAsActive?: boolean, updateStartingDirectory?: boolean): Generator&lt;Promise&lt;IOpenFileAck&gt;, FrameStore, unknown&gt; Loads a file at the given path and adds it as a frame to the application. @throws If there is an error loading the file. Parameters path: string The path to the parent directory of the file to load, or of the file itself. filename: string The filename of the file to load. hdu: string The Header Data Unit (HDU) to load. If left blank, the first image HDU will be loaded. imageArithmetic: boolean Whether to treat the file as an image arithmetic (CASA lattice expression) string. setAsActive: boolean = true Whether the loaded frame should be set as the active frame. updateStartingDirectory: boolean = true Whether to update the starting directory in the file browser. Required for carta-python. Returns Generator&lt;Promise&lt;IOpenFileAck&gt;, FrameStore, unknown&gt; The added frame. publicloadWorkspace loadWorkspace(name: string, isKey?: boolean): Generator&lt;Generator&lt;Generator&lt;Promise&lt;IOpenFileAck&gt;, FrameStore, unknown&gt;, any, unknown&gt; | Promise&lt;Workspace&gt;, boolean, Workspace &amp; FrameStore&gt; Parameters name: string isKey: boolean = false Returns Generator&lt;Generator&lt;Generator&lt;Promise&lt;IOpenFileAck&gt;, FrameStore, unknown&gt;, any, unknown&gt; | Promise&lt;Workspace&gt;, boolean, Workspace &amp; FrameStore&gt; nextFrame nextFrame(): void Returns void onReconnectAlertClosed onReconnectAlertClosed(): Promise&lt;void&gt; Returns Promise&lt;void&gt; openConcatFile openConcatFile(stokesFiles: IStokesFile[], directory: string, hdu: string): Promise&lt;any&gt; Parameters stokesFiles: IStokesFile[] directory: string hdu: string Returns Promise&lt;any&gt; openFile openFile(path: string, filename?: string, hdu?: string, imageArithmetic?: boolean, updateStartingDirectory?: boolean): Generator&lt;Generator&lt;Promise&lt;IOpenFileAck&gt;, FrameStore, unknown&gt;, any, unknown&gt; Closes all existing files and opens a file at the given path. @example // Open a file with the given path and filename const openedFile = await openFile(&quot;/path/to/directory&quot;, &quot;example.fits&quot;); Parameters path: string The path to the parent directory of the file to open, or of the file itself. optionalfilename: string The filename of the file to open. optionalhdu: string The Header Data Unit (HDU) to open. If left blank, the first image HDU will be opened. optionalimageArithmetic: boolean Whether to treat the filename as an image arithmetic (CASA lattice expression) string. updateStartingDirectory: boolean = true Whether to update the starting directory in the file browser. Required for carta-python. Returns Generator&lt;Generator&lt;Promise&lt;IOpenFileAck&gt;, FrameStore, unknown&gt;, any, unknown&gt; A promise that resolves to the FrameStore of the opened file. prevFrame prevFrame(): void Returns void recalculateRequirements recalculateRequirements(): void Returns void removeAllFrames removeAllFrames(): void Returns void removeCatalog removeCatalog(fileId: number, catalogWidgetId: string, catalogComponentId?: string): void Parameters fileId: number catalogWidgetId: string optionalcatalogComponentId: string Returns void removeFrame removeFrame(frame: FrameStore): void Parameters frame: FrameStore Returns void removePreviewFrame removePreviewFrame(previewId: number): void Parameters previewId: number Returns void reorderFrame reorderFrame(oldIndex: number, newIndex: number, length: number): void Parameters oldIndex: number newIndex: number length: number Returns void requestCubeHistogram requestCubeHistogram(fileId?: number): void Parameters fileId: number = -1 Returns void requestFitting requestFitting(message: IFittingRequest): Generator&lt;Promise&lt;IFittingResponse&gt;, void, unknown&gt; Parameters message: IFittingRequest Returns Generator&lt;Promise&lt;IFittingResponse&gt;, void, unknown&gt; requestMoment requestMoment(message: IMomentRequest, frame: FrameStore): Generator&lt;Promise&lt;IMomentResponse&gt;, void, unknown&gt; Parameters message: IMomentRequest frame: FrameStore Returns Generator&lt;Promise&lt;IMomentResponse&gt;, void, unknown&gt; requestPV requestPV(message: IPvRequest, frame: FrameStore, keepExisting: boolean): Generator&lt;Promise&lt;IPvResponse&gt;, void, unknown&gt; Parameters message: IPvRequest frame: FrameStore keepExisting: boolean Returns Generator&lt;Promise&lt;IPvResponse&gt;, void, unknown&gt; requestPreviewPV requestPreviewPV(message: IPvRequest, frame: FrameStore, id: string): Generator&lt;Promise&lt;IPvResponse&gt;, void, unknown&gt; Parameters message: IPvRequest frame: FrameStore id: string Returns Generator&lt;Promise&lt;IPvResponse&gt;, void, unknown&gt; publicresetCursorRegionSpectralProfileProgress resetCursorRegionSpectralProfileProgress(fileId: number): void Parameters fileId: number Returns void resetImageRatio resetImageRatio(): void Returns void publicresetRegionSpectralProfileProgress resetRegionSpectralProfileProgress(regionId: number): void Parameters regionId: number Returns void restartTaskProgress restartTaskProgress(): void Returns void saveFile saveFile(directory: string, filename: string, fileType: FileType, regionId?: number, channels?: number[], stokes?: number[], shouldDropDegenerateAxes?: boolean, restFreq?: number): Generator&lt;Promise&lt;ISaveFileAck&gt;, any, unknown&gt; Parameters directory: string filename: string fileType: FileType optionalregionId: number optionalchannels: number[] optionalstokes: number[] optionalshouldDropDegenerateAxes: boolean optionalrestFreq: number Returns Generator&lt;Promise&lt;ISaveFileAck&gt;, any, unknown&gt; publicsaveWorkspace saveWorkspace(name: string): Generator&lt;Promise&lt;Workspace&gt; | Promise&lt;string | false&gt;, boolean, unknown&gt; Parameters name: string Returns Generator&lt;Promise&lt;Workspace&gt; | Promise&lt;string | false&gt;, boolean, unknown&gt; sendCatalogFilter sendCatalogFilter(catalogFilter: CatalogFilterRequest): void Parameters catalogFilter: CatalogFilterRequest Returns void setActiveFrame setActiveFrame(frame: FrameStore): void Parameters frame: FrameStore Returns void setActiveFrameById setActiveFrameById(fileId: number): void Parameters fileId: number Returns void setActiveFrameByIndex setActiveFrameByIndex(index: number): void Parameters index: number Returns void publicsetAppContainer setAppContainer(container: HTMLElement): void Parameters container: HTMLElement Returns void setAstReady setAstReady(val: boolean): void Parameters val: boolean Returns void setAutoTheme setAutoTheme(): void Returns void setCanvasUpdated setCanvasUpdated(): void Returns void setChannelsByFrame setChannelsByFrame(frame: FrameStore): void Parameters frame: FrameStore Returns void setContourDataSource setContourDataSource(frame: FrameStore): void Parameters frame: FrameStore Returns void setCursorFrozen setCursorFrozen(val: boolean): void Parameters val: boolean Returns void setDarkTheme setDarkTheme(): void Returns void setHoveredFrame setHoveredFrame(frame: FrameStore): void Parameters frame: FrameStore Returns void setImageRatio setImageRatio(val: number): void Parameters val: number Returns void setImageViewDimensions setImageViewDimensions(w: number, h: number): void Parameters w: number h: number Returns void setIsCanvasUpdated setIsCanvasUpdated(val: boolean): void Parameters val: boolean Returns void setIsExportingImage setIsExportingImage(val: boolean): void Parameters val: boolean Returns void setLightTheme setLightTheme(): void Returns void setLoadingMultipleFiles setLoadingMultipleFiles(isLoadingMultipleFiles: boolean): void Parameters isLoadingMultipleFiles: boolean Returns void setMatchingEnabled setMatchingEnabled(spatial: boolean, spectral: boolean): void Parameters spatial: boolean spectral: boolean Returns void setRasterScalingMatchingEnabled setRasterScalingMatchingEnabled(frame: FrameStore, val: boolean): void Parameters frame: FrameStore val: boolean Returns void setRasterScalingReference setRasterScalingReference(frame: FrameStore): void Parameters frame: FrameStore Returns void setShowNewRelease setShowNewRelease(val: boolean): void Parameters val: boolean Returns void setSpatialMatchingEnabled setSpatialMatchingEnabled(frame: FrameStore, val: boolean): void Parameters frame: FrameStore val: boolean Returns void setSpatialReference setSpatialReference(frame: FrameStore): void Parameters frame: FrameStore Returns void setSpectralMatchingEnabled setSpectralMatchingEnabled(frame: FrameStore, val: boolean): void Parameters frame: FrameStore val: boolean Returns void setSpectralMatchingType setSpectralMatchingType(spectralMatchingType: SpectralType): void Parameters spectralMatchingType: SpectralType Returns void setSpectralReference setSpectralReference(frame: FrameStore): void Parameters frame: FrameStore Returns void setTheme setTheme(theme: string): void Parameters theme: string Returns void setToolbarExpanded setToolbarExpanded(val: boolean): void Parameters val: boolean Returns void setUsername setUsername(username: string): void Parameters username: string Returns void shiftFrame shiftFrame(delta: number): void Parameters delta: number Returns void showSplashScreen showSplashScreen(): void Returns void startFileLoading startFileLoading(): void Returns void startFileSaving startFileSaving(): void Returns void toggleActiveLayer toggleActiveLayer(): void Returns void toggleCursorFrozen toggleCursorFrozen(): void Returns void toggleCursorMirror toggleCursorMirror(): void Returns void toggleFrameContourLock toggleFrameContourLock(): void Returns void toggleMomentToMatch toggleMomentToMatch(): void Returns void toggleRasterScalingMatching toggleRasterScalingMatching(frame: FrameStore): void Parameters frame: FrameStore Returns void toggleSpatialMatching toggleSpatialMatching(frame: FrameStore): void Parameters frame: FrameStore Returns void toggleSpectralMatching toggleSpectralMatching(frame: FrameStore): void Parameters frame: FrameStore Returns void toggleToolbarExpanded toggleToolbarExpanded(): void Returns void updateActiveLayer updateActiveLayer(layer: ImageViewLayer): void Parameters layer: ImageViewLayer Returns void updateCatalogProfile updateCatalogProfile(fileId: number, frame: FrameStore): string Parameters fileId: number frame: FrameStore Returns string updateChannels updateChannels(updates: ChannelUpdate[]): void Parameters updates: ChannelUpdate[] Returns void updateLayerPixelRatio updateLayerPixelRatio(layerRef: any): void Parameters layerRef: any Returns void updateTaskProgress updateTaskProgress(progress: number): void Parameters progress: number Returns void waitForImageData waitForImageData(): Promise&lt;void&gt; Returns Promise&lt;void&gt;","keywords":""},{"title":"ColorbarStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/ColorbarStore","content":"ColorbarStore Index Constructors constructor Properties PRECISION_MAX Accessors positionsroundedNumberstexts Constructors constructor new ColorbarStore(frame: FrameStore): ColorbarStore Parameters frame: FrameStore Returns ColorbarStore Properties staticreadonlyPRECISION_MAX PRECISION_MAX: 15 = 15 Accessors positions get positions(): number[] Returns number[] roundedNumbers get roundedNumbers(): { numbers: number[]; precision: number } Returns { numbers: number[]; precision: number } numbers: number[] precision: number texts get texts(): string[] Returns string[]","keywords":""},{"title":"CatalogWidgetStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/CatalogWidgetStore","content":"CatalogWidgetStore Index Constructors constructor Properties angleMaxangleMincatalogColorcatalogFileIdcatalogPlotTypecatalogShapecatalogSizecatalogTableAutoScrollcolorColumnMaxcolorColumnMincolorMapcolorMapColumncolorScalingTypedataTableColumnWidtsheaderTableColumnWidtshighlightColorinvertedColorMaporientationMapColumnorientationMaxorientationMinorientationScalingTypesettingsTabIdshowSelectedDatasizeAreasizeAxisTabIdsizeColumnMaxsizeColumnMaxLockedsizeColumnMinsizeColumnMinLockedsizeMapColumnsizeMaxsizeMinsizeMinorAreasizeMinorColumnMaxsizeMinorColumnMaxLockedsizeMinorColumnMinsizeMinorColumnMinLockedsizeMinorMapColumnsizeMinorScalingTypesizeScalingTypetableSeparatorPositionthicknessxAxisyAxisMaxAngleMaxAreaSizeMaxOverlaySizeMaxTableSeparatorPositionMaxThicknessMinAngleMinOverlaySizeMinTableSeparatorPositionMinThicknessSizeMapMin Accessors colorMapDatadisableColorMapdisableOrientationMapdisableSizeMapdisableSizeMinorMapenableSizeMinorTabmaxPointSizebyTypeminorPointSizebyTypeorientationMapDatapointSizebyTypeshapeSettingssizeMajorsizeMapDatasizeMinorMapData Methods colorArrayinitorientationArrayresetColorColumnValueresetMapsresetOrientationValueresetSizeColumnValueresetSizeMinorColumnValuesetAngleMaxsetAngleMinsetCatalogColorsetCatalogPlotTypesetCatalogShapesetCatalogSizesetCatalogTableAutoScrollsetColorColumnMaxsetColorColumnMinsetColorMapsetColorMapColumnsetColorMapDirectionsetColorScalingTypesetDataTableColumnWidtssetHeaderTableColumnWidtssetHighlightColorsetOrientationMapColumnsetOrientationMaxsetOrientationMinsetOrientationScalingTypesetSettingsTabIdsetShowSelectedDatasetSizeAreasetSizeAxisTabsetSizeColumnMaxsetSizeColumnMinsetSizeMapsetSizeMaxsetSizeMinsetSizeMinorAreasetSizeMinorColumnMaxsetSizeMinorColumnMinsetSizeMinorMapsetSizeMinorScalingTypesetSizeScalingTypesetTableSeparatorPositionsetThicknesssetxAxissetyAxissizeArraysizeMinorArraytoConfigtoggleSizeColumnMaxLocktoggleSizeColumnMinLocktoggleSizeMinorColumnMaxLocktoggleSizeMinorColumnMinLock Constructors constructor new CatalogWidgetStore(catalogFileId: number): CatalogWidgetStore Parameters catalogFileId: number Returns CatalogWidgetStore Properties angleMax angleMax: number angleMin angleMin: number catalogColor catalogColor: string catalogFileId catalogFileId: number catalogPlotType catalogPlotType: CatalogPlotType catalogShape catalogShape: CatalogOverlayShape catalogSize catalogSize: number catalogTableAutoScroll catalogTableAutoScroll: boolean colorColumnMax colorColumnMax: { clipd: number; default: number } Type declaration clipd: number default: number colorColumnMin colorColumnMin: { clipd: number; default: number } Type declaration clipd: number default: number colorMap colorMap: string colorMapColumn colorMapColumn: string colorScalingType colorScalingType: FrameScaling dataTableColumnWidts dataTableColumnWidts: number[] headerTableColumnWidts headerTableColumnWidts: number[] highlightColor highlightColor: string invertedColorMap invertedColorMap: boolean orientationMapColumn orientationMapColumn: string orientationMax orientationMax: { clipd: number; default: number } Type declaration clipd: number default: number orientationMin orientationMin: { clipd: number; default: number } Type declaration clipd: number default: number orientationScalingType orientationScalingType: FrameScaling settingsTabId settingsTabId: CatalogSettingsTabs showSelectedData showSelectedData: boolean sizeArea sizeArea: boolean sizeAxisTabId sizeAxisTabId: SIZE_MAJOR | SIZE_MINOR sizeColumnMax sizeColumnMax: { clipd: number; default: number } Type declaration clipd: number default: number sizeColumnMaxLocked sizeColumnMaxLocked: boolean sizeColumnMin sizeColumnMin: { clipd: number; default: number } Type declaration clipd: number default: number sizeColumnMinLocked sizeColumnMinLocked: boolean sizeMapColumn sizeMapColumn: string sizeMax sizeMax: { area: number; diameter: number } Type declaration area: number diameter: number sizeMin sizeMin: { area: number; diameter: number } Type declaration area: number diameter: number sizeMinorArea sizeMinorArea: boolean sizeMinorColumnMax sizeMinorColumnMax: { clipd: number; default: number } Type declaration clipd: number default: number sizeMinorColumnMaxLocked sizeMinorColumnMaxLocked: boolean sizeMinorColumnMin sizeMinorColumnMin: { clipd: number; default: number } Type declaration clipd: number default: number sizeMinorColumnMinLocked sizeMinorColumnMinLocked: boolean sizeMinorMapColumn sizeMinorMapColumn: string sizeMinorScalingType sizeMinorScalingType: FrameScaling sizeScalingType sizeScalingType: FrameScaling tableSeparatorPosition tableSeparatorPosition: string thickness thickness: number xAxis xAxis: string yAxis yAxis: string publicstaticreadonlyMaxAngle MaxAngle: 720 = 720 publicstaticreadonlyMaxAreaSize MaxAreaSize: 4000 = 4000 publicstaticreadonlyMaxOverlaySize MaxOverlaySize: 50 = 50 publicstaticreadonlyMaxTableSeparatorPosition MaxTableSeparatorPosition: 95 = 95 publicstaticreadonlyMaxThickness MaxThickness: 10 = 10 publicstaticreadonlyMinAngle MinAngle: 0 = 0 publicstaticreadonlyMinOverlaySize MinOverlaySize: 1 = 1 publicstaticreadonlyMinTableSeparatorPosition MinTableSeparatorPosition: 5 = 5 publicstaticreadonlyMinThickness MinThickness: 1 = 1.0 publicstaticreadonlySizeMapMin SizeMapMin: 0 = 0 Accessors colorMapData get colorMapData(): Float32Array Returns Float32Array disableColorMap get disableColorMap(): boolean Returns boolean disableOrientationMap get disableOrientationMap(): boolean Returns boolean disableSizeMap get disableSizeMap(): boolean Returns boolean disableSizeMinorMap get disableSizeMinorMap(): boolean Returns boolean enableSizeMinorTab get enableSizeMinorTab(): boolean Returns boolean maxPointSizebyType get maxPointSizebyType(): number Returns number minorPointSizebyType get minorPointSizebyType(): { max: number; min: number } Returns { max: number; min: number } max: number min: number orientationMapData get orientationMapData(): Float32Array Returns Float32Array pointSizebyType get pointSizebyType(): { max: number; min: number } Returns { max: number; min: number } max: number min: number shapeSettings get shapeSettings(): { areaBase: number; diameterBase: number; featherWidth: number; thicknessBase: number } Returns { areaBase: number; diameterBase: number; featherWidth: number; thicknessBase: number } areaBase: number diameterBase: number featherWidth: number thicknessBase: number sizeMajor get sizeMajor(): boolean Returns boolean sizeMapData get sizeMapData(): Float32Array Returns Float32Array sizeMinorMapData get sizeMinorMapData(): Float32Array Returns Float32Array Methods colorArray colorArray(): Float32Array Returns Float32Array publicinit init(widgetSettings: any): void Parameters widgetSettings: any Returns void orientationArray orientationArray(): Float32Array Returns Float32Array resetColorColumnValue resetColorColumnValue(type: min | max): void Parameters type: min | max Returns void resetMaps resetMaps(): void Returns void resetOrientationValue resetOrientationValue(type: min | max): void Parameters type: min | max Returns void resetSizeColumnValue resetSizeColumnValue(type: min | max): void Parameters type: min | max Returns void resetSizeMinorColumnValue resetSizeMinorColumnValue(type: min | max): void Parameters type: min | max Returns void setAngleMax setAngleMax(max: number): void Parameters max: number Returns void setAngleMin setAngleMin(min: number): void Parameters min: number Returns void setCatalogColor setCatalogColor(color: string): void Parameters color: string Returns void setCatalogPlotType setCatalogPlotType(type: CatalogPlotType): void Parameters type: CatalogPlotType Returns void setCatalogShape setCatalogShape(shape: CatalogOverlayShape): void Parameters shape: CatalogOverlayShape Returns void setCatalogSize setCatalogSize(size: number): void Parameters size: number Returns void setCatalogTableAutoScroll setCatalogTableAutoScroll(val: boolean): void Parameters val: boolean Returns void setColorColumnMax setColorColumnMax(val: number, type: default | clipd): void Parameters val: number type: default | clipd Returns void setColorColumnMin setColorColumnMin(val: number, type: default | clipd): void Parameters val: number type: default | clipd Returns void setColorMap setColorMap(colorMap: string): void Parameters colorMap: string Returns void setColorMapColumn setColorMapColumn(coloum: string): void Parameters coloum: string Returns void setColorMapDirection setColorMapDirection(val: boolean): void Parameters val: boolean Returns void setColorScalingType setColorScalingType(type: FrameScaling): void Parameters type: FrameScaling Returns void setDataTableColumnWidts setDataTableColumnWidts(vals: number[]): void Parameters vals: number[] Returns void setHeaderTableColumnWidts setHeaderTableColumnWidts(vals: number[]): void Parameters vals: number[] Returns void setHighlightColor setHighlightColor(color: string): void Parameters color: string Returns void setOrientationMapColumn setOrientationMapColumn(coloum: string): void Parameters coloum: string Returns void setOrientationMax setOrientationMax(val: number, type: default | clipd): void Parameters val: number type: default | clipd Returns void setOrientationMin setOrientationMin(val: number, type: default | clipd): void Parameters val: number type: default | clipd Returns void setOrientationScalingType setOrientationScalingType(type: FrameScaling): void Parameters type: FrameScaling Returns void setSettingsTabId setSettingsTabId(tabId: CatalogSettingsTabs): void Parameters tabId: CatalogSettingsTabs Returns void setShowSelectedData setShowSelectedData(val: boolean): void Parameters val: boolean Returns void setSizeArea setSizeArea(val: boolean): void Parameters val: boolean Returns void setSizeAxisTab setSizeAxisTab(tab: SIZE_MAJOR | SIZE_MINOR): void Parameters tab: SIZE_MAJOR | SIZE_MINOR Returns void setSizeColumnMax setSizeColumnMax(val: number, type: default | clipd): void Parameters val: number type: default | clipd Returns void setSizeColumnMin setSizeColumnMin(val: number, type: default | clipd): void Parameters val: number type: default | clipd Returns void setSizeMap setSizeMap(coloum: string): void Parameters coloum: string Returns void setSizeMax setSizeMax(val: number): void Parameters val: number Returns void setSizeMin setSizeMin(val: number): void Parameters val: number Returns void setSizeMinorArea setSizeMinorArea(val: boolean): void Parameters val: boolean Returns void setSizeMinorColumnMax setSizeMinorColumnMax(val: number, type: default | clipd): void Parameters val: number type: default | clipd Returns void setSizeMinorColumnMin setSizeMinorColumnMin(val: number, type: default | clipd): void Parameters val: number type: default | clipd Returns void setSizeMinorMap setSizeMinorMap(coloum: string): void Parameters coloum: string Returns void setSizeMinorScalingType setSizeMinorScalingType(type: FrameScaling): void Parameters type: FrameScaling Returns void setSizeScalingType setSizeScalingType(type: FrameScaling): void Parameters type: FrameScaling Returns void setTableSeparatorPosition setTableSeparatorPosition(position: string): void Parameters position: string Returns void setThickness setThickness(val: number): void Parameters val: number Returns void setxAxis setxAxis(xColumnName: string): void Parameters xColumnName: string Returns void setyAxis setyAxis(yColumnName: string): void Parameters yColumnName: string Returns void sizeArray sizeArray(): Float32Array Returns Float32Array sizeMinorArray sizeMinorArray(): Float32Array Returns Float32Array publictoConfig toConfig(): { catalogColor: string; catalogFileId: number; catalogShape: CatalogOverlayShape; catalogSize: number; highlightColor: string; tableSeparatorPosition: string; thickness: number } Returns { catalogColor: string; catalogFileId: number; catalogShape: CatalogOverlayShape; catalogSize: number; highlightColor: string; tableSeparatorPosition: string; thickness: number } catalogColor: string catalogFileId: number catalogShape: CatalogOverlayShape catalogSize: number highlightColor: string tableSeparatorPosition: string thickness: number toggleSizeColumnMaxLock toggleSizeColumnMaxLock(): void Returns void toggleSizeColumnMinLock toggleSizeColumnMinLock(): void Returns void toggleSizeMinorColumnMaxLock toggleSizeMinorColumnMaxLock(): void Returns void toggleSizeMinorColumnMinLock toggleSizeMinorColumnMinLock(): void Returns void","keywords":""},{"title":"ContourConfigStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/ContourConfigStore","content":"ContourConfigStore Index Constructors constructor Properties colorcolormapcolormapBiascolormapContrastcolormapEnableddashModeenabledlevelssmoothingFactorsmoothingModethicknessvisible Methods setColorsetColormapsetColormapBiassetColormapContrastsetColormapEnabledsetContourConfigurationsetDashModesetEnabledsetThicknesssetVisibletoggleVisibilityupdateFromWorkspace Constructors constructor new ContourConfigStore(preferenceStore: PreferenceStore): ContourConfigStore Parameters preferenceStore: PreferenceStore Returns ContourConfigStore Properties color color: RGBColor colormap colormap: string colormapBias colormapBias: number colormapContrast colormapContrast: number colormapEnabled colormapEnabled: boolean dashMode dashMode: ContourDashMode enabled enabled: boolean levels levels: number[] smoothingFactor smoothingFactor: number smoothingMode smoothingMode: SmoothingMode thickness thickness: number visible visible: boolean Methods setColor setColor(color: ColorInput): void Parameters color: ColorInput Returns void setColormap setColormap(colormap: string): void Parameters colormap: string Returns void setColormapBias setColormapBias(val: number): void Parameters val: number Returns void setColormapContrast setColormapContrast(val: number): void Parameters val: number Returns void setColormapEnabled setColormapEnabled(val: boolean): void Parameters val: boolean Returns void setContourConfiguration setContourConfiguration(levels: number[], smoothingMode: SmoothingMode, smoothingFactor: number): void Parameters levels: number[] smoothingMode: SmoothingMode smoothingFactor: number Returns void setDashMode setDashMode(mode: ContourDashMode): void Parameters mode: ContourDashMode Returns void setEnabled setEnabled(val: boolean): void Parameters val: boolean Returns void setThickness setThickness(val: number): void Parameters val: number Returns void setVisible setVisible(visible: boolean): void Parameters visible: boolean Returns void toggleVisibility toggleVisibility(): void Returns void updateFromWorkspace updateFromWorkspace(config: WorkspaceContourConfig): void Parameters config: WorkspaceContourConfig Returns void","keywords":""},{"title":"CompassAnnotationStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/CompassAnnotationStore","content":"CompassAnnotationStore Hierarchy RegionStore CompassAnnotationStore Index Constructors constructor Properties activeFramecolorcontrolPointscoordinatecreatingdashLengtheastArrowheadeastLabeleastTextOffseteditingfileIdfontfontSizefontStyleisSimplePolygonlengthlineRegionSampleWidthlineWidthlockedmodifiedTimestampnamenorthArrowheadnorthLabelnorthTextOffsetpointerLengthpointerWidthregionIdregionTyperotationAVAILABLE_ANNOTATION_TYPESAVAILABLE_REGION_TYPESMAX_DASH_LENGTHMAX_LINE_WIDTHMIN_LINE_WIDTHTARGET_VERTEX_COUNT Accessors boundingBoxboundingBoxAreacenterisAnnotationisClosedRegionisPreviewCutisTemporaryisValidnameStringregionPropertiessizewcsSize Methods beginCreatingbeginEditingendCreatingendEditingfocusCentergetAnnotationStylesgetAnnotationStylesForExportgetRegionApproximationinitializeStylessetCentersetColorsetControlPointsetControlPointssetCoordinatesetDashLengthsetEastArrowheadsetEastTextOffsetsetFontsetFontSizesetFontStylesetLabelsetLengthsetLineWidthsetLockedsetNamesetNorthArrowheadsetNorthTextOffsetsetPointerLengthsetPointerWidthsetRegionIdsetRotationsetSizetoggleLockGetRegionPropertiesIsRegionCustomIconIsRegionDashLengthValidIsRegionLineWidthValidIsRegionTypeValidRegionIconStringRegionTypeString Constructors constructor new CompassAnnotationStore(backendService: BackendService, fileId: number, activeFrame: FrameStore, controlPoints: Point2D[], regionType: RegionType, regionId?: number, rotation?: number, name?: string, color?: string, lineWidth?: number, dashLength?: number): CompassAnnotationStore Overrides RegionStore.constructor Parameters backendService: BackendService fileId: number activeFrame: FrameStore controlPoints: Point2D[] regionType: RegionType regionId: number = -1 rotation: number = 0 name: string = &quot;&quot; color: string = Colors.TURQUOISE5 lineWidth: number = 2 dashLength: number = 0 Returns CompassAnnotationStore Properties activeFrame activeFrame: FrameStore Inherited from RegionStore.activeFrame color color: string Inherited from RegionStore.color controlPoints controlPoints: Point2D[] Inherited from RegionStore.controlPoints coordinate coordinate: CoordinateMode Inherited from RegionStore.coordinate creating creating: boolean Inherited from RegionStore.creating dashLength dashLength: number Inherited from RegionStore.dashLength eastArrowhead eastArrowhead: boolean = true eastLabel eastLabel: string = &quot;E&quot; eastTextOffset eastTextOffset: Point2D = ... editing editing: boolean Inherited from RegionStore.editing readonlyfileId fileId: number Inherited from RegionStore.fileId font font: Font = Font.HELVETICA fontSize fontSize: number = 20 fontStyle fontStyle: FontStyle = FontStyle.NORMAL isSimplePolygon isSimplePolygon: boolean Inherited from RegionStore.isSimplePolygon length length: number = 100 lineRegionSampleWidth lineRegionSampleWidth: number = 3 Inherited from RegionStore.lineRegionSampleWidth lineWidth lineWidth: number Inherited from RegionStore.lineWidth locked locked: boolean = false Inherited from RegionStore.locked publicmodifiedTimestamp modifiedTimestamp: number Inherited from RegionStore.modifiedTimestamp name name: string Inherited from RegionStore.name northArrowhead northArrowhead: boolean = true northLabel northLabel: string = &quot;N&quot; northTextOffset northTextOffset: Point2D = ... pointerLength pointerLength: number = 10 pointerWidth pointerWidth: number = 10 regionId regionId: number Inherited from RegionStore.regionId regionType regionType: RegionType Inherited from RegionStore.regionType rotation rotation: number Inherited from RegionStore.rotation staticreadonlyAVAILABLE_ANNOTATION_TYPES AVAILABLE_ANNOTATION_TYPES: Map&lt;RegionType, string&gt; = ... Inherited from RegionStore.AVAILABLE_ANNOTATION_TYPES staticreadonlyAVAILABLE_REGION_TYPES AVAILABLE_REGION_TYPES: Map&lt;RegionType, string&gt; = ... Inherited from RegionStore.AVAILABLE_REGION_TYPES staticreadonlyMAX_DASH_LENGTH MAX_DASH_LENGTH: 50 = 50 Inherited from RegionStore.MAX_DASH_LENGTH staticreadonlyMAX_LINE_WIDTH MAX_LINE_WIDTH: 10 = 10 Inherited from RegionStore.MAX_LINE_WIDTH staticreadonlyMIN_LINE_WIDTH MIN_LINE_WIDTH: 0.5 = 0.5 Inherited from RegionStore.MIN_LINE_WIDTH staticreadonlyTARGET_VERTEX_COUNT TARGET_VERTEX_COUNT: 200 = 200 Inherited from RegionStore.TARGET_VERTEX_COUNT Accessors boundingBox get boundingBox(): Point2D Inherited from RegionStore.boundingBox Returns Point2D boundingBoxArea get boundingBoxArea(): number Inherited from RegionStore.boundingBoxArea Returns number center get center(): Point2D Inherited from RegionStore.center Returns Point2D isAnnotation get isAnnotation(): boolean Inherited from RegionStore.isAnnotation Returns boolean isClosedRegion get isClosedRegion(): boolean Inherited from RegionStore.isClosedRegion Returns boolean isPreviewCut get isPreviewCut(): boolean Inherited from RegionStore.isPreviewCut Returns boolean isTemporary get isTemporary(): boolean Inherited from RegionStore.isTemporary Returns boolean isValid get isValid(): boolean Inherited from RegionStore.isValid Returns boolean nameString get nameString(): string Inherited from RegionStore.nameString Returns string regionProperties get regionProperties(): string Inherited from RegionStore.regionProperties Returns string size get size(): Point2D Inherited from RegionStore.size Returns Point2D wcsSize get wcsSize(): Point2D Inherited from RegionStore.wcsSize Returns Point2D Methods beginCreating beginCreating(): void Inherited from RegionStore.beginCreating Returns void beginEditing beginEditing(): void Inherited from RegionStore.beginEditing Returns void endCreating endCreating(): Generator&lt;Promise&lt;ISetRegionAck&gt;, void, unknown&gt; Inherited from RegionStore.endCreating Returns Generator&lt;Promise&lt;ISetRegionAck&gt;, void, unknown&gt; endEditing endEditing(): void Inherited from RegionStore.endEditing Returns void focusCenter focusCenter(): void Inherited from RegionStore.focusCenter Returns void publicgetAnnotationStyles getAnnotationStyles(): { eastTextOffset: Point2D; font: Font; fontSize: number; fontStyle: FontStyle; isEastArrow: boolean; isNorthArrow: boolean; length: number; northTextOffset: Point2D; pointerLength: number; pointerWidth: number; textLabel0: string; textLabel1: string } Returns { eastTextOffset: Point2D; font: Font; fontSize: number; fontStyle: FontStyle; isEastArrow: boolean; isNorthArrow: boolean; length: number; northTextOffset: Point2D; pointerLength: number; pointerWidth: number; textLabel0: string; textLabel1: string } eastTextOffset: Point2D font: Font fontSize: number fontStyle: FontStyle isEastArrow: boolean isNorthArrow: boolean length: number northTextOffset: Point2D pointerLength: number pointerWidth: number textLabel0: string textLabel1: string publicgetAnnotationStylesForExport getAnnotationStylesForExport(): { coordinateSystem: string; font: Font; fontSize: number; fontStyle: FontStyle; isEastArrow: boolean; isNorthArrow: boolean; textLabel0: string; textLabel1: string } Returns { coordinateSystem: string; font: Font; fontSize: number; fontStyle: FontStyle; isEastArrow: boolean; isNorthArrow: boolean; textLabel0: string; textLabel1: string } coordinateSystem: string font: Font fontSize: number fontStyle: FontStyle isEastArrow: boolean isNorthArrow: boolean textLabel0: string textLabel1: string publicgetRegionApproximation getRegionApproximation(astTransform: FrameSet, spatiallyMatched?: boolean, spatialTransform?: Mapping): { eastApproximatePoints: number[]; northApproximatePoints: number[] } Overrides RegionStore.getRegionApproximation Parameters astTransform: FrameSet optionalspatiallyMatched: boolean optionalspatialTransform: Mapping Returns { eastApproximatePoints: number[]; northApproximatePoints: number[] } eastApproximatePoints: number[] northApproximatePoints: number[] publicinitializeStyles initializeStyles(annotationStyles: { eastTextOffset: Point2D; font: Font; fontSize: number; fontStyle: FontStyle; isEastArrow: boolean; isNorthArrow: boolean; length: number; northTextOffset: Point2D; pointerLength: number; pointerWidth: number; textLabel0: string; textLabel1: string }): void Parameters annotationStyles: { eastTextOffset: Point2D; font: Font; fontSize: number; fontStyle: FontStyle; isEastArrow: boolean; isNorthArrow: boolean; length: number; northTextOffset: Point2D; pointerLength: number; pointerWidth: number; textLabel0: string; textLabel1: string } Returns void setCenter setCenter(p: Point2D, skipUpdate?: boolean): void Inherited from RegionStore.setCenter Parameters p: Point2D skipUpdate: boolean = false Returns void setColor setColor(color: string): void Inherited from RegionStore.setColor Parameters color: string Returns void setControlPoint setControlPoint(index: number, p: Point2D, skipUpdate?: boolean): void Inherited from RegionStore.setControlPoint Parameters index: number p: Point2D skipUpdate: boolean = false Returns void setControlPoints setControlPoints(points: Point2D[], skipUpdate?: boolean, shapeChanged?: boolean): void Inherited from RegionStore.setControlPoints Parameters points: Point2D[] skipUpdate: boolean = false shapeChanged: boolean = true Returns void setCoordinate setCoordinate(coordinate: CoordinateMode): void Inherited from RegionStore.setCoordinate Parameters coordinate: CoordinateMode Returns void setDashLength setDashLength(dashLength: number): void Inherited from RegionStore.setDashLength Parameters dashLength: number Returns void setEastArrowhead setEastArrowhead(eastArrowhead: boolean): void Parameters eastArrowhead: boolean Returns void setEastTextOffset setEastTextOffset(offset: number, isX: boolean, skipTimeStampUpdate?: boolean): void Parameters offset: number isX: boolean skipTimeStampUpdate: boolean = false Returns void setFont setFont(font: Font): void Parameters font: Font Returns void setFontSize setFontSize(fontSize: number): void Parameters fontSize: number Returns void setFontStyle setFontStyle(fontStyle: string): void Parameters fontStyle: string Returns void setLabel setLabel(label: string, isNorth: boolean): void Parameters label: string isNorth: boolean Returns void setLength setLength(length: number, skipUpdate?: boolean): void Parameters length: number skipUpdate: boolean = false Returns void setLineWidth setLineWidth(lineWidth: number): void Inherited from RegionStore.setLineWidth Parameters lineWidth: number Returns void setLocked setLocked(locked: boolean): void Inherited from RegionStore.setLocked Parameters locked: boolean Returns void setName setName(name: string): void Inherited from RegionStore.setName Parameters name: string Returns void setNorthArrowhead setNorthArrowhead(northArrowhead: boolean): void Parameters northArrowhead: boolean Returns void setNorthTextOffset setNorthTextOffset(offset: number, isX: boolean, skipTimeStampUpdate?: boolean): void Parameters offset: number isX: boolean skipTimeStampUpdate: boolean = false Returns void setPointerLength setPointerLength(length: number): void Parameters length: number Returns void setPointerWidth setPointerWidth(width: number): void Parameters width: number Returns void setRegionId setRegionId(id: number): void Inherited from RegionStore.setRegionId Parameters id: number Returns void setRotation setRotation(angle: number, skipUpdate?: boolean): void Inherited from RegionStore.setRotation Parameters angle: number skipUpdate: boolean = false Returns void setSize setSize(p: Point2D, skipUpdate?: boolean): void Inherited from RegionStore.setSize Parameters p: Point2D skipUpdate: boolean = false Returns void toggleLock toggleLock(): void Inherited from RegionStore.toggleLock Returns void publicstaticGetRegionProperties GetRegionProperties(regionType: RegionType, controlPoints: Point2D[], rotation: number): string Inherited from RegionStore.GetRegionProperties Parameters regionType: RegionType controlPoints: Point2D[] rotation: number Returns string publicstaticIsRegionCustomIcon IsRegionCustomIcon(regionType: RegionType): boolean Inherited from RegionStore.IsRegionCustomIcon Parameters regionType: RegionType Returns boolean publicstaticIsRegionDashLengthValid IsRegionDashLengthValid(regionDashLength: number): boolean Inherited from RegionStore.IsRegionDashLengthValid Parameters regionDashLength: number Returns boolean publicstaticIsRegionLineWidthValid IsRegionLineWidthValid(regionLineWidth: number): boolean Inherited from RegionStore.IsRegionLineWidthValid Parameters regionLineWidth: number Returns boolean publicstaticIsRegionTypeValid IsRegionTypeValid(regionType: RegionType): boolean Inherited from RegionStore.IsRegionTypeValid Parameters regionType: RegionType Returns boolean publicstaticRegionIconString RegionIconString(regionType: RegionType): any Inherited from RegionStore.RegionIconString Parameters regionType: RegionType Returns any publicstaticRegionTypeString RegionTypeString(regionType: RegionType): string Inherited from RegionStore.RegionTypeString Parameters regionType: RegionType Returns string","keywords":""},{"title":"ContourStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/ContourStore","content":"ContourStore Index Constructors constructor Properties chunkCountnumGeneratedVerticesprogressvertexCount Accessors hasValidDataisComplete Methods addContourDatabindBufferclearDatasetContourData Constructors constructor new ContourStore(): ContourStore Returns ContourStore Properties chunkCount chunkCount: number = 0 numGeneratedVertices numGeneratedVertices: number[] progress progress: number vertexCount vertexCount: number = 0 Accessors hasValidData get hasValidData(): boolean Returns boolean isComplete get isComplete(): boolean Returns boolean Methods addContourData addContourData(indexOffsets: Int32Array, sourceVertices: Float32Array, progress: number): void Parameters indexOffsets: Int32Array sourceVertices: Float32Array progress: number Returns void bindBuffer bindBuffer(index: number): void Parameters index: number Returns void clearData clearData(): void Returns void setContourData setContourData(indexOffsets: Int32Array, vertexData: Float32Array, progress: number): void Parameters indexOffsets: Int32Array vertexData: Float32Array progress: number Returns void","keywords":""},{"title":"DistanceMeasuringStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/DistanceMeasuringStore","content":"DistanceMeasuringStore Index Constructors constructor Properties colorfinishfontSizeisCreatinglineWidthstarttransformedFinishtransformedStartDEFAULT_COLORDEFAULT_FONTSIZEDEFAULT_WIDTH Accessors showCurvestyleString Methods resetPossetColorsetFinishsetFontSizesetIsCreatingsetLineWidthsetStartupdateTransformedPos Constructors constructor new DistanceMeasuringStore(): DistanceMeasuringStore Returns DistanceMeasuringStore Properties color color: string finish finish: Point2D fontSize fontSize: number isCreating isCreating: boolean lineWidth lineWidth: number start start: Point2D transformedFinish transformedFinish: Point2D transformedStart transformedStart: Point2D staticreadonlyDEFAULT_COLOR DEFAULT_COLOR: #62D96B = &quot;#62D96B&quot; staticreadonlyDEFAULT_FONTSIZE DEFAULT_FONTSIZE: 14 = 14 staticreadonlyDEFAULT_WIDTH DEFAULT_WIDTH: 1.5 = 1.5 Accessors showCurve get showCurve(): boolean Returns boolean styleString get styleString(): string Returns string Methods resetPos resetPos(): void Returns void setColor setColor(color: string): void Parameters color: string Returns void setFinish setFinish(x: number, y: number): void Parameters x: number y: number Returns void setFontSize setFontSize(size: number): void Parameters size: number Returns void setIsCreating setIsCreating(isCreating: any): void Parameters isCreating: any Returns void setLineWidth setLineWidth(width: number): void Parameters width: number Returns void setStart setStart(x: number, y: number): void Parameters x: number y: number Returns void updateTransformedPos updateTransformedPos(spatialTransform: Transform2D): void Parameters spatialTransform: Transform2D Returns void","keywords":""},{"title":"EmptyWidgetStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/EmptyWidgetStore","content":"EmptyWidgetStore Index Constructors constructor Constructors constructor new EmptyWidgetStore(): EmptyWidgetStore Returns EmptyWidgetStore","keywords":""},{"title":"DialogStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/DialogStore","content":"DialogStore Index Constructors constructor Properties aboutDialogVisiblecatalogQueryDialogVisiblecodeSnippetDialogVisiblecontourDialogVisibledistanceMeasuringDialogVisibleexternalPageDialogTitleexternalPageDialogUrlexternalPageDialogVisiblefileBrowserDialogVisiblefileInfoDialogVisiblefittingDialogVisiblehotkeyDialogVisiblepreferenceDialogVisibleregionDialogVisiblesaveLayoutDialogVisibleselectedFileInfoDialogTabshareWorkspaceDialogVisiblestokesDialogVisiblevectorOverlayDialogVisibleworkspaceDialogMode Accessors Instance Methods hideAboutDialoghideCatalogQueryDialoghideCodeSnippetDialoghideContourDialoghideDistanceMeasuringDialoghideExternalPageDialoghideFileBrowserDialoghideFileInfoDialoghideFittingDialoghideHotkeyDialoghidePreferenceDialoghideRegionDialoghideSaveLayoutDialoghideShareWorkspaceDialoghideStokesDialoghideVectorOverlayDialoghideWorkspaceDialogsetSelectedFileInfoDialogTabshowAboutDialogshowCatalogQueryDialogshowCodeSnippetDialogshowContourDialogshowDistanceMeasuringDialogshowExistingCodeSnippetshowExternalPageDialogshowFileBrowserDialogshowFileInfoDialogshowFittingDialogshowHotkeyDialogshowNewCodeSnippetshowPreferenceDialogshowRegionDialogshowSaveLayoutDialogshowShareWorkspaceDialogshowStokesDialogshowVectorOverlayDialogshowWorkspaceDialog Constructors constructor new DialogStore(): DialogStore Returns DialogStore Properties aboutDialogVisible aboutDialogVisible: boolean catalogQueryDialogVisible catalogQueryDialogVisible: boolean = false codeSnippetDialogVisible codeSnippetDialogVisible: boolean = false contourDialogVisible contourDialogVisible: boolean = false distanceMeasuringDialogVisible distanceMeasuringDialogVisible: boolean = false externalPageDialogTitle externalPageDialogTitle: string externalPageDialogUrl externalPageDialogUrl: string externalPageDialogVisible externalPageDialogVisible: boolean = false fileBrowserDialogVisible fileBrowserDialogVisible: boolean = false fileInfoDialogVisible fileInfoDialogVisible: boolean = false fittingDialogVisible fittingDialogVisible: boolean = false hotkeyDialogVisible hotkeyDialogVisible: boolean preferenceDialogVisible preferenceDialogVisible: boolean regionDialogVisible regionDialogVisible: boolean saveLayoutDialogVisible saveLayoutDialogVisible: boolean selectedFileInfoDialogTab selectedFileInfoDialogTab: TabId = FileInfoType.IMAGE_HEADER shareWorkspaceDialogVisible shareWorkspaceDialogVisible: boolean stokesDialogVisible stokesDialogVisible: boolean = false vectorOverlayDialogVisible vectorOverlayDialogVisible: boolean = false workspaceDialogMode workspaceDialogMode: WorkspaceDialogMode = WorkspaceDialogMode.Hidden Accessors staticInstance get Instance(): DialogStore Returns DialogStore Methods hideAboutDialog hideAboutDialog(): void Returns void hideCatalogQueryDialog hideCatalogQueryDialog(): void Returns void hideCodeSnippetDialog hideCodeSnippetDialog(): void Returns void hideContourDialog hideContourDialog(): void Returns void hideDistanceMeasuringDialog hideDistanceMeasuringDialog(): void Returns void hideExternalPageDialog hideExternalPageDialog(): void Returns void hideFileBrowserDialog hideFileBrowserDialog(): void Returns void hideFileInfoDialog hideFileInfoDialog(): void Returns void hideFittingDialog hideFittingDialog(): void Returns void hideHotkeyDialog hideHotkeyDialog(): void Returns void hidePreferenceDialog hidePreferenceDialog(): void Returns void hideRegionDialog hideRegionDialog(): void Returns void hideSaveLayoutDialog hideSaveLayoutDialog(): void Returns void hideShareWorkspaceDialog hideShareWorkspaceDialog(): void Returns void hideStokesDialog hideStokesDialog(): void Returns void hideVectorOverlayDialog hideVectorOverlayDialog(): void Returns void hideWorkspaceDialog hideWorkspaceDialog(): void Returns void setSelectedFileInfoDialogTab setSelectedFileInfoDialogTab(newId: TabId): void Parameters newId: TabId Returns void showAboutDialog showAboutDialog(): void Returns void showCatalogQueryDialog showCatalogQueryDialog(): void Returns void showCodeSnippetDialog showCodeSnippetDialog(): void Returns void showContourDialog showContourDialog(): void Returns void showDistanceMeasuringDialog showDistanceMeasuringDialog(): void Returns void showExistingCodeSnippet showExistingCodeSnippet(snippet: Snippet, name: string): void Parameters snippet: Snippet name: string Returns void showExternalPageDialog showExternalPageDialog(url: string, title: string): void Parameters url: string title: string Returns void showFileBrowserDialog showFileBrowserDialog(): void Returns void showFileInfoDialog showFileInfoDialog(): void Returns void showFittingDialog showFittingDialog(): void Returns void showHotkeyDialog showHotkeyDialog(): void Returns void showNewCodeSnippet showNewCodeSnippet(): void Returns void showPreferenceDialog showPreferenceDialog(): void Returns void showRegionDialog showRegionDialog(): void Returns void showSaveLayoutDialog showSaveLayoutDialog(oldLayoutName?: string): void Parameters optionaloldLayoutName: string Returns void showShareWorkspaceDialog showShareWorkspaceDialog(): void Returns void showStokesDialog showStokesDialog(): void Returns void showVectorOverlayDialog showVectorOverlayDialog(): void Returns void showWorkspaceDialog showWorkspaceDialog(mode?: WorkspaceDialogMode): void Parameters mode: WorkspaceDialogMode = WorkspaceDialogMode.Save Returns void","keywords":""},{"title":"FileBrowserStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/FileBrowserStore","content":"FileBrowserStore Index Constructors constructor Properties HDUfileInfoExtendedappendingFramebrowserModecatalogFileInfocatalogFileListcatalogHeadersexportCoordinateTypeexportFileTypeexportFilenameexportRegionIndexesextendedLoadingfileInfoRespfileListisImportingRegionsisLoadingDialogOpenloadingCheckedCountloadingInfoloadingListloadingProgressloadingTotalCountregionFileInforesponseErrorMessagesaveFileTypesaveFilenamesaveRegionIdsaveRestFreqsaveSpectralRangesaveStokesOptionselectedCatalogFileselectedFileselectedFilesselectedHDUselectedTabshouldDropDegenerateAxesstartingDirectory Accessors HDUListannotationOptionNumcatalogHeaderDatasetexportAnnotationNumexportRegionNumexportRegionOptionsfileInfofileInfoExtendedgetBrowserModegetfileListByModeheadersincludesAnnotationincludesRegionisComplexImageregionOptionNumsaveRestFreqInHzsaveStokesRangeInstance Methods addExportRegionIndexcancelRequestingFileListclearExportRegionIndexesdeleteExportRegionIndexgetCatalogFileInfogetFileInfogetFileListgetRegionFileInfogetStokesFilehideFileBrowserinitialSaveSpectralRangeresetExportRegionIndexesresetLoadingStatesresetSaveRestFreqrestoreStartingDirectorysaveStartingDirectoryselectFileselectFolderselectHDUselectParentsetCatalogFileListsetExportCoordinateTypesetExportFileTypesetExportFilenamesetFileListsetImportingRegionssetSaveFileTypesetSaveFilenamesetSaveRegionIdsetSaveRestFreqsetSaveRestFreqUnitsetSaveRestFreqValsetSaveSpectralRangeMaxsetSaveSpectralRangeMinsetSelectedFilessetSelectedTabsetSortingConfigsetStartingDirectoryshowExportRegionsshowFileBrowsershowLoadingDialogupdateLoadingState Constructors constructor new FileBrowserStore(): FileBrowserStore Returns FileBrowserStore Properties HDUfileInfoExtended HDUfileInfoExtended: {} Type declaration [k string]: CARTA.IFileInfoExtended appendingFrame appendingFrame: boolean = false browserMode browserMode: BrowserMode = BrowserMode.File catalogFileInfo catalogFileInfo: ICatalogFileInfo catalogFileList catalogFileList: ICatalogListResponse catalogHeaders catalogHeaders: ICatalogHeader[] exportCoordinateType exportCoordinateType: CoordinateType exportFileType exportFileType: any exportFilename exportFilename: string exportRegionIndexes exportRegionIndexes: number[] = [] extendedLoading extendedLoading: boolean = false fileInfoResp fileInfoResp: boolean = false fileList fileList: IFileListResponse isImportingRegions isImportingRegions: boolean = false isLoadingDialogOpen isLoadingDialogOpen: boolean loadingCheckedCount loadingCheckedCount: number loadingInfo loadingInfo: boolean = false loadingList loadingList: boolean = false loadingProgress loadingProgress: number loadingTotalCount loadingTotalCount: number regionFileInfo regionFileInfo: string[] responseErrorMessage responseErrorMessage: string = &quot;&quot; saveFileType saveFileType: FileType = CARTA.FileType.CASA saveFilename saveFilename: string = &quot;&quot; saveRegionId saveRegionId: number saveRestFreq saveRestFreq: Freq = ... saveSpectralRange saveSpectralRange: string[] = ... saveStokesOption saveStokesOption: number selectedCatalogFile selectedCatalogFile: ICatalogFileInfo selectedFile selectedFile: any selectedFiles selectedFiles: ISelectedFile[] selectedHDU selectedHDU: string selectedTab selectedTab: TabId = FileInfoType.IMAGE_FILE shouldDropDegenerateAxes shouldDropDegenerateAxes: boolean startingDirectory startingDirectory: string = &quot;$BASE&quot; Accessors HDUList get HDUList(): IOptionProps[] Returns IOptionProps[] annotationOptionNum get annotationOptionNum(): number Returns number catalogHeaderDataset get catalogHeaderDataset(): { columnHeaders: CatalogHeader[]; columnsData: Map&lt;number, ProcessedColumnData&gt; } Returns { columnHeaders: CatalogHeader[]; columnsData: Map&lt;number, ProcessedColumnData&gt; } columnHeaders: CatalogHeader[] columnsData: Map&lt;number, ProcessedColumnData&gt; exportAnnotationNum get exportAnnotationNum(): number Returns number exportRegionNum get exportRegionNum(): number Returns number exportRegionOptions get exportRegionOptions(): LineOption[] Returns LineOption[] fileInfo get fileInfo(): string Returns string fileInfoExtended get fileInfoExtended(): IFileInfoExtended Returns IFileInfoExtended getBrowserMode get getBrowserMode(): FileInfoType Returns FileInfoType getfileListByMode get getfileListByMode(): any Returns any headers get headers(): string Returns string includesAnnotation get includesAnnotation(): boolean Returns boolean includesRegion get includesRegion(): boolean Returns boolean isComplexImage get isComplexImage(): boolean Returns boolean regionOptionNum get regionOptionNum(): number Returns number saveRestFreqInHz get saveRestFreqInHz(): number Returns number saveStokesRange get saveStokesRange(): number[] Returns number[] staticInstance get Instance(): FileBrowserStore Returns FileBrowserStore Methods addExportRegionIndex addExportRegionIndex(regionIndex: number): void Parameters regionIndex: number Returns void cancelRequestingFileList cancelRequestingFileList(): void Returns void clearExportRegionIndexes clearExportRegionIndexes(mode: SelectionMode): void Parameters mode: SelectionMode Returns void deleteExportRegionIndex deleteExportRegionIndex(regionIndex: number): void Parameters regionIndex: number Returns void getCatalogFileInfo getCatalogFileInfo(directory: string, filename: string): Generator&lt;Promise&lt;ICatalogFileInfoResponse&gt;, void, unknown&gt; Parameters directory: string filename: string Returns Generator&lt;Promise&lt;ICatalogFileInfoResponse&gt;, void, unknown&gt; getFileInfo getFileInfo(directory: string, file: string, hdu: string): Generator&lt;Promise&lt;IFileInfoResponse&gt;, void, unknown&gt; Parameters directory: string file: string hdu: string Returns Generator&lt;Promise&lt;IFileInfoResponse&gt;, void, unknown&gt; getFileList getFileList(directory?: string): Generator&lt;Promise&lt;IFileListResponse&gt;, void, unknown&gt; Parameters directory: string = &quot;&quot; Returns Generator&lt;Promise&lt;IFileListResponse&gt;, void, unknown&gt; getRegionFileInfo getRegionFileInfo(directory: string, file: string): Generator&lt;Promise&lt;IRegionFileInfoResponse&gt;, void, unknown&gt; Parameters directory: string file: string Returns Generator&lt;Promise&lt;IRegionFileInfoResponse&gt;, void, unknown&gt; getStokesFile getStokesFile(directory: string, file: string, hdu: string): Promise&lt;IStokesFile&gt; Retrieves Stokes file information from a given directory, file, and HDU. Parameters directory: string The directory where the file is located. file: string The name of the file. hdu: string The Header Data Unit (HDU) identifier of the file. Returns Promise&lt;IStokesFile&gt; A promise resolving to the Stokes file information. hideFileBrowser hideFileBrowser(): void Returns void initialSaveSpectralRange initialSaveSpectralRange(): void Returns void resetExportRegionIndexes resetExportRegionIndexes(mode: SelectionMode): void Parameters mode: SelectionMode Returns void resetLoadingStates resetLoadingStates(): void Returns void resetSaveRestFreq resetSaveRestFreq(): void Returns void restoreStartingDirectory restoreStartingDirectory(): void Returns void saveStartingDirectory saveStartingDirectory(directory?: string): void Parameters optionaldirectory: string Returns void selectFile selectFile(file: ISelectedFile): void Parameters file: ISelectedFile Returns void selectFolder selectFolder(folder: string, absolutePath?: boolean): void Parameters folder: string absolutePath: boolean = false Returns void selectHDU selectHDU(hdu: string): void Parameters hdu: string Returns void selectParent selectParent(): void Returns void setCatalogFileList setCatalogFileList(list: ICatalogListResponse): void Parameters list: ICatalogListResponse Returns void setExportCoordinateType setExportCoordinateType(coordType: CoordinateType): void Parameters coordType: CoordinateType Returns void setExportFileType setExportFileType(fileType: any): void Parameters fileType: any Returns void setExportFilename setExportFilename(filename: string): void Parameters filename: string Returns void setFileList setFileList(list: IFileListResponse): void Parameters list: IFileListResponse Returns void setImportingRegions setImportingRegions(isImportingRegions: boolean): void Parameters isImportingRegions: boolean Returns void setSaveFileType setSaveFileType(fileType: FileType): void Parameters fileType: FileType Returns void setSaveFilename setSaveFilename(filename: string): void Parameters filename: string Returns void setSaveRegionId setSaveRegionId(regionId: number): void Parameters regionId: number Returns void setSaveRestFreq setSaveRestFreq(freq: Freq): void Parameters freq: Freq Returns void setSaveRestFreqUnit setSaveRestFreqUnit(unit: FrequencyUnit): void Parameters unit: FrequencyUnit Returns void setSaveRestFreqVal setSaveRestFreqVal(val: number): void Parameters val: number Returns void setSaveSpectralRangeMax setSaveSpectralRangeMax(max: string): void Parameters max: string Returns void setSaveSpectralRangeMin setSaveSpectralRangeMin(min: string): void Parameters min: string Returns void setSelectedFiles setSelectedFiles(selection: ISelectedFile[]): void Parameters selection: ISelectedFile[] Returns void setSelectedTab setSelectedTab(newId: TabId): void Parameters newId: TabId Returns void setSortingConfig setSortingConfig(columnName: string, direction: number): void Parameters columnName: string direction: number Returns void setStartingDirectory setStartingDirectory(directory?: string): void Parameters optionaldirectory: string Returns void showExportRegions showExportRegions(regionId?: number): void Parameters optionalregionId: number Returns void showFileBrowser showFileBrowser(mode: BrowserMode, append?: boolean): void Parameters mode: BrowserMode append: boolean = false Returns void showLoadingDialog showLoadingDialog(): void Returns void updateLoadingState updateLoadingState(progress: number, checkedCount: number, totalCount: number): void Parameters progress: number checkedCount: number totalCount: number Returns void","keywords":""},{"title":"HelpStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/HelpStore","content":"HelpStore Index Constructors constructor Properties helpVisiblepositiontype Accessors Instance Methods hideHelpDrawershowHelpDrawer Constructors constructor new HelpStore(): HelpStore Returns HelpStore Properties helpVisible helpVisible: boolean = false position position: Position = Position.RIGHT type type: HelpType Accessors staticInstance get Instance(): HelpStore Returns HelpStore Methods hideHelpDrawer hideHelpDrawer(): void Returns void showHelpDrawer showHelpDrawer(helpType: HelpType, centerX: number): void Parameters helpType: HelpType centerX: number Returns void","keywords":""},{"title":"HistogramWidgetStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/HistogramWidgetStore","content":"HistogramWidgetStore Hierarchy RegionWidgetStore HistogramWidgetStore Index Constructors constructor Properties coordinatecurrentAutoBinscurrentAutoBoundscurrentMaxPixcurrentMinPixcurrentNumBinscursorXfileIdfixedBoundsfixedNumBinsisMouseMoveIntoLinePlotslinePlotInitXYBoundarieslinePlotPointSizelineWidthlogScaleYmaxNumBinsmaxPixmaxXmaxYmeanRmsVisibleminPixminXminYnumBinsplotTypeprimaryLineColorregionIdMapsettingsTabIdtype Accessors effectiveFrameeffectivePolarizationeffectiveRegioneffectiveRegionIdeffectiveRegionInfoframeOptionsisAbleToGenerateisAutoScaledXisAutoScaledYisEffectiveFrameEqualToActiveFramematchesSelectedRegion Methods cacheBoundscacheNumBinsclearFrameEntryclearRegionMapclearXBoundsclearXYBoundsclearYBoundsinitinitXYBoundariesonResetConfigresetBoundsresetNumBinssetAutoBinssetAutoBoundssetCoordinatesetCursorsetFileIdsetLinePlotPointSizesetLineWidthsetLogScalesetMaxNumBinssetMaxPixsetMeanRmsVisiblesetMinPixsetMouseMoveIntoLinePlotssetNumBinssetPlotTypesetPrimaryLineColorsetRegionIdsetSettingsTabIdsetXBoundssetXYBoundssetYBoundstoConfigCalculateRequirementsArrayCalculateRequirementsMapDiffHistoRequirements Constructors constructor new HistogramWidgetStore(): HistogramWidgetStore Overrides RegionWidgetStore.constructor Returns HistogramWidgetStore Properties coordinate coordinate: string currentAutoBins currentAutoBins: boolean currentAutoBounds currentAutoBounds: boolean currentMaxPix currentMaxPix: number currentMinPix currentMinPix: number currentNumBins currentNumBins: number cursorX cursorX: number fileId fileId: number Inherited from RegionWidgetStore.fileId publicfixedBounds fixedBounds: boolean publicfixedNumBins fixedNumBins: boolean isMouseMoveIntoLinePlots isMouseMoveIntoLinePlots: boolean linePlotInitXYBoundaries linePlotInitXYBoundaries: { maxXVal: number; maxYVal: number; minXVal: number; minYVal: number } Type declaration maxXVal: number maxYVal: number minXVal: number minYVal: number linePlotPointSize linePlotPointSize: number lineWidth lineWidth: number logScaleY logScaleY: boolean maxNumBins maxNumBins: number publicmaxPix maxPix: number maxX maxX: number maxY maxY: number meanRmsVisible meanRmsVisible: boolean publicminPix minPix: number minX minX: number minY minY: number publicnumBins numBins: number plotType plotType: PlotType primaryLineColor primaryLineColor: string regionIdMap regionIdMap: Map&lt;number, number&gt; Inherited from RegionWidgetStore.regionIdMap settingsTabId settingsTabId: HistogramSettingsTabs type type: RegionsType Inherited from RegionWidgetStore.type Accessors effectiveFrame get effectiveFrame(): FrameStore Inherited from RegionWidgetStore.effectiveFrame Returns FrameStore effectivePolarization get effectivePolarization(): POLARIZATIONS Returns POLARIZATIONS effectiveRegion get effectiveRegion(): RegionStore Inherited from RegionWidgetStore.effectiveRegion Returns RegionStore effectiveRegionId get effectiveRegionId(): number Inherited from RegionWidgetStore.effectiveRegionId Returns number effectiveRegionInfo get effectiveRegionInfo(): string Inherited from RegionWidgetStore.effectiveRegionInfo Returns string frameOptions get frameOptions(): IOptionProps[] Inherited from RegionWidgetStore.frameOptions Returns IOptionProps[] isAbleToGenerate get isAbleToGenerate(): boolean Returns boolean isAutoScaledX get isAutoScaledX(): boolean Returns boolean isAutoScaledY get isAutoScaledY(): boolean Returns boolean isEffectiveFrameEqualToActiveFrame get isEffectiveFrameEqualToActiveFrame(): boolean Inherited from RegionWidgetStore.isEffectiveFrameEqualToActiveFrame Returns boolean matchesSelectedRegion get matchesSelectedRegion(): boolean Inherited from RegionWidgetStore.matchesSelectedRegion Returns boolean Methods publiccacheBounds cacheBounds(minPix: number, maxPix: number): void Parameters minPix: number maxPix: number Returns void publiccacheNumBins cacheNumBins(numBins: number): void Parameters numBins: number Returns void clearFrameEntry clearFrameEntry(fileId: number): void Inherited from RegionWidgetStore.clearFrameEntry Parameters fileId: number Returns void clearRegionMap clearRegionMap(): void Inherited from RegionWidgetStore.clearRegionMap Returns void clearXBounds clearXBounds(): void Returns void clearXYBounds clearXYBounds(): void Returns void clearYBounds clearYBounds(): void Returns void publicinit init(widgetSettings: any): void Parameters widgetSettings: any Returns void initXYBoundaries initXYBoundaries(minXVal: number, maxXVal: number, minYVal: number, maxYVal: number): void Parameters minXVal: number maxXVal: number minYVal: number maxYVal: number Returns void onResetConfig onResetConfig(): void Returns void resetBounds resetBounds(): void Returns void resetNumBins resetNumBins(): void Returns void setAutoBins setAutoBins(autoBins: boolean): void Parameters autoBins: boolean Returns void setAutoBounds setAutoBounds(autoBounds: boolean): void Parameters autoBounds: boolean Returns void setCoordinate setCoordinate(coordinate: string): void Parameters coordinate: string Returns void setCursor setCursor(cursorVal: number): void Parameters cursorVal: number Returns void setFileId setFileId(fileId: number): void Inherited from RegionWidgetStore.setFileId Parameters fileId: number Returns void setLinePlotPointSize setLinePlotPointSize(val: number): void Parameters val: number Returns void setLineWidth setLineWidth(val: number): void Parameters val: number Returns void setLogScale setLogScale(logScale: boolean): void Parameters logScale: boolean Returns void setMaxNumBins setMaxNumBins(maxNumBins: number): void Parameters maxNumBins: number Returns void setMaxPix setMaxPix(maxPix: number): void Parameters maxPix: number Returns void setMeanRmsVisible setMeanRmsVisible(val: boolean): void Parameters val: boolean Returns void setMinPix setMinPix(minPix: number): void Parameters minPix: number Returns void setMouseMoveIntoLinePlots setMouseMoveIntoLinePlots(val: boolean): void Parameters val: boolean Returns void setNumBins setNumBins(numBins: number): void Parameters numBins: number Returns void setPlotType setPlotType(val: PlotType): void Parameters val: PlotType Returns void setPrimaryLineColor setPrimaryLineColor(color: string): void Parameters color: string Returns void setRegionId setRegionId(fileId: number, regionId: number): void Inherited from RegionWidgetStore.setRegionId Parameters fileId: number regionId: number Returns void setSettingsTabId setSettingsTabId(tabId: HistogramSettingsTabs): void Parameters tabId: HistogramSettingsTabs Returns void setXBounds setXBounds(minVal: number, maxVal: number): void Parameters minVal: number maxVal: number Returns void setXYBounds setXYBounds(minX: number, maxX: number, minY: number, maxY: number): void Parameters minX: number maxX: number minY: number maxY: number Returns void setYBounds setYBounds(minVal: number, maxVal: number): void Parameters minVal: number maxVal: number Returns void publictoConfig toConfig(): { linePlotPointSize: number; lineWidth: number; logScaleY: boolean; maxXVal: number; maxYVal: number; minXVal: number; minYVal: number; plotType: PlotType; primaryLineColor: string } Returns { linePlotPointSize: number; lineWidth: number; logScaleY: boolean; maxXVal: number; maxYVal: number; minXVal: number; minYVal: number; plotType: PlotType; primaryLineColor: string } linePlotPointSize: number lineWidth: number logScaleY: boolean maxXVal: number maxYVal: number minXVal: number minYVal: number plotType: PlotType primaryLineColor: string publicstaticCalculateRequirementsArray CalculateRequirementsArray(widgetsMap: Map&lt;string, RegionWidgetStore&gt;): Map&lt;number, number[]&gt; Inherited from RegionWidgetStore.CalculateRequirementsArray Parameters widgetsMap: Map&lt;string, RegionWidgetStore&gt; Returns Map&lt;number, number[]&gt; publicstaticCalculateRequirementsMap CalculateRequirementsMap(widgetsMap: Map&lt;string, HistogramWidgetStore&gt;): Map&lt;number, Map&lt;number, SetHistogramRequirements&gt;&gt; Parameters widgetsMap: Map&lt;string, HistogramWidgetStore&gt; Returns Map&lt;number, Map&lt;number, SetHistogramRequirements&gt;&gt; publicstaticDiffHistoRequirements DiffHistoRequirements(originalRequirements: Map&lt;number, Map&lt;number, SetHistogramRequirements&gt;&gt;, updatedRequirements: Map&lt;number, Map&lt;number, SetHistogramRequirements&gt;&gt;): SetHistogramRequirements[] Parameters originalRequirements: Map&lt;number, Map&lt;number, SetHistogramRequirements&gt;&gt; updatedRequirements: Map&lt;number, Map&lt;number, SetHistogramRequirements&gt;&gt; Returns SetHistogramRequirements[]","keywords":""},{"title":"ImageFittingIndividualStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/ImageFittingIndividualStore","content":"ImageFittingIndividualStore Index Constructors constructor Properties amplitudeamplitudeFixedcentercenterFixedfwhmfwhmFixedpapaFixed Accessors allFixedcenterWcsfixedParamsfwhmWcsvalidParams Methods setAmplitudesetCenterXsetCenterXWcssetCenterYsetCenterYWcssetFwhmXsetFwhmXWcssetFwhmYsetFwhmYWcssetPatoggleAmplitudeFixedtoggleCenterXFixedtoggleCenterYFixedtoggleFwhmXFixedtoggleFwhmYFixedtogglePaFixed Constructors constructor new ImageFittingIndividualStore(): ImageFittingIndividualStore Returns ImageFittingIndividualStore Properties amplitude amplitude: number amplitudeFixed amplitudeFixed: boolean center center: Point2D centerFixed centerFixed: { x: boolean; y: boolean } Type declaration x: boolean y: boolean fwhm fwhm: Point2D fwhmFixed fwhmFixed: { x: boolean; y: boolean } Type declaration x: boolean y: boolean pa pa: number paFixed paFixed: boolean Accessors allFixed get allFixed(): boolean Returns boolean centerWcs get centerWcs(): WCSPoint2D Returns WCSPoint2D fixedParams get fixedParams(): boolean[] Returns boolean[] fwhmWcs get fwhmWcs(): WCSPoint2D Returns WCSPoint2D validParams get validParams(): boolean Returns boolean Methods setAmplitude setAmplitude(val: number): boolean Parameters val: number Returns boolean setCenterX setCenterX(val: number): boolean Parameters val: number Returns boolean setCenterXWcs setCenterXWcs(val: string): boolean Parameters val: string Returns boolean setCenterY setCenterY(val: number): boolean Parameters val: number Returns boolean setCenterYWcs setCenterYWcs(val: string): boolean Parameters val: string Returns boolean setFwhmX setFwhmX(val: number): boolean Parameters val: number Returns boolean setFwhmXWcs setFwhmXWcs(val: string): boolean Parameters val: string Returns boolean setFwhmY setFwhmY(val: number): boolean Parameters val: number Returns boolean setFwhmYWcs setFwhmYWcs(val: string): boolean Parameters val: string Returns boolean setPa setPa(val: number): boolean Parameters val: number Returns boolean toggleAmplitudeFixed toggleAmplitudeFixed(): void Returns void toggleCenterXFixed toggleCenterXFixed(): void Returns void toggleCenterYFixed toggleCenterYFixed(): void Returns void toggleFwhmXFixed toggleFwhmXFixed(): void Returns void toggleFwhmYFixed toggleFwhmYFixed(): void Returns void togglePaFixed togglePaFixed(): void Returns void","keywords":""},{"title":"ImageFittingStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/ImageFittingStore","content":"ImageFittingStore Index Constructors constructor Properties backgroundOffsetbackgroundOffsetFixedcomponentscreateModelImagecreateResidualImageisCancellingisFittingprogressselectedComponentIndexselectedFileIdselectedRegionIdsolverType Accessors effectiveFramefitDisabledframeOptionsregionOptionssolverOptionsInstance Methods cancelFittingclearComponentscreateRegionsdeleteSelectedComponentfitImageresetBackgroundOffsetresetFittingStatesetBackgroundOffsetsetComponentssetIsCancellingsetIsFittingsetProgresssetResultStringsetSelectedComponentIndexsetSelectedFileIdsetSelectedRegionIdsetSolverTypetoggleBackgroundOffsetFixedtoggleCreateModelImagetoggleCreateResidualImage Constructors constructor new ImageFittingStore(): ImageFittingStore Returns ImageFittingStore Properties backgroundOffset backgroundOffset: number = 0 backgroundOffsetFixed backgroundOffsetFixed: boolean = true components components: ImageFittingIndividualStore[] createModelImage createModelImage: boolean = true createResidualImage createResidualImage: boolean = true isCancelling isCancelling: boolean = false isFitting isFitting: boolean = false progress progress: number = 0 selectedComponentIndex selectedComponentIndex: number selectedFileId selectedFileId: number = ACTIVE_FILE_ID selectedRegionId selectedRegionId: number = FOV_REGION_ID solverType solverType: FittingSolverType = CARTA.FittingSolverType.Cholesky Accessors effectiveFrame get effectiveFrame(): FrameStore Returns FrameStore fitDisabled get fitDisabled(): boolean Returns boolean frameOptions get frameOptions(): any[] Returns any[] regionOptions get regionOptions(): { label: string; value: number }[] Returns { label: string; value: number }[] solverOptions get solverOptions(): { label: string; value: any }[] Returns { label: string; value: any }[] staticInstance get Instance(): ImageFittingStore Returns ImageFittingStore Methods cancelFitting cancelFitting(): void Returns void clearComponents clearComponents(): void Returns void createRegions createRegions(): Promise&lt;void&gt; Returns Promise&lt;void&gt; deleteSelectedComponent deleteSelectedComponent(): void Returns void fitImage fitImage(): void Returns void resetBackgroundOffset resetBackgroundOffset(): void Returns void resetFittingState resetFittingState(): void Returns void setBackgroundOffset setBackgroundOffset(offset: number): void Parameters offset: number Returns void setComponents setComponents(num: number): void Parameters num: number Returns void setIsCancelling setIsCancelling(isCancelling: boolean): void Parameters isCancelling: boolean Returns void setIsFitting setIsFitting(isFitting: boolean): void Parameters isFitting: boolean Returns void setProgress setProgress(progress: number): void Parameters progress: number Returns void setResultString setResultString(regionId: number, fovInfo: IRegionInfo, fixedParams: boolean[], values: IGaussianComponent[], errors: IGaussianComponent[], offsetValue: number, offsetError: number, integratedFluxValues: number[], integratedFluxErrors: number[], fittingLog: string): void Parameters regionId: number fovInfo: IRegionInfo fixedParams: boolean[] values: IGaussianComponent[] errors: IGaussianComponent[] offsetValue: number offsetError: number integratedFluxValues: number[] integratedFluxErrors: number[] fittingLog: string Returns void setSelectedComponentIndex setSelectedComponentIndex(index: number): void Parameters index: number Returns void setSelectedFileId setSelectedFileId(id: number): void Parameters id: number Returns void setSelectedRegionId setSelectedRegionId(id: number): void Parameters id: number Returns void setSolverType setSolverType(type: FittingSolverType): void Parameters type: FittingSolverType Returns void toggleBackgroundOffsetFixed toggleBackgroundOffsetFixed(): void Returns void toggleCreateModelImage toggleCreateModelImage(): void Returns void toggleCreateResidualImage toggleCreateResidualImage(): void Returns void","keywords":""},{"title":"LayerListWidgetStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/LayerListWidgetStore","content":"LayerListWidgetStore Index Constructors constructor Properties selectedFrameIndexsettingsTabId Accessors restFreqFrameOptions Methods resetSelectedFrameIndexsetSelectedFrameIndexsetSettingsTabId Constructors constructor new LayerListWidgetStore(): LayerListWidgetStore Returns LayerListWidgetStore Properties selectedFrameIndex selectedFrameIndex: number = -1 settingsTabId settingsTabId: TabId = LayerListSettingsTabs.MATCHING Accessors restFreqFrameOptions get restFreqFrameOptions(): { active: boolean; disable: boolean; frameIndex: number; label: string }[] Returns { active: boolean; disable: boolean; frameIndex: number; label: string }[] Methods resetSelectedFrameIndex resetSelectedFrameIndex(): void Returns void setSelectedFrameIndex setSelectedFrameIndex(index: number): void Parameters index: number Returns void setSettingsTabId setSettingsTabId(tab: TabId): void Parameters tab: TabId Returns void","keywords":""},{"title":"FrameStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/FrameStore","content":"FrameStore Index Constructors constructor Properties animationChannelRangecenterchannelchannelSecondaryValueschannelValuescolorbarLabelCustomTextcolorbarStorecontourConfigcontourStorescurrentCompressionQualitycurrentFrameViewcursorInfocursorMovingcursorValuedistanceMeasuringfittingLogfittingModelImagefittingResidualImagefittingResultfittingResultRegionParamsframeInfogeneratedPVRegionIdintensityUnitisPreviewisRequestPVCancellingisRequestingMomentsisRequestingPVmomentImagesmovingoverlayBeamSettingspixelUnitSizeArcsecpointShapeCachepreviewPVRasterDatapreviewViewHeightpreviewViewWidthpvImagesrasterScalingReferencerenderConfigrenderHiDPIrequestingMomentsProgressrequestingPVProgressrequiredChannelrequiredFrameViewForRegionRenderrequiredStokesrestFreqStoresecondaryRasterScalingImagessecondarySpatialImagessecondarySpectralImagesspatialReferencespatialTransformASTspectralCoordsSupportedspectralReferencespectralSystemspectralSystemsSupportedspectralTypespectralTypeSecondaryspectralUnitspectralUnitSecondarystokesstokesFilestitleCustomTextupdatePreviewDataGeneratorvalidWcsvectorOverlayConfigvectorOverlayStorewcsInfowcsInfo3DwcsInfoForTransformationzoomLevelzooming Accessors aspectRatiobeamAllChannelsbeamPropertiescenterMovementcenterWCSchannelInfochannelTypechannelValueBoundscontourProgresscoordinateOptionscoordinateOptionsZdepthAxisInfodepthNumberdimensiondirXdirXLabeldirXNumberdirYdirYLabeldirYNumberfilenamefovSizefovSizeWCShasLinearStokeshasSquarePixelshasStokeshasVisibleBeamheaderRestFreqheaderUnitintensityConfigisCoordChannelisCoordChannelSecondaryisCoordVelocityisCursorValueCurrentisPVImageisRenderableisRestFreqEditableisSecondarySpectralPropsEqualisSpectralChannelisSpectralCoordinateConvertibleisSpectralPropsEqualisSpectralSystemConvertibleisSwappedZisUVImageisXYisYXmaxMipnativeSpectralCoordinatenumChannelspixelRatiopolarizationInfopolarizationspreviewCursorValueregionSetrenderConfigSiblingsrenderHeightrenderWidthrenderedAxesNumbersrequiredFrameViewrequiredPolarizationrequiredPolarizationIndexrequiredPolarizationInforequiredUnitsharedRegionsspatialSiblingsspatialTransformspectralspectralAxisspectralCoordinatespectralCoordinateSecondaryspectralInfospectralLabelspectralNumberspectralSiblingsspectralUnitStrstokesInfostokesNumberstokesOptionstransformedWcsInfounitFrameViewuvAxis Methods addFittingModelImageaddFittingResidualImageaddMomentImageaddPvImageaddSecondaryRasterScalingImageaddSecondarySpatialImageaddSecondarySpectralImageapplyContoursapplyVectorOverlayclearContoursclearRasterScalingReferenceclearSpatialReferenceclearSpectralReferenceclearVectorOverlayconvertFreqMHzToSettingWCSconvertToNativeWCSendMovingfindChannelIndexByValuefitZoomgenRegionWcsPropertiesgetCatalogControlMapgetControlMapgetCursorInfogetImagePosFromWCSgetImageXValueFromArcsecgetImageYValueFromArcsecgetRegiongetRegionPropertiesgetRegionWcsPropertiesgetWCSFromImagePosgetWcsSizeInArcsecincrementChannelsonResizePreviewWidgetremoveCatalogControlMapremoveControlMapremoveMomentImageremovePvImageremoveSecondaryRasterScalingImageremoveSecondarySpatialImageremoveSecondarySpectralImageresetFittingresetMomentRequestStateresetPvRequestStatesetAnimationRangesetCentersetCenterWcssetChannelsetChannelssetColorbarLabelCustomTextsetCursorPositionsetCursorValuesetFittingLogsetFittingResultsetFittingResultRegionParamssetFrameInfosetGeneratedPVRegionIdsetIntensityUnitsetIsPreviewsetIsRequestPVCancellingsetIsRequestingMomentssetIsRequestingPVsetPreviewPVRasterDatasetRasterScalingReferencesetSpatialReferencesetSpectralCoordinatesetSpectralCoordinateSecondarysetSpectralCoordinateToRadioVelocitysetSpectralReferencesetSpectralSystemsetStokessetStokesByIndexsetStokesFilessetTitleCustomTextsetZoomstartMovingupdateCursorRegionupdateFromContourDataupdateFromVectorOverlayDataupdatePreviewDataupdateRequestingMomentsProgressupdateRequestingPvProgressupdateSpectralVsDirectionWcszoomToPointzoomToSizeXzoomToSizeXWcszoomToSizeYzoomToSizeYWcs Constructors constructor new FrameStore(frameInfo: FrameInfo): FrameStore Parameters frameInfo: FrameInfo Returns FrameStore Properties animationChannelRange animationChannelRange: NumberRange center center: Point2D channel channel: number channelSecondaryValues channelSecondaryValues: number[] channelValues channelValues: number[] colorbarLabelCustomText colorbarLabelCustomText: string publicreadonlycolorbarStore colorbarStore: ColorbarStore publicreadonlycontourConfig contourConfig: ContourConfigStore contourStores contourStores: Map&lt;number, ContourStore&gt; currentCompressionQuality currentCompressionQuality: number currentFrameView currentFrameView: FrameView cursorInfo cursorInfo: CursorInfo cursorMoving cursorMoving: boolean cursorValue cursorValue: { channel: number; position: Point2D; value: number } Type declaration channel: number position: Point2D value: number publicdistanceMeasuring distanceMeasuring: DistanceMeasuringStore fittingLog fittingLog: string fittingModelImage fittingModelImage: FrameStore fittingResidualImage fittingResidualImage: FrameStore fittingResult fittingResult: string fittingResultRegionParams fittingResultRegionParams: { points: Point2D[]; rotation: number }[] publicframeInfo frameInfo: FrameInfo generatedPVRegionId generatedPVRegionId: number intensityUnit intensityUnit: string isPreview isPreview: boolean isRequestPVCancelling isRequestPVCancelling: boolean isRequestingMoments isRequestingMoments: boolean isRequestingPV isRequestingPV: boolean momentImages momentImages: FrameStore[] moving moving: boolean overlayBeamSettings overlayBeamSettings: OverlayBeamStore publicreadonlypixelUnitSizeArcsec pixelUnitSizeArcsec: Point2D publicpointShapeCache pointShapeCache: PointAnnotationShape previewPVRasterData previewPVRasterData: Float32Array previewViewHeight previewViewHeight: number previewViewWidth previewViewWidth: number pvImages pvImages: FrameStore[] rasterScalingReference rasterScalingReference: FrameStore publicreadonlyrenderConfig renderConfig: RenderConfigStore renderHiDPI renderHiDPI: boolean requestingMomentsProgress requestingMomentsProgress: number requestingPVProgress requestingPVProgress: number requiredChannel requiredChannel: number publicrequiredFrameViewForRegionRender requiredFrameViewForRegionRender: FrameView requiredStokes requiredStokes: number publicrestFreqStore restFreqStore: RestFreqStore secondaryRasterScalingImages secondaryRasterScalingImages: FrameStore[] secondarySpatialImages secondarySpatialImages: FrameStore[] secondarySpectralImages secondarySpectralImages: FrameStore[] spatialReference spatialReference: FrameStore publicspatialTransformAST spatialTransformAST: Mapping publicspectralCoordsSupported spectralCoordsSupported: Map&lt;string, { type: SpectralType; unit: SpectralUnit }&gt; spectralReference spectralReference: FrameStore spectralSystem spectralSystem: SpectralSystem publicspectralSystemsSupported spectralSystemsSupported: SpectralSystem[] spectralType spectralType: SpectralType spectralTypeSecondary spectralTypeSecondary: SpectralType spectralUnit spectralUnit: SpectralUnit spectralUnitSecondary spectralUnitSecondary: SpectralUnit stokes stokes: number stokesFiles stokesFiles: StokesFile[] titleCustomText titleCustomText: string publicupdatePreviewDataGenerator updatePreviewDataGenerator: Generator&lt;unknown, any, unknown&gt; publicreadonlyvalidWcs validWcs: boolean publicreadonlyvectorOverlayConfig vectorOverlayConfig: VectorOverlayConfigStore publicreadonlyvectorOverlayStore vectorOverlayStore: VectorOverlayStore publicwcsInfo wcsInfo: FrameSet publicreadonlywcsInfo3D wcsInfo3D: FrameSet publicreadonlywcsInfoForTransformation wcsInfoForTransformation: FrameSet zoomLevel zoomLevel: number zooming zooming: boolean Accessors aspectRatio get aspectRatio(): number Returns number beamAllChannels get beamAllChannels(): IBeam[] Returns IBeam[] beamProperties get beamProperties(): { angle: number; majorAxis: number; minorAxis: number; overlayBeamSettings: OverlayBeamStore; x: number; y: number } Returns { angle: number; majorAxis: number; minorAxis: number; overlayBeamSettings: OverlayBeamStore; x: number; y: number } angle: number majorAxis: number minorAxis: number overlayBeamSettings: OverlayBeamStore x: number y: number centerMovement get centerMovement(): Point2D Returns Point2D centerWCS get centerWCS(): WCSPoint2D Returns WCSPoint2D channelInfo get channelInfo(): ChannelInfo Returns ChannelInfo channelType get channelType(): string Returns string channelValueBounds get channelValueBounds(): FloatBounds Returns FloatBounds contourProgress get contourProgress(): number Returns number coordinateOptions get coordinateOptions(): { label: string; value: string }[] Returns { label: string; value: string }[] coordinateOptionsZ get coordinateOptionsZ(): { label: string; value: string }[] Returns { label: string; value: string }[] depthAxisInfo get depthAxisInfo(): string Returns string depthNumber get depthNumber(): number Returns number dimension get dimension(): string Returns string dirX get dirX(): number Returns number dirXLabel get dirXLabel(): string Returns string dirXNumber get dirXNumber(): number Returns number dirY get dirY(): number Returns number dirYLabel get dirYLabel(): string Returns string dirYNumber get dirYNumber(): number Returns number filename get filename(): string Returns string fovSize get fovSize(): Point2D Returns Point2D fovSizeWCS get fovSizeWCS(): WCSPoint2D Returns WCSPoint2D hasLinearStokes get hasLinearStokes(): boolean Returns boolean hasSquarePixels get hasSquarePixels(): boolean Returns boolean hasStokes get hasStokes(): boolean Returns boolean hasVisibleBeam get hasVisibleBeam(): boolean Returns boolean headerRestFreq get headerRestFreq(): number Returns number headerUnit get headerUnit(): string Returns string intensityConfig get intensityConfig(): IntensityConfig Returns IntensityConfig isCoordChannel get isCoordChannel(): boolean Returns boolean isCoordChannelSecondary get isCoordChannelSecondary(): boolean Returns boolean isCoordVelocity get isCoordVelocity(): boolean Returns boolean isCursorValueCurrent get isCursorValueCurrent(): boolean Returns boolean isPVImage get isPVImage(): boolean Returns boolean isRenderable get isRenderable(): boolean Returns boolean isRestFreqEditable get isRestFreqEditable(): boolean Returns boolean isSecondarySpectralPropsEqual get isSecondarySpectralPropsEqual(): boolean Returns boolean isSpectralChannel get isSpectralChannel(): boolean Returns boolean isSpectralCoordinateConvertible get isSpectralCoordinateConvertible(): boolean Returns boolean isSpectralPropsEqual get isSpectralPropsEqual(): boolean Returns boolean isSpectralSystemConvertible get isSpectralSystemConvertible(): boolean Returns boolean isSwappedZ get isSwappedZ(): boolean Returns boolean isUVImage get isUVImage(): boolean Returns boolean isXY get isXY(): boolean Returns boolean isYX get isYX(): boolean Returns boolean maxMip get maxMip(): number Returns number nativeSpectralCoordinate get nativeSpectralCoordinate(): string Returns string numChannels get numChannels(): number Returns number pixelRatio get pixelRatio(): number Returns number polarizationInfo get polarizationInfo(): string[] Returns string[] polarizations get polarizations(): POLARIZATIONS[] Returns POLARIZATIONS[] previewCursorValue get previewCursorValue(): { channel: number; position: Point2D; value: number } Returns { channel: number; position: Point2D; value: number } channel: number position: Point2D value: number regionSet get regionSet(): RegionSetStore Returns RegionSetStore renderConfigSiblings get renderConfigSiblings(): FrameStore[] Returns FrameStore[] renderHeight get renderHeight(): number Returns number renderWidth get renderWidth(): number Returns number renderedAxesNumbers get renderedAxesNumbers(): [number, number] Returns [number, number] requiredFrameView get requiredFrameView(): FrameView Returns FrameView requiredPolarization get requiredPolarization(): number Returns number requiredPolarizationIndex get requiredPolarizationIndex(): number Returns number requiredPolarizationInfo get requiredPolarizationInfo(): string Returns string requiredUnit get requiredUnit(): string Returns string sharedRegions get sharedRegions(): boolean Returns boolean spatialSiblings get spatialSiblings(): FrameStore[] Returns FrameStore[] spatialTransform get spatialTransform(): Transform2D Returns Transform2D spectral get spectral(): number Returns number spectralAxis get spectralAxis(): { specsys: string; type: SpectralTypeSet; valid: boolean; value: number } Returns { specsys: string; type: SpectralTypeSet; valid: boolean; value: number } specsys: string type: SpectralTypeSet valid: boolean value: number spectralCoordinate get spectralCoordinate(): string Returns string spectralCoordinateSecondary get spectralCoordinateSecondary(): string Returns string spectralInfo get spectralInfo(): SpectralInfo Returns SpectralInfo spectralLabel get spectralLabel(): string Returns string spectralNumber get spectralNumber(): number Returns number spectralSiblings get spectralSiblings(): FrameStore[] Returns FrameStore[] spectralUnitStr get spectralUnitStr(): string Returns string stokesInfo get stokesInfo(): string[] Returns string[] stokesNumber get stokesNumber(): number Returns number stokesOptions get stokesOptions(): { label: string; value: number }[] Returns { label: string; value: number }[] transformedWcsInfo get transformedWcsInfo(): any Returns any unitFrameView get unitFrameView(): FrameView Returns FrameView uvAxis get uvAxis(): number Returns number Methods addFittingModelImage addFittingModelImage(frame: FrameStore): void Parameters frame: FrameStore Returns void addFittingResidualImage addFittingResidualImage(frame: FrameStore): void Parameters frame: FrameStore Returns void addMomentImage addMomentImage(frame: FrameStore): void Parameters frame: FrameStore Returns void addPvImage addPvImage(frame: FrameStore): void Parameters frame: FrameStore Returns void addSecondaryRasterScalingImage addSecondaryRasterScalingImage(frame: FrameStore): void Parameters frame: FrameStore Returns void addSecondarySpatialImage addSecondarySpatialImage(frame: FrameStore): void Parameters frame: FrameStore Returns void addSecondarySpectralImage addSecondarySpectralImage(frame: FrameStore): void Parameters frame: FrameStore Returns void applyContours applyContours(): void Returns void applyVectorOverlay applyVectorOverlay(): void Returns void clearContours clearContours(updateBackend?: boolean): void Parameters updateBackend: boolean = true Returns void clearRasterScalingReference clearRasterScalingReference(): void Returns void clearSpatialReference clearSpatialReference(): void Returns void clearSpectralReference clearSpectralReference(): void Returns void clearVectorOverlay clearVectorOverlay(updateBackend?: boolean): void Parameters updateBackend: boolean = true Returns void publicconvertFreqMHzToSettingWCS convertFreqMHzToSettingWCS(value: number): number Parameters value: number Returns number publicconvertToNativeWCS convertToNativeWCS(value: number): number Parameters value: number Returns number endMoving endMoving(): void Returns void publicfindChannelIndexByValue findChannelIndexByValue(x: number): number Parameters x: number Returns number fitZoom fitZoom(): number Returns number publicgenRegionWcsProperties genRegionWcsProperties(regionType: RegionType, controlPoints: Point2D[], rotation: number, regionId?: number): string Parameters regionType: RegionType controlPoints: Point2D[] rotation: number regionId: number = -1 Returns string publicgetCatalogControlMap getCatalogControlMap(frame: FrameStore): CatalogControlMap Parameters frame: FrameStore Returns CatalogControlMap publicgetControlMap getControlMap(frame: FrameStore): ControlMap Parameters frame: FrameStore Returns ControlMap publicgetCursorInfo getCursorInfo(cursorPosImageSpace: Point2D): { infoWCS: any; isInsideImage: boolean; posImageSpace: Point2D; posWCS: any; precision: { x: number; y: number } } Parameters cursorPosImageSpace: Point2D Returns { infoWCS: any; isInsideImage: boolean; posImageSpace: Point2D; posWCS: any; precision: { x: number; y: number } } infoWCS: any isInsideImage: boolean posImageSpace: Point2D posWCS: any precision: { x: number; y: number } x: number y: number getImagePosFromWCS getImagePosFromWCS(wcsList: WCSPoint2D[]): Point2D[] Converts positions from WCS coordinates to image coordinates. Parameters wcsList: WCSPoint2D[] An array of positions in WCS coordinates. Returns Point2D[] An array of corresponding positions in image coordinates. publicgetImageXValueFromArcsec getImageXValueFromArcsec(arcsecValue: number): number Parameters arcsecValue: number Returns number publicgetImageYValueFromArcsec getImageYValueFromArcsec(arcsecValue: number): number Parameters arcsecValue: number Returns number publicgetRegion getRegion(regionId: number): RegionStore Parameters regionId: number Returns RegionStore publicgetRegionProperties getRegionProperties(regionId: number): string[] Parameters regionId: number Returns string[] publicgetRegionWcsProperties getRegionWcsProperties(region: RegionStore): string Parameters region: RegionStore Returns string getWCSFromImagePos getWCSFromImagePos(posList: Point2D[]): WCSPoint2D[] Converts positions from image coordinates to WCS coordinates. Parameters posList: Point2D[] An array of positions in image coordinates. Returns WCSPoint2D[] An array of corresponding positions in WCS coordinates. publicgetWcsSizeInArcsec getWcsSizeInArcsec(size: Point2D): Point2D Parameters size: Point2D Returns Point2D incrementChannels incrementChannels(deltaChannel: number, deltaStokes: number, wrap?: boolean): void Parameters deltaChannel: number deltaStokes: number wrap: boolean = true Returns void onResizePreviewWidget onResizePreviewWidget(width: number, height: number): void Parameters width: number height: number Returns void publicremoveCatalogControlMap removeCatalogControlMap(frame: FrameStore): void Parameters frame: FrameStore Returns void publicremoveControlMap removeControlMap(frame: FrameStore): void Parameters frame: FrameStore Returns void removeMomentImage removeMomentImage(): void Returns void removePvImage removePvImage(): void Returns void removeSecondaryRasterScalingImage removeSecondaryRasterScalingImage(frame: FrameStore): void Parameters frame: FrameStore Returns void removeSecondarySpatialImage removeSecondarySpatialImage(frame: FrameStore): void Parameters frame: FrameStore Returns void removeSecondarySpectralImage removeSecondarySpectralImage(frame: FrameStore): void Parameters frame: FrameStore Returns void resetFitting resetFitting(): void Returns void resetMomentRequestState resetMomentRequestState(): void Returns void resetPvRequestState resetPvRequestState(): void Returns void setAnimationRange setAnimationRange(range: NumberRange): void Parameters range: NumberRange Returns void setCenter setCenter(x: number, y: number, enableSpatialTransform?: boolean): boolean Parameters x: number y: number enableSpatialTransform: boolean = true Returns boolean setCenterWcs setCenterWcs(wcsX: string, wcsY: string): boolean Parameters wcsX: string wcsY: string Returns boolean setChannel setChannel(channel: number, recursive?: boolean): void Sets the channel of the frame. Parameters channel: number The channel index to set. recursive: boolean = true Whether to update channels of spectrally matched frames. Returns void setChannels setChannels(channel: number, stokes: number, recursive: boolean): void Sets the channel and the Stokes parameter of the frame. Parameters channel: number The channel index to set. stokes: number The Stokes parameter to set. Standard polarization requires the polarization index (eg. “I”: 0). Computed polarization requires the polarization value (eg. “Pangle”: 17). recursive: boolean Whether to update channels of spectrally matched frames. Returns void setColorbarLabelCustomText setColorbarLabelCustomText(text: string): void Parameters text: string Returns void setCursorPosition setCursorPosition(posImageSpace: Point2D): void Parameters posImageSpace: Point2D Returns void setCursorValue setCursorValue(position: Point2D, channel: number, value: number): void Parameters position: Point2D channel: number value: number Returns void setFittingLog setFittingLog(log: string): void Parameters log: string Returns void setFittingResult setFittingResult(results: string): void Parameters results: string Returns void setFittingResultRegionParams setFittingResultRegionParams(params: { points: Point2D[]; rotation: number }[]): void Parameters params: { points: Point2D[]; rotation: number }[] Returns void setFrameInfo setFrameInfo(frameInfo: FrameInfo): void Parameters frameInfo: FrameInfo Returns void setGeneratedPVRegionId setGeneratedPVRegionId(regionId: number): void Parameters regionId: number Returns void setIntensityUnit setIntensityUnit(intensityUnitStr: string): void Parameters intensityUnitStr: string Returns void setIsPreview setIsPreview(isPreview: boolean): void Parameters isPreview: boolean Returns void setIsRequestPVCancelling setIsRequestPVCancelling(val: boolean): void Parameters val: boolean Returns void setIsRequestingMoments setIsRequestingMoments(val: boolean): void Parameters val: boolean Returns void setIsRequestingPV setIsRequestingPV(val: boolean): void Parameters val: boolean Returns void setPreviewPVRasterData setPreviewPVRasterData(previewPVRasterData: Float32Array, skipUpdatePreviewData?: boolean): void Parameters previewPVRasterData: Float32Array skipUpdatePreviewData: boolean = false Returns void setRasterScalingReference setRasterScalingReference(frame: FrameStore): void Parameters frame: FrameStore Returns void setSpatialReference setSpatialReference(frame: FrameStore): boolean Parameters frame: FrameStore Returns boolean setSpectralCoordinate setSpectralCoordinate(coordStr: string, alignSpectralSiblings?: boolean): boolean Parameters coordStr: string alignSpectralSiblings: boolean = true Returns boolean setSpectralCoordinateSecondary setSpectralCoordinateSecondary(coordStr: string, alignSpectralSiblings?: boolean): boolean Parameters coordStr: string alignSpectralSiblings: boolean = true Returns boolean setSpectralCoordinateToRadioVelocity setSpectralCoordinateToRadioVelocity(): void Returns void setSpectralReference setSpectralReference(frame: FrameStore): boolean Parameters frame: FrameStore Returns boolean setSpectralSystem setSpectralSystem(spectralSystem: SpectralSystem, alignSpectralSiblings?: boolean): boolean Parameters spectralSystem: SpectralSystem alignSpectralSiblings: boolean = true Returns boolean setStokes setStokes(polarization: POLARIZATIONS, recursive?: boolean): void Sets the Stokes parameter of the frame. Required for carta-python. If the provided polarization value is not found in the frame, the function will return without making any changes. Parameters polarization: POLARIZATIONS The polarization value. recursive: boolean = false Whether to update channels of spectrally matched frames. Returns void setStokesByIndex setStokesByIndex(polarizationIndex: number, recursive?: boolean): void Sets the Stokes parameter of the frame by the index. If the provided polarizationIndex is not a valid index or exceeds the range, the function will return without making any changes. Parameters polarizationIndex: number The index of the polarization value. recursive: boolean = false Whether to update channels of spectrally matched frames. Returns void setStokesFiles setStokesFiles(stokesFiles: StokesFile[]): void Parameters stokesFiles: StokesFile[] Returns void setTitleCustomText setTitleCustomText(text: string): void Parameters text: string Returns void setZoom setZoom(zoom: number, absolute?: boolean): void Parameters zoom: number absolute: boolean = false Returns void startMoving startMoving(): void Returns void updateCursorRegion updateCursorRegion(pos: Point2D): void Parameters pos: Point2D Returns void updateFromContourData updateFromContourData(contourImageData: ContourImageData): void Parameters contourImageData: ContourImageData Returns void updateFromVectorOverlayData updateFromVectorOverlayData(vectorOverlayData: IVectorOverlayTileData): void Parameters vectorOverlayData: IVectorOverlayTileData Returns void publicupdatePreviewData updatePreviewData(previewData: PvPreviewData): Generator&lt;void, void, unknown&gt; Parameters previewData: PvPreviewData Returns Generator&lt;void, void, unknown&gt; updateRequestingMomentsProgress updateRequestingMomentsProgress(progress: number): void Parameters progress: number Returns void updateRequestingPvProgress updateRequestingPvProgress(progress: number): void Parameters progress: number Returns void publicupdateSpectralVsDirectionWcs updateSpectralVsDirectionWcs(): void Returns void zoomToPoint zoomToPoint(x: number, y: number, zoom: number, absolute?: boolean): void Parameters x: number y: number zoom: number absolute: boolean = false Returns void zoomToSizeX zoomToSizeX(x: number): boolean Parameters x: number Returns boolean zoomToSizeXWcs zoomToSizeXWcs(wcsX: string): boolean Parameters wcsX: string Returns boolean zoomToSizeY zoomToSizeY(y: number): boolean Parameters y: number Returns boolean zoomToSizeYWcs zoomToSizeYWcs(wcsY: string): boolean Parameters wcsY: string Returns boolean","keywords":""},{"title":"LayoutStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/LayoutStore","content":"LayoutStore Index Properties currentLayoutNamedockedLayoutoldLayoutNamesupportsServerToasterTimeout Accessors allLayoutNamesisSavenumSavedLayoutsorderedLayoutNamesuserLayoutNamesInstance Methods applyLayoutdeleteLayoutfetchLayoutslayoutExistsrenameLayoutsaveLayoutsetLayoutToBeSavedsetOldLayoutName Properties currentLayoutName currentLayoutName: string dockedLayout dockedLayout: GoldenLayout oldLayoutName oldLayoutName: string supportsServer supportsServer: boolean publicstaticreadonlyToasterTimeout ToasterTimeout: 1500 = 1500 Accessors allLayoutNames get allLayoutNames(): string[] Returns string[] isSave get isSave(): boolean Returns boolean numSavedLayouts get numSavedLayouts(): number Returns number orderedLayoutNames get orderedLayoutNames(): string[] Returns string[] userLayoutNames get userLayoutNames(): string[] Returns string[] staticInstance get Instance(): LayoutStore Returns LayoutStore Methods applyLayout applyLayout(layoutName: string): boolean Parameters layoutName: string Returns boolean deleteLayout deleteLayout(layoutName: string): Generator&lt;Promise&lt;any&gt;, void, unknown&gt; Parameters layoutName: string Returns Generator&lt;Promise&lt;any&gt;, void, unknown&gt; fetchLayouts fetchLayouts(): Generator&lt;Promise&lt;{}&gt;, void, unknown&gt; Returns Generator&lt;Promise&lt;{}&gt;, void, unknown&gt; publiclayoutExists layoutExists(layoutName: string): boolean Parameters layoutName: string Returns boolean renameLayout renameLayout(oldName: string, newName: string): Generator&lt;Promise&lt;any&gt;, void, unknown&gt; Parameters oldName: string newName: string Returns Generator&lt;Promise&lt;any&gt;, void, unknown&gt; saveLayout saveLayout(): Generator&lt;Promise&lt;boolean&gt;, void, unknown&gt; Returns Generator&lt;Promise&lt;boolean&gt;, void, unknown&gt; publicsetLayoutToBeSaved setLayoutToBeSaved(layoutName: string): void Parameters layoutName: string Returns void publicsetOldLayoutName setOldLayoutName(oldLayoutName: string): void Parameters oldLayoutName: string Returns void","keywords":""},{"title":"LogEntry","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/LogEntry","content":"LogEntry Index Constructors constructor Properties levelmessagetagstitle Constructors constructor new LogEntry(): LogEntry Returns LogEntry Properties level level: ErrorSeverity message message: string tags tags: string[] title title: string","keywords":""},{"title":"OverlayAxisSettings","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/OverlayAxisSettings","content":"OverlayAxisSettings Index Constructors constructor Properties colorcustomColorvisiblewidth Accessors styleString Methods setColorsetCustomColorsetVisiblesetWidth Constructors constructor new OverlayAxisSettings(): OverlayAxisSettings Returns OverlayAxisSettings Properties color color: string customColor customColor: boolean visible visible: boolean width width: number Accessors styleString get styleString(): string Returns string Methods setColor setColor(color: string): void Parameters color: string Returns void setCustomColor setCustomColor(customColor: boolean): void Parameters customColor: boolean Returns void setVisible setVisible(visible?: boolean): void Parameters visible: boolean = true Returns void setWidth setWidth(width: number): void Parameters width: number Returns void","keywords":""},{"title":"LogStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/LogStore","content":"LogStore Index Properties hiddenTagslogEntrieslogLevellogLimit Accessors newestMsgInstance Methods addDebugaddErroraddInfoaddLogaddWarningclearLogsetLeveltoggleTag Properties hiddenTags hiddenTags: string[] logEntries logEntries: LogEntry[] logLevel logLevel: ErrorSeverity readonlylogLimit logLimit: 1000 = 1000 Accessors newestMsg get newestMsg(): string Returns string staticInstance get Instance(): LogStore Returns LogStore Methods addDebug addDebug(message: string, tags?: string[], title?: string): void Parameters message: string tags: string[] = [] title: string = &quot;&quot; Returns void addError addError(message: string, tags?: string[], title?: string): void Parameters message: string tags: string[] = [] title: string = &quot;&quot; Returns void addInfo addInfo(message: string, tags?: string[], title?: string): void Parameters message: string tags: string[] = [] title: string = &quot;&quot; Returns void addLog addLog(entry: LogEntry): void Parameters entry: LogEntry Returns void addWarning addWarning(message: string, tags?: string[], title?: string): void Parameters message: string tags: string[] = [] title: string = &quot;&quot; Returns void clearLog clearLog(): void Returns void setLevel setLevel(level: ErrorSeverity): void Parameters level: ErrorSeverity Returns void toggleTag toggleTag(tag: string): void Parameters tag: string Returns void","keywords":""},{"title":"OverlayBeamSettings","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/OverlayBeamSettings","content":"OverlayBeamSettings Index Constructors constructor Properties selectedFileIdsettingsForDisplay Accessors isSelectedFrameValid Methods setSelectedFrame Constructors constructor new OverlayBeamSettings(): OverlayBeamSettings Returns OverlayBeamSettings Properties selectedFileId selectedFileId: number settingsForDisplay settingsForDisplay: OverlayBeamStore Accessors isSelectedFrameValid get isSelectedFrameValid(): boolean Returns boolean Methods setSelectedFrame setSelectedFrame(selectedFileId: number): void Parameters selectedFileId: number Returns void","keywords":""},{"title":"OverlayBeamStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/OverlayBeamStore","content":"OverlayBeamStore Index Constructors constructor Properties colorshiftXshiftYtypevisiblewidth Methods setColorsetShiftXsetShiftYsetTypesetVisiblesetWidth Constructors constructor new OverlayBeamStore(): OverlayBeamStore Returns OverlayBeamStore Properties color color: string shiftX shiftX: number shiftY shiftY: number type type: BeamType visible visible: boolean width width: number Methods setColor setColor(color: string): void Parameters color: string Returns void setShiftX setShiftX(shift: number): void Parameters shift: number Returns void setShiftY setShiftY(shift: number): void Parameters shift: number Returns void setType setType(type: BeamType): void Parameters type: BeamType Returns void setVisible setVisible(visible: boolean): void Parameters visible: boolean Returns void setWidth setWidth(width: number): void Parameters width: number Returns void","keywords":""},{"title":"OverlayBorderSettings","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/OverlayBorderSettings","content":"OverlayBorderSettings Index Constructors constructor Properties colorcustomColorvisiblewidth Accessors styleString Methods setColorsetCustomColorsetVisiblesetWidth Constructors constructor new OverlayBorderSettings(): OverlayBorderSettings Returns OverlayBorderSettings Properties color color: string customColor customColor: boolean visible visible: boolean width width: number Accessors styleString get styleString(): string Returns string Methods setColor setColor(color: string): void Parameters color: string Returns void setCustomColor setCustomColor(customColor: boolean): void Parameters customColor: boolean Returns void setVisible setVisible(visible?: boolean): void Parameters visible: boolean = true Returns void setWidth setWidth(width: number): void Parameters width: number Returns void","keywords":""},{"title":"OverlayGlobalSettings","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/OverlayGlobalSettings","content":"OverlayGlobalSettings Index Constructors constructor Properties colordefaultSystemlabelTypesystemtolerancevalidWcs Accessors explicitSystem Methods setColorsetDefaultSystemsetLabelTypesetSystemsetTolerancesetValidWcsstyleString Constructors constructor new OverlayGlobalSettings(): OverlayGlobalSettings Returns OverlayGlobalSettings Properties color color: string defaultSystem defaultSystem: SystemType labelType labelType: LabelType system system: SystemType tolerance tolerance: number validWcs validWcs: boolean Accessors explicitSystem get explicitSystem(): SystemType Returns SystemType Methods setColor setColor(color: string): void Parameters color: string Returns void setDefaultSystem setDefaultSystem(system: SystemType): void Parameters system: SystemType Returns void setLabelType setLabelType(labelType: LabelType): void Parameters labelType: LabelType Returns void setSystem setSystem(system: SystemType): void Parameters system: SystemType Returns void setTolerance setTolerance(tolerance: number): void Parameters tolerance: number Returns void setValidWcs setValidWcs(validWcs: boolean): void Parameters validWcs: boolean Returns void publicstyleString styleString(frame?: FrameStore): string Parameters optionalframe: FrameStore Returns string","keywords":""},{"title":"OverlayGridSettings","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/OverlayGridSettings","content":"OverlayGridSettings Index Constructors constructor Properties colorcustomColorcustomGapgapXgapYvisiblewidth Accessors styleString Methods setColorsetCustomColorsetCustomGapsetGapXsetGapYsetVisiblesetWidth Constructors constructor new OverlayGridSettings(): OverlayGridSettings Returns OverlayGridSettings Properties color color: string customColor customColor: boolean customGap customGap: boolean gapX gapX: number gapY gapY: number visible visible: boolean width width: number Accessors styleString get styleString(): string Returns string Methods setColor setColor(color: string): void Parameters color: string Returns void setCustomColor setCustomColor(customColor: boolean): void Parameters customColor: boolean Returns void setCustomGap setCustomGap(customGap?: boolean): void Parameters customGap: boolean = true Returns void setGapX setGapX(gap: number): void Parameters gap: number Returns void setGapY setGapY(gap: number): void Parameters gap: number Returns void setVisible setVisible(visible?: boolean): void Parameters visible: boolean = true Returns void setWidth setWidth(width: number): void Parameters width: number Returns void","keywords":""},{"title":"OverlayColorbarSettings","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/OverlayColorbarSettings","content":"OverlayColorbarSettings Index Constructors constructor Properties borderColorborderCustomColorborderVisibleborderWidthcolorcustomColorgradientVisibleinteractivelabelColorlabelCustomColorlabelCustomTextlabelFontlabelFontSizelabelRotationlabelVisiblenumberColornumberCustomColornumberCustomPrecisionnumberFontnumberFontSizenumberPrecisionnumberRotationnumberVisibleoffsetpositiontickColortickCustomColortickDensitytickLentickVisibletickWidthvisiblewidth Accessors heightlabelWidthnumberWidthrightBorderPosstageWidthtextGaptickNumtotalWidthyOffset Methods setBorderColorsetBorderCustomColorsetBorderVisiblesetBorderWidthsetColorsetCustomColorsetGradientVisiblesetInteractivesetLabelColorsetLabelCustomColorsetLabelCustomTextsetLabelFontsetLabelFontSizesetLabelRotationsetLabelVisiblesetNumberColorsetNumberCustomColorsetNumberCustomPrecisionsetNumberFontsetNumberFontSizesetNumberPrecisionsetNumberRotationsetNumberVisiblesetOffsetsetPositionsetTickColorsetTickCustomColorsetTickDensitysetTickLensetTickVisiblesetTickWidthsetVisiblesetWidth Constructors constructor new OverlayColorbarSettings(): OverlayColorbarSettings Returns OverlayColorbarSettings Properties borderColor borderColor: string borderCustomColor borderCustomColor: boolean borderVisible borderVisible: boolean borderWidth borderWidth: number color color: string customColor customColor: boolean gradientVisible gradientVisible: boolean interactive interactive: boolean labelColor labelColor: string labelCustomColor labelCustomColor: boolean labelCustomText labelCustomText: boolean labelFont labelFont: number labelFontSize labelFontSize: number labelRotation labelRotation: number labelVisible labelVisible: boolean numberColor numberColor: string numberCustomColor numberCustomColor: boolean numberCustomPrecision numberCustomPrecision: boolean numberFont numberFont: number numberFontSize numberFontSize: number numberPrecision numberPrecision: number numberRotation numberRotation: number numberVisible numberVisible: boolean offset offset: number position position: string tickColor tickColor: string tickCustomColor tickCustomColor: boolean tickDensity tickDensity: number tickLen tickLen: number tickVisible tickVisible: boolean tickWidth tickWidth: number visible visible: boolean width width: number Accessors height get height(): (frame?: FrameStore) =&gt; number Returns (frame?: FrameStore) =&gt; number (frame?: FrameStore): number Parameters optionalframe: FrameStore Returns number labelWidth get labelWidth(): number Returns number numberWidth get numberWidth(): number Returns number rightBorderPos get rightBorderPos(): number Returns number stageWidth get stageWidth(): number Returns number textGap get textGap(): number Returns number tickNum get tickNum(): (frame?: FrameStore) =&gt; number Returns (frame?: FrameStore) =&gt; number (frame?: FrameStore): number Parameters optionalframe: FrameStore Returns number totalWidth get totalWidth(): number Returns number yOffset get yOffset(): number Returns number Methods setBorderColor setBorderColor(color: string): void Parameters color: string Returns void setBorderCustomColor setBorderCustomColor(customColor: boolean): void Parameters customColor: boolean Returns void setBorderVisible setBorderVisible(visible: boolean): void Parameters visible: boolean Returns void setBorderWidth setBorderWidth(width: number): void Parameters width: number Returns void setColor setColor(color: string): void Parameters color: string Returns void setCustomColor setCustomColor(customColor: boolean): void Parameters customColor: boolean Returns void setGradientVisible setGradientVisible(visible: boolean): void Parameters visible: boolean Returns void setInteractive setInteractive(interactive: boolean): void Parameters interactive: boolean Returns void setLabelColor setLabelColor(color: string): void Parameters color: string Returns void setLabelCustomColor setLabelCustomColor(customColor: boolean): void Parameters customColor: boolean Returns void setLabelCustomText setLabelCustomText(customText: boolean): void Parameters customText: boolean Returns void setLabelFont setLabelFont(font: number): void Parameters font: number Returns void setLabelFontSize setLabelFontSize(fontSize: number): void Parameters fontSize: number Returns void setLabelRotation setLabelRotation(rotation: number): void Parameters rotation: number Returns void setLabelVisible setLabelVisible(visible: boolean): void Parameters visible: boolean Returns void setNumberColor setNumberColor(color: string): void Parameters color: string Returns void setNumberCustomColor setNumberCustomColor(customColor: boolean): void Parameters customColor: boolean Returns void setNumberCustomPrecision setNumberCustomPrecision(customPrecision: boolean): void Parameters customPrecision: boolean Returns void setNumberFont setNumberFont(font: number): void Parameters font: number Returns void setNumberFontSize setNumberFontSize(fontSize: number): void Parameters fontSize: number Returns void setNumberPrecision setNumberPrecision(precision: number): void Parameters precision: number Returns void setNumberRotation setNumberRotation(rotation: number): void Parameters rotation: number Returns void setNumberVisible setNumberVisible(visible: boolean): void Parameters visible: boolean Returns void setOffset setOffset(offset: number): void Parameters offset: number Returns void setPosition setPosition(position: string): void Parameters position: string Returns void setTickColor setTickColor(color: string): void Parameters color: string Returns void setTickCustomColor setTickCustomColor(customColor: boolean): void Parameters customColor: boolean Returns void setTickDensity setTickDensity(density: number): void Parameters density: number Returns void setTickLen setTickLen(len: number): void Parameters len: number Returns void setTickVisible setTickVisible(visible: boolean): void Parameters visible: boolean Returns void setTickWidth setTickWidth(width: number): void Parameters width: number Returns void setVisible setVisible(visible: boolean): void Parameters visible: boolean Returns void setWidth setWidth(width: number): void Parameters width: number Returns void","keywords":""},{"title":"OverlayLabelSettings","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/OverlayLabelSettings","content":"OverlayLabelSettings Index Constructors constructor Properties colorcustomColorcustomLabelXcustomLabelYcustomTextfontfontSizehiddenvisible Accessors showstyleString Methods setColorsetCustomColorsetCustomLabelXsetCustomLabelYsetCustomTextsetFontsetFontSizesetHiddensetVisible Constructors constructor new OverlayLabelSettings(): OverlayLabelSettings Returns OverlayLabelSettings Properties color color: string customColor customColor: boolean customLabelX customLabelX: string customLabelY customLabelY: string customText customText: boolean font font: number fontSize fontSize: number hidden hidden: boolean visible visible: boolean Accessors show get show(): boolean Returns boolean styleString get styleString(): string Returns string Methods setColor setColor(color: string): void Parameters color: string Returns void setCustomColor setCustomColor(customColor: boolean): void Parameters customColor: boolean Returns void setCustomLabelX setCustomLabelX(label: string): void Parameters label: string Returns void setCustomLabelY setCustomLabelY(label: string): void Parameters label: string Returns void setCustomText setCustomText(val: boolean): void Parameters val: boolean Returns void setFont setFont(font: number): void Parameters font: number Returns void setFontSize setFontSize(fontSize: number): void Parameters fontSize: number Returns void setHidden setHidden(hidden: boolean): void Parameters hidden: boolean Returns void setVisible setVisible(visible?: boolean): void Parameters visible: boolean = true Returns void","keywords":""},{"title":"OverlayNumberSettings","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/OverlayNumberSettings","content":"OverlayNumberSettings Index Constructors constructor Properties colorcustomColorcustomFormatcustomPrecisiondefaultFormatXdefaultFormatYfontfontSizeformatXformatYhiddenprecisionvalidWcsvisible Accessors formatStringXformatStringYformatTypeXformatTypeYshowstyleString Methods cursorFormatStringXcursorFormatStringYsetColorsetCustomColorsetCustomFormatsetCustomPrecisionsetDefaultFormatXsetDefaultFormatYsetFontsetFontSizesetFormatXsetFormatYsetHiddensetPrecisionsetValidWcssetVisible Constructors constructor new OverlayNumberSettings(): OverlayNumberSettings Returns OverlayNumberSettings Properties color color: string customColor customColor: boolean customFormat customFormat: boolean customPrecision customPrecision: boolean defaultFormatX defaultFormatX: NumberFormatType defaultFormatY defaultFormatY: NumberFormatType font font: number fontSize fontSize: number formatX formatX: NumberFormatType formatY formatY: NumberFormatType hidden hidden: boolean precision precision: number validWcs validWcs: boolean visible visible: boolean Accessors formatStringX get formatStringX(): string Returns string formatStringY get formatStringY(): string Returns string formatTypeX get formatTypeX(): NumberFormatType Returns NumberFormatType formatTypeY get formatTypeY(): NumberFormatType Returns NumberFormatType show get show(): boolean Returns boolean styleString get styleString(): string Returns string Methods cursorFormatStringX cursorFormatStringX(precision: number): string Parameters precision: number Returns string cursorFormatStringY cursorFormatStringY(precision: number): string Parameters precision: number Returns string setColor setColor(color: string): void Parameters color: string Returns void setCustomColor setCustomColor(customColor: boolean): void Parameters customColor: boolean Returns void setCustomFormat setCustomFormat(customFormat: boolean): void Parameters customFormat: boolean Returns void setCustomPrecision setCustomPrecision(customPrecision: boolean): void Parameters customPrecision: boolean Returns void setDefaultFormatX setDefaultFormatX(format: NumberFormatType): void Parameters format: NumberFormatType Returns void setDefaultFormatY setDefaultFormatY(format: NumberFormatType): void Parameters format: NumberFormatType Returns void setFont setFont(font: number): void Parameters font: number Returns void setFontSize setFontSize(fontSize: number): void Parameters fontSize: number Returns void setFormatX setFormatX(format: NumberFormatType): void Parameters format: NumberFormatType Returns void setFormatY setFormatY(format: NumberFormatType): void Parameters format: NumberFormatType Returns void setHidden setHidden(hidden: boolean): void Parameters hidden: boolean Returns void setPrecision setPrecision(precision: number): void Parameters precision: number Returns void setValidWcs setValidWcs(validWcs: boolean): void Parameters validWcs: boolean Returns void setVisible setVisible(visible?: boolean): void Parameters visible: boolean = true Returns void","keywords":""},{"title":"OverlayStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/OverlayStore","content":"OverlayStore Index Properties axesbeambordercolorbarfullViewHeightfullViewWidthglobalgridlabelsnumberstickstitle Accessors basecolorbarHoverInfoHeightcumulativeLabelGapdefaultGaplabelWidthlabelsHiddennumberWidthpaddingpaddingBottompaddingLeftpaddingRightpaddingToppreviewRenderHeightpreviewRenderWidthrenderHeightrenderWidthshowNumberstitleGapviewHeightviewWidthInstance Methods minSizesetDefaultsFromASTsetFormatsFromSystemsetViewDimensionstyleStringtoggleLabels Properties axes axes: OverlayAxisSettings beam beam: OverlayBeamSettings border border: OverlayBorderSettings colorbar colorbar: OverlayColorbarSettings fullViewHeight fullViewHeight: number fullViewWidth fullViewWidth: number global global: OverlayGlobalSettings grid grid: OverlayGridSettings labels labels: OverlayLabelSettings numbers numbers: OverlayNumberSettings ticks ticks: OverlayTickSettings title title: OverlayTitleSettings Accessors base get base(): number Returns number colorbarHoverInfoHeight get colorbarHoverInfoHeight(): number Returns number cumulativeLabelGap get cumulativeLabelGap(): number Returns number defaultGap get defaultGap(): number Returns number labelWidth get labelWidth(): number Returns number labelsHidden get labelsHidden(): boolean Returns boolean numberWidth get numberWidth(): number Returns number padding get padding(): Padding Returns Padding paddingBottom get paddingBottom(): number Returns number paddingLeft get paddingLeft(): number Returns number paddingRight get paddingRight(): number Returns number paddingTop get paddingTop(): number Returns number previewRenderHeight get previewRenderHeight(): (viewHeight: number) =&gt; number Returns (viewHeight: number) =&gt; number (viewHeight: number): number Parameters viewHeight: number Returns number previewRenderWidth get previewRenderWidth(): (viewWidth: number) =&gt; number Returns (viewWidth: number) =&gt; number (viewWidth: number): number Parameters viewWidth: number Returns number renderHeight get renderHeight(): number Returns number renderWidth get renderWidth(): number Returns number showNumbers get showNumbers(): boolean Returns boolean titleGap get titleGap(): number Returns number viewHeight get viewHeight(): number Returns number viewWidth get viewWidth(): number Returns number staticInstance get Instance(): OverlayStore Returns OverlayStore Methods minSize minSize(frame?: FrameStore): number Parameters optionalframe: FrameStore Returns number setDefaultsFromAST setDefaultsFromAST(frame: FrameStore): void Parameters frame: FrameStore Returns void setFormatsFromSystem setFormatsFromSystem(): void Returns void setViewDimension setViewDimension(width: number, height: number): void Parameters width: number height: number Returns void publicstyleString styleString(frame?: FrameStore): string Parameters optionalframe: FrameStore Returns string toggleLabels toggleLabels(): void Returns void","keywords":""},{"title":"OverlayTickSettings","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/OverlayTickSettings","content":"OverlayTickSettings Index Constructors constructor Properties colorcustomColorcustomDensitydensityXdensityYdrawAlllengthmajorLengthwidth Accessors styleString Methods setColorsetCustomColorsetCustomDensitysetDensityXsetDensityYsetDrawAllsetLengthsetMajorLengthsetWidth Constructors constructor new OverlayTickSettings(): OverlayTickSettings Returns OverlayTickSettings Properties color color: string customColor customColor: boolean customDensity customDensity: boolean densityX densityX: number densityY densityY: number drawAll drawAll: boolean length length: number majorLength majorLength: number width width: number Accessors styleString get styleString(): string Returns string Methods setColor setColor(color: string): void Parameters color: string Returns void setCustomColor setCustomColor(customColor: boolean): void Parameters customColor: boolean Returns void setCustomDensity setCustomDensity(customDensity?: boolean): void Parameters customDensity: boolean = true Returns void setDensityX setDensityX(density: number): void Parameters density: number Returns void setDensityY setDensityY(density: number): void Parameters density: number Returns void setDrawAll setDrawAll(drawAll?: boolean): void Parameters drawAll: boolean = true Returns void setLength setLength(length: number): void Parameters length: number Returns void setMajorLength setMajorLength(length: number): void Parameters length: number Returns void setWidth setWidth(width: number): void Parameters width: number Returns void","keywords":""},{"title":"OverlayTitleSettings","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/OverlayTitleSettings","content":"OverlayTitleSettings Index Constructors constructor Properties colorcustomColorcustomTextfontfontSizehiddenvisible Accessors showstyleString Methods setColorsetCustomColorsetCustomTextsetFontsetFontSizesetHiddensetVisible Constructors constructor new OverlayTitleSettings(): OverlayTitleSettings Returns OverlayTitleSettings Properties color color: string customColor customColor: boolean customText customText: boolean font font: number fontSize fontSize: number hidden hidden: boolean visible visible: boolean Accessors show get show(): boolean Returns boolean styleString get styleString(): string Returns string Methods setColor setColor(color: string): void Parameters color: string Returns void setCustomColor setCustomColor(customColor: boolean): void Parameters customColor: boolean Returns void setCustomText setCustomText(customTitle: boolean): void Parameters customTitle: boolean Returns void setFont setFont(font: number): void Parameters font: number Returns void setFontSize setFontSize(fontSize: number): void Parameters fontSize: number Returns void setHidden setHidden(hidden: boolean): void Parameters hidden: boolean Returns void setVisible setVisible(visible?: boolean): void Parameters visible: boolean = true Returns void","keywords":""},{"title":"Padding","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/Padding","content":"Padding Index Constructors constructor Properties bottomleftrighttop Constructors constructor new Padding(): Padding Returns Padding Properties bottom bottom: number left left: number right right: number top top: number","keywords":""},{"title":"PointAnnotationStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/PointAnnotationStore","content":"PointAnnotationStore Hierarchy RegionStore PointAnnotationStore Index Constructors constructor Properties activeFramecolorcontrolPointscoordinatecreatingdashLengtheditingfileIdisSimplePolygonlineRegionSampleWidthlineWidthlockedmodifiedTimestampnamepointShapepointWidthregionIdregionTyperotationAVAILABLE_ANNOTATION_TYPESAVAILABLE_REGION_TYPESMAX_DASH_LENGTHMAX_LINE_WIDTHMIN_LINE_WIDTHTARGET_VERTEX_COUNT Accessors boundingBoxboundingBoxAreacenterisAnnotationisClosedRegionisPreviewCutisTemporaryisValidnameStringregionPropertiessizewcsSize Methods beginCreatingbeginEditingendCreatingendEditingfocusCentergetAnnotationStylesgetAnnotationStylesForExportgetRegionApproximationinitializeStylessetCentersetColorsetControlPointsetControlPointssetCoordinatesetDashLengthsetLineWidthsetLockedsetNamesetPointShapesetPointWidthsetRegionIdsetRotationsetSizetoggleLockGetRegionPropertiesIsRegionCustomIconIsRegionDashLengthValidIsRegionLineWidthValidIsRegionTypeValidRegionIconStringRegionTypeString Constructors constructor new PointAnnotationStore(backendService: BackendService, fileId: number, activeFrame: FrameStore, controlPoints: Point2D[], regionType: RegionType, regionId?: number, rotation?: number, name?: string, color?: string, lineWidth?: number, dashLength?: number, pointShape?: PointAnnotationShape, pointWidth?: number): PointAnnotationStore Overrides RegionStore.constructor Parameters backendService: BackendService fileId: number activeFrame: FrameStore controlPoints: Point2D[] regionType: RegionType regionId: number = -1 rotation: number = 0 name: string = &quot;&quot; color: string = Colors.TURQUOISE5 lineWidth: number = 2 dashLength: number = 0 pointShape: PointAnnotationShape = CARTA.PointAnnotationShape.SQUARE pointWidth: number = 6 Returns PointAnnotationStore Properties activeFrame activeFrame: FrameStore Inherited from RegionStore.activeFrame color color: string Inherited from RegionStore.color controlPoints controlPoints: Point2D[] Inherited from RegionStore.controlPoints coordinate coordinate: CoordinateMode Inherited from RegionStore.coordinate creating creating: boolean Inherited from RegionStore.creating dashLength dashLength: number Inherited from RegionStore.dashLength editing editing: boolean Inherited from RegionStore.editing readonlyfileId fileId: number Inherited from RegionStore.fileId isSimplePolygon isSimplePolygon: boolean Inherited from RegionStore.isSimplePolygon lineRegionSampleWidth lineRegionSampleWidth: number = 3 Inherited from RegionStore.lineRegionSampleWidth lineWidth lineWidth: number Inherited from RegionStore.lineWidth locked locked: boolean = false Inherited from RegionStore.locked publicmodifiedTimestamp modifiedTimestamp: number Inherited from RegionStore.modifiedTimestamp name name: string Inherited from RegionStore.name pointShape pointShape: PointAnnotationShape pointWidth pointWidth: number regionId regionId: number Inherited from RegionStore.regionId regionType regionType: RegionType Inherited from RegionStore.regionType rotation rotation: number Inherited from RegionStore.rotation staticreadonlyAVAILABLE_ANNOTATION_TYPES AVAILABLE_ANNOTATION_TYPES: Map&lt;RegionType, string&gt; = ... Inherited from RegionStore.AVAILABLE_ANNOTATION_TYPES staticreadonlyAVAILABLE_REGION_TYPES AVAILABLE_REGION_TYPES: Map&lt;RegionType, string&gt; = ... Inherited from RegionStore.AVAILABLE_REGION_TYPES staticreadonlyMAX_DASH_LENGTH MAX_DASH_LENGTH: 50 = 50 Inherited from RegionStore.MAX_DASH_LENGTH staticreadonlyMAX_LINE_WIDTH MAX_LINE_WIDTH: 10 = 10 Inherited from RegionStore.MAX_LINE_WIDTH staticreadonlyMIN_LINE_WIDTH MIN_LINE_WIDTH: 0.5 = 0.5 Inherited from RegionStore.MIN_LINE_WIDTH staticreadonlyTARGET_VERTEX_COUNT TARGET_VERTEX_COUNT: 200 = 200 Inherited from RegionStore.TARGET_VERTEX_COUNT Accessors boundingBox get boundingBox(): Point2D Inherited from RegionStore.boundingBox Returns Point2D boundingBoxArea get boundingBoxArea(): number Inherited from RegionStore.boundingBoxArea Returns number center get center(): Point2D Inherited from RegionStore.center Returns Point2D isAnnotation get isAnnotation(): boolean Inherited from RegionStore.isAnnotation Returns boolean isClosedRegion get isClosedRegion(): boolean Inherited from RegionStore.isClosedRegion Returns boolean isPreviewCut get isPreviewCut(): boolean Inherited from RegionStore.isPreviewCut Returns boolean isTemporary get isTemporary(): boolean Inherited from RegionStore.isTemporary Returns boolean isValid get isValid(): boolean Inherited from RegionStore.isValid Returns boolean nameString get nameString(): string Inherited from RegionStore.nameString Returns string regionProperties get regionProperties(): string Inherited from RegionStore.regionProperties Returns string size get size(): Point2D Inherited from RegionStore.size Returns Point2D wcsSize get wcsSize(): Point2D Inherited from RegionStore.wcsSize Returns Point2D Methods beginCreating beginCreating(): void Inherited from RegionStore.beginCreating Returns void beginEditing beginEditing(): void Inherited from RegionStore.beginEditing Returns void endCreating endCreating(): Generator&lt;Promise&lt;ISetRegionAck&gt;, void, unknown&gt; Inherited from RegionStore.endCreating Returns Generator&lt;Promise&lt;ISetRegionAck&gt;, void, unknown&gt; endEditing endEditing(): void Inherited from RegionStore.endEditing Returns void focusCenter focusCenter(): void Inherited from RegionStore.focusCenter Returns void publicgetAnnotationStyles getAnnotationStyles(): { pointShape: PointAnnotationShape; pointWidth: number } Returns { pointShape: PointAnnotationShape; pointWidth: number } pointShape: PointAnnotationShape pointWidth: number publicgetAnnotationStylesForExport getAnnotationStylesForExport(): { pointShape: PointAnnotationShape; pointWidth: number } Returns { pointShape: PointAnnotationShape; pointWidth: number } pointShape: PointAnnotationShape pointWidth: number publicgetRegionApproximation getRegionApproximation(astTransform: Mapping): Point2D[] | { eastApproximatePoints: number[]; northApproximatePoints: number[] } | { hypotenuseApproximatePoints: number[]; xApproximatePoints: number[]; yApproximatePoints: number[] } Inherited from RegionStore.getRegionApproximation Parameters astTransform: Mapping Returns Point2D[] | { eastApproximatePoints: number[]; northApproximatePoints: number[] } | { hypotenuseApproximatePoints: number[]; xApproximatePoints: number[]; yApproximatePoints: number[] } publicinitializeStyles initializeStyles(annotationStyles: { pointShape: PointAnnotationShape; pointWidth: number }): void Parameters annotationStyles: { pointShape: PointAnnotationShape; pointWidth: number } Returns void setCenter setCenter(p: Point2D, skipUpdate?: boolean): void Inherited from RegionStore.setCenter Parameters p: Point2D skipUpdate: boolean = false Returns void setColor setColor(color: string): void Inherited from RegionStore.setColor Parameters color: string Returns void setControlPoint setControlPoint(index: number, p: Point2D, skipUpdate?: boolean): void Inherited from RegionStore.setControlPoint Parameters index: number p: Point2D skipUpdate: boolean = false Returns void setControlPoints setControlPoints(points: Point2D[], skipUpdate?: boolean, shapeChanged?: boolean): void Inherited from RegionStore.setControlPoints Parameters points: Point2D[] skipUpdate: boolean = false shapeChanged: boolean = true Returns void setCoordinate setCoordinate(coordinate: CoordinateMode): void Inherited from RegionStore.setCoordinate Parameters coordinate: CoordinateMode Returns void setDashLength setDashLength(dashLength: number): void Inherited from RegionStore.setDashLength Parameters dashLength: number Returns void setLineWidth setLineWidth(lineWidth: number): void Inherited from RegionStore.setLineWidth Parameters lineWidth: number Returns void setLocked setLocked(locked: boolean): void Inherited from RegionStore.setLocked Parameters locked: boolean Returns void setName setName(name: string): void Inherited from RegionStore.setName Parameters name: string Returns void setPointShape setPointShape(pointShape: PointAnnotationShape): void Parameters pointShape: PointAnnotationShape Returns void setPointWidth setPointWidth(width: number): void Parameters width: number Returns void setRegionId setRegionId(id: number): void Inherited from RegionStore.setRegionId Parameters id: number Returns void setRotation setRotation(angle: number, skipUpdate?: boolean): void Inherited from RegionStore.setRotation Parameters angle: number skipUpdate: boolean = false Returns void setSize setSize(p: Point2D, skipUpdate?: boolean): void Inherited from RegionStore.setSize Parameters p: Point2D skipUpdate: boolean = false Returns void toggleLock toggleLock(): void Inherited from RegionStore.toggleLock Returns void publicstaticGetRegionProperties GetRegionProperties(regionType: RegionType, controlPoints: Point2D[], rotation: number): string Inherited from RegionStore.GetRegionProperties Parameters regionType: RegionType controlPoints: Point2D[] rotation: number Returns string publicstaticIsRegionCustomIcon IsRegionCustomIcon(regionType: RegionType): boolean Inherited from RegionStore.IsRegionCustomIcon Parameters regionType: RegionType Returns boolean publicstaticIsRegionDashLengthValid IsRegionDashLengthValid(regionDashLength: number): boolean Inherited from RegionStore.IsRegionDashLengthValid Parameters regionDashLength: number Returns boolean publicstaticIsRegionLineWidthValid IsRegionLineWidthValid(regionLineWidth: number): boolean Inherited from RegionStore.IsRegionLineWidthValid Parameters regionLineWidth: number Returns boolean publicstaticIsRegionTypeValid IsRegionTypeValid(regionType: RegionType): boolean Inherited from RegionStore.IsRegionTypeValid Parameters regionType: RegionType Returns boolean publicstaticRegionIconString RegionIconString(regionType: RegionType): any Inherited from RegionStore.RegionIconString Parameters regionType: RegionType Returns any publicstaticRegionTypeString RegionTypeString(regionType: RegionType): string Inherited from RegionStore.RegionTypeString Parameters regionType: RegionType Returns string","keywords":""},{"title":"ProfileFittingIndividualStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/ProfileFittingIndividualStore","content":"ProfileFittingIndividualStore Index Constructors constructor Properties ampcenterfwhmlockedAmplockedCenterlockedFwhmresultAmpresultAmpErrorresultCenterresultCenterErrorresultFwhmresultFwhmErrorresultIntegralresultIntegralError Accessors isReadyToFit Methods setAmpsetCentersetFwhmsetLockedAmpsetLockedCentersetLockedFwhmsetResultAmpsetResultAmpErrorsetResultCentersetResultCenterErrorsetResultFwhmsetResultFwhmErrorsetResultIntegralsetResultIntegralError Constructors constructor new ProfileFittingIndividualStore(): ProfileFittingIndividualStore Returns ProfileFittingIndividualStore Properties amp amp: number center center: number fwhm fwhm: number lockedAmp lockedAmp: boolean lockedCenter lockedCenter: boolean lockedFwhm lockedFwhm: boolean resultAmp resultAmp: number resultAmpError resultAmpError: number resultCenter resultCenter: number resultCenterError resultCenterError: number resultFwhm resultFwhm: number resultFwhmError resultFwhmError: number resultIntegral resultIntegral: number resultIntegralError resultIntegralError: number Accessors isReadyToFit get isReadyToFit(): boolean Returns boolean Methods setAmp setAmp(val: number): void Parameters val: number Returns void setCenter setCenter(val: number): void Parameters val: number Returns void setFwhm setFwhm(val: number): void Parameters val: number Returns void setLockedAmp setLockedAmp(val: boolean): void Parameters val: boolean Returns void setLockedCenter setLockedCenter(val: boolean): void Parameters val: boolean Returns void setLockedFwhm setLockedFwhm(val: boolean): void Parameters val: boolean Returns void setResultAmp setResultAmp(val: number): void Parameters val: number Returns void setResultAmpError setResultAmpError(val: number): void Parameters val: number Returns void setResultCenter setResultCenter(val: number): void Parameters val: number Returns void setResultCenterError setResultCenterError(val: number): void Parameters val: number Returns void setResultFwhm setResultFwhm(val: number): void Parameters val: number Returns void setResultFwhmError setResultFwhmError(val: number): void Parameters val: number Returns void setResultIntegral setResultIntegral(val: number): void Parameters val: number Returns void setResultIntegralError setResultIntegralError(val: number): void Parameters val: number Returns void","keywords":""},{"title":"PreferenceStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/PreferenceStore","content":"PreferenceStore Index Properties preferencessupportsServer Accessors aipsBeamSupportanimationCompressionQualityannotationColorannotationDashLengthannotationLineWidthastColorastGridVisibleastLabelsVisibleautoLaunchautoWCSMatchingbeamColorbeamTypebeamVisiblebeamWidthcatalogDisplayedColumnSizecatalogTableSeparatorPositioncheckNewReleasecodeSnippetsEnabledcolorbarInteractivecolorbarLabelVisiblecolorbarPositioncolorbarTicksDensitycolorbarVisiblecolorbarWidthcolormapcontourChunkSizecontourColorcontourColormapcontourColormapEnabledcontourCompressionLevelcontourControlMapWidthcontourDecimationcontourGeneratorTypecontourNumLevelscontourSmoothingFactorcontourSmoothingModecontourThicknesscursorInfoVisiblecursorPositiondragPanningenabledLoggingEventNamesfileFilterModefileFilteringTypefileSortingStringgpuTileCacheimageCompressionQualityimageMultiPanelEnabledimagePanelColumnsimagePanelModeimagePanelRowsisCursorFrozenisRegionCornerModeisSelectingAllLogEventsisSelectingIndeterminateLogEventsisZoomRAWModekeepLastUsedFolderlastUsedFolderlatestReleaselayoutlimitOverlayRedrawlowBandwidthModenanAlphananColorHexpercentilepixelGridColorpixelGridVisiblepointAnnotationShapepointAnnotationWidthpvPreivewCubeSizeLimitpvPreivewCubeSizeLimitUnitregionColorregionCreationModeregionDashLengthregionLineWidthregionSizeregionTypescalingscalingAlphascalingGammaspectralMatchingTypestatsPanelEnabledstatsPanelModestopAnimationPlaybackMinutesstreamContoursWhileZoomingsystemTileCachetelemetryConsentShowntelemetryLoggingtelemetryModetelemetryUuidtextAnnotationLineWidththemetransparentImageBackgrounduseSmoothedBiasContrastvectorOverlayColorvectorOverlayColormapvectorOverlayColormapEnabledvectorOverlayFractionalIntensityvectorOverlayPixelAveragingvectorOverlayThicknesswcsTypezoomModezoomPointInstance Methods clearPreferencesfetchPreferencesisEventLoggingEnabledresetAnnotationSettingsresetCatalogSettingsresetCompatibilitySettingsresetContourConfigSettingsresetGlobalSettingsresetLogEventSettingsresetOverlayConfigSettingsresetPerformanceSettingsresetRegionSettingsresetRenderConfigSettingsresetSilentSettingsresetTelemetrySettingsresetVectorOverlayConfigSettingsselectAllLogEventssetPreference Properties preferences preferences: Map&lt;PreferenceKeys, any&gt; supportsServer supportsServer: boolean Accessors aipsBeamSupport get aipsBeamSupport(): boolean Returns boolean animationCompressionQuality get animationCompressionQuality(): number Returns number annotationColor get annotationColor(): string Returns string annotationDashLength get annotationDashLength(): number Returns number annotationLineWidth get annotationLineWidth(): number Returns number astColor get astColor(): string Returns string astGridVisible get astGridVisible(): boolean Returns boolean astLabelsVisible get astLabelsVisible(): boolean Returns boolean autoLaunch get autoLaunch(): boolean Returns boolean autoWCSMatching get autoWCSMatching(): WCSMatchingType Returns WCSMatchingType beamColor get beamColor(): string Returns string beamType get beamType(): BeamType Returns BeamType beamVisible get beamVisible(): boolean Returns boolean beamWidth get beamWidth(): number Returns number catalogDisplayedColumnSize get catalogDisplayedColumnSize(): number Returns number catalogTableSeparatorPosition get catalogTableSeparatorPosition(): string Returns string checkNewRelease get checkNewRelease(): boolean Returns boolean codeSnippetsEnabled get codeSnippetsEnabled(): boolean Returns boolean colorbarInteractive get colorbarInteractive(): boolean Returns boolean colorbarLabelVisible get colorbarLabelVisible(): boolean Returns boolean colorbarPosition get colorbarPosition(): string Returns string colorbarTicksDensity get colorbarTicksDensity(): number Returns number colorbarVisible get colorbarVisible(): boolean Returns boolean colorbarWidth get colorbarWidth(): number Returns number colormap get colormap(): string Returns string contourChunkSize get contourChunkSize(): number Returns number contourColor get contourColor(): string Returns string contourColormap get contourColormap(): string Returns string contourColormapEnabled get contourColormapEnabled(): boolean Returns boolean contourCompressionLevel get contourCompressionLevel(): number Returns number contourControlMapWidth get contourControlMapWidth(): number Returns number contourDecimation get contourDecimation(): number Returns number contourGeneratorType get contourGeneratorType(): ContourGeneratorType Returns ContourGeneratorType contourNumLevels get contourNumLevels(): number Returns number contourSmoothingFactor get contourSmoothingFactor(): number Returns number contourSmoothingMode get contourSmoothingMode(): SmoothingMode Returns SmoothingMode contourThickness get contourThickness(): number Returns number cursorInfoVisible get cursorInfoVisible(): string Returns string cursorPosition get cursorPosition(): string Returns string dragPanning get dragPanning(): boolean Returns boolean enabledLoggingEventNames get enabledLoggingEventNames(): string[] Returns string[] fileFilterMode get fileFilterMode(): FileFilterMode Returns FileFilterMode fileFilteringType get fileFilteringType(): FileFilteringType Returns FileFilteringType fileSortingString get fileSortingString(): string Returns string gpuTileCache get gpuTileCache(): number Returns number imageCompressionQuality get imageCompressionQuality(): number Returns number imageMultiPanelEnabled get imageMultiPanelEnabled(): boolean Returns boolean imagePanelColumns get imagePanelColumns(): number Returns number imagePanelMode get imagePanelMode(): ImagePanelMode Returns ImagePanelMode imagePanelRows get imagePanelRows(): number Returns number isCursorFrozen get isCursorFrozen(): boolean Returns boolean isRegionCornerMode get isRegionCornerMode(): boolean Returns boolean isSelectingAllLogEvents get isSelectingAllLogEvents(): boolean Returns boolean isSelectingIndeterminateLogEvents get isSelectingIndeterminateLogEvents(): boolean Returns boolean isZoomRAWMode get isZoomRAWMode(): boolean Returns boolean keepLastUsedFolder get keepLastUsedFolder(): boolean Returns boolean lastUsedFolder get lastUsedFolder(): string Returns string latestRelease get latestRelease(): string Returns string layout get layout(): string Returns string limitOverlayRedraw get limitOverlayRedraw(): boolean Returns boolean lowBandwidthMode get lowBandwidthMode(): boolean Returns boolean nanAlpha get nanAlpha(): number Returns number nanColorHex get nanColorHex(): string Returns string percentile get percentile(): number Returns number pixelGridColor get pixelGridColor(): string Returns string pixelGridVisible get pixelGridVisible(): boolean Returns boolean pointAnnotationShape get pointAnnotationShape(): PointAnnotationShape Returns PointAnnotationShape pointAnnotationWidth get pointAnnotationWidth(): number Returns number pvPreivewCubeSizeLimit get pvPreivewCubeSizeLimit(): number Returns number pvPreivewCubeSizeLimitUnit get pvPreivewCubeSizeLimitUnit(): string Returns string regionColor get regionColor(): string Returns string regionCreationMode get regionCreationMode(): string Returns string regionDashLength get regionDashLength(): number Returns number regionLineWidth get regionLineWidth(): number Returns number regionSize get regionSize(): number Returns number regionType get regionType(): RegionType Returns RegionType scaling get scaling(): FrameScaling Returns FrameScaling scalingAlpha get scalingAlpha(): number Returns number scalingGamma get scalingGamma(): number Returns number spectralMatchingType get spectralMatchingType(): SpectralType Returns SpectralType statsPanelEnabled get statsPanelEnabled(): boolean Returns boolean statsPanelMode get statsPanelMode(): number Returns number stopAnimationPlaybackMinutes get stopAnimationPlaybackMinutes(): number Returns number streamContoursWhileZooming get streamContoursWhileZooming(): boolean Returns boolean systemTileCache get systemTileCache(): number Returns number telemetryConsentShown get telemetryConsentShown(): boolean Returns boolean telemetryLogging get telemetryLogging(): boolean Returns boolean telemetryMode get telemetryMode(): TelemetryMode Returns TelemetryMode telemetryUuid get telemetryUuid(): string Returns string textAnnotationLineWidth get textAnnotationLineWidth(): number Returns number theme get theme(): string Returns string transparentImageBackground get transparentImageBackground(): boolean Returns boolean useSmoothedBiasContrast get useSmoothedBiasContrast(): boolean Returns boolean vectorOverlayColor get vectorOverlayColor(): string Returns string vectorOverlayColormap get vectorOverlayColormap(): string Returns string vectorOverlayColormapEnabled get vectorOverlayColormapEnabled(): boolean Returns boolean vectorOverlayFractionalIntensity get vectorOverlayFractionalIntensity(): boolean Returns boolean vectorOverlayPixelAveraging get vectorOverlayPixelAveraging(): number Returns number vectorOverlayThickness get vectorOverlayThickness(): number Returns number wcsType get wcsType(): string Returns string zoomMode get zoomMode(): string Returns string zoomPoint get zoomPoint(): string Returns string staticInstance get Instance(): PreferenceStore Returns PreferenceStore Methods clearPreferences clearPreferences(keys: PreferenceKeys[]): Generator&lt;Promise&lt;any&gt;, void, unknown&gt; Parameters keys: PreferenceKeys[] Returns Generator&lt;Promise&lt;any&gt;, void, unknown&gt; fetchPreferences fetchPreferences(): Generator&lt;Promise&lt;any&gt;, void, unknown&gt; Returns Generator&lt;Promise&lt;any&gt;, void, unknown&gt; publicisEventLoggingEnabled isEventLoggingEnabled(eventType: EventType): boolean Parameters eventType: EventType Returns boolean resetAnnotationSettings resetAnnotationSettings(): void Returns void resetCatalogSettings resetCatalogSettings(): void Returns void resetCompatibilitySettings resetCompatibilitySettings(): void Returns void resetContourConfigSettings resetContourConfigSettings(): void Returns void resetGlobalSettings resetGlobalSettings(): void Returns void resetLogEventSettings resetLogEventSettings(): void Returns void resetOverlayConfigSettings resetOverlayConfigSettings(): void Returns void resetPerformanceSettings resetPerformanceSettings(): void Returns void resetRegionSettings resetRegionSettings(): void Returns void resetRenderConfigSettings resetRenderConfigSettings(): void Returns void resetSilentSettings resetSilentSettings(): void Returns void resetTelemetrySettings resetTelemetrySettings(): void Returns void resetVectorOverlayConfigSettings resetVectorOverlayConfigSettings(): void Returns void selectAllLogEvents selectAllLogEvents(): void Returns void setPreference setPreference(key: PreferenceKeys, value: any): Generator&lt;Promise&lt;any&gt;, any, unknown&gt; Parameters key: PreferenceKeys value: any Returns Generator&lt;Promise&lt;any&gt;, any, unknown&gt;","keywords":""},{"title":"ProfileFittingStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/ProfileFittingStore","content":"ProfileFittingStore Index Constructors constructor Properties componentscontinuumdetectedComponentNenableResidualfunctionhasAutoDetectResulthasResultisAutoDetectWithContisAutoDetectWithFittingisCursorSelectingComponentisCursorSelectingSlopeisCursorSelectingYInterceptlockedSlopelockedYInterceptoriginDataresultLogresultResidualresultSloperesultSlopeErrorresultYInterceptresultYInterceptErrorselectedIndexslopeyIntercept Accessors autoDetectResultTextbaseLinePoint2DArraycomponentPlottingBoxescomponentResultNumberfittingDataindividualModelPoint2DArraysmodelPoint2DArrayreadyToFitresidualPoint2DArrayresultStringselectedComponent Methods autoDetectdeleteSelectedComponentfitDatasetComponentByCursorsetComponentssetContinuumsetDetectedComponentNsetEnableResidualsetFunctionsetHasAutoDetectResultsetHasResultsetIsAutoDetectWithContsetIsAutoDetectWithFittingsetIsCursorSelectingComponentOnsetIsCursorSelectingSlopesetIsCursorSelectingYInterceptsetLockedSlopesetLockedYInterceptsetOriginDatasetResultLogsetResultResidualsetResultSlopesetResultSlopeErrorsetResultYInterceptsetResultYInterceptErrorsetSelectedIndexsetSlopesetYIntercept Constructors constructor new ProfileFittingStore(widgetStore: SpectralProfileWidgetStore): ProfileFittingStore Parameters widgetStore: SpectralProfileWidgetStore Returns ProfileFittingStore Properties components components: ProfileFittingIndividualStore[] continuum continuum: FittingContinuum detectedComponentN detectedComponentN: number enableResidual enableResidual: boolean function function: FittingFunction hasAutoDetectResult hasAutoDetectResult: boolean hasResult hasResult: boolean isAutoDetectWithCont isAutoDetectWithCont: boolean isAutoDetectWithFitting isAutoDetectWithFitting: boolean isCursorSelectingComponent isCursorSelectingComponent: boolean isCursorSelectingSlope isCursorSelectingSlope: boolean isCursorSelectingYIntercept isCursorSelectingYIntercept: boolean lockedSlope lockedSlope: boolean lockedYIntercept lockedYIntercept: boolean originData originData: { x: number[]; y: Float32Array | Float64Array } Type declaration x: number[] y: Float32Array | Float64Array resultLog resultLog: string resultResidual resultResidual: Float32Array | Float64Array resultSlope resultSlope: number resultSlopeError resultSlopeError: number resultYIntercept resultYIntercept: number resultYInterceptError resultYInterceptError: number selectedIndex selectedIndex: number slope slope: number yIntercept yIntercept: number Accessors autoDetectResultText get autoDetectResultText(): string Returns string baseLinePoint2DArray get baseLinePoint2DArray(): Point2D[] Returns Point2D[] componentPlottingBoxes get componentPlottingBoxes(): LinePlotInsideBoxMarker[] Returns LinePlotInsideBoxMarker[] componentResultNumber get componentResultNumber(): LinePlotInsideTextMarker[] Returns LinePlotInsideTextMarker[] fittingData get fittingData(): { x: number[]; y: Float32Array | Float64Array } Returns { x: number[]; y: Float32Array | Float64Array } x: number[] y: Float32Array | Float64Array individualModelPoint2DArrays get individualModelPoint2DArrays(): Point2D[][] Returns Point2D[][] modelPoint2DArray get modelPoint2DArray(): Point2D[] Returns Point2D[] readyToFit get readyToFit(): boolean Returns boolean residualPoint2DArray get residualPoint2DArray(): Point2D[] Returns Point2D[] resultString get resultString(): string Returns string selectedComponent get selectedComponent(): ProfileFittingIndividualStore Returns ProfileFittingIndividualStore Methods autoDetect autoDetect(): void Returns void deleteSelectedComponent deleteSelectedComponent(): void Returns void fitData fitData(): void Returns void setComponentByCursor setComponentByCursor(xMin: number, xMax: number, yMin: number, yMax: number): void Parameters xMin: number xMax: number yMin: number yMax: number Returns void setComponents setComponents(length: number, reset?: boolean): void Parameters length: number optionalreset: boolean Returns void setContinuum setContinuum(val: FittingContinuum): void Parameters val: FittingContinuum Returns void setDetectedComponentN setDetectedComponentN(val: number): void Parameters val: number Returns void setEnableResidual setEnableResidual(val: boolean): void Parameters val: boolean Returns void setFunction setFunction(val: FittingFunction): void Parameters val: FittingFunction Returns void setHasAutoDetectResult setHasAutoDetectResult(val: boolean): void Parameters val: boolean Returns void setHasResult setHasResult(val: boolean): void Parameters val: boolean Returns void setIsAutoDetectWithCont setIsAutoDetectWithCont(val: boolean): void Parameters val: boolean Returns void setIsAutoDetectWithFitting setIsAutoDetectWithFitting(val: boolean): void Parameters val: boolean Returns void setIsCursorSelectingComponentOn setIsCursorSelectingComponentOn(val: boolean): void Parameters val: boolean Returns void setIsCursorSelectingSlope setIsCursorSelectingSlope(val: boolean): void Parameters val: boolean Returns void setIsCursorSelectingYIntercept setIsCursorSelectingYIntercept(val: boolean): void Parameters val: boolean Returns void setLockedSlope setLockedSlope(val: boolean): void Parameters val: boolean Returns void setLockedYIntercept setLockedYIntercept(val: boolean): void Parameters val: boolean Returns void setOriginData setOriginData(x: number[], y: Float32Array | Float64Array): void Parameters x: number[] y: Float32Array | Float64Array Returns void setResultLog setResultLog(val: string): void Parameters val: string Returns void setResultResidual setResultResidual(val: Float32Array | Float64Array): void Parameters val: Float32Array | Float64Array Returns void setResultSlope setResultSlope(val: number): void Parameters val: number Returns void setResultSlopeError setResultSlopeError(val: number): void Parameters val: number Returns void setResultYIntercept setResultYIntercept(val: number): void Parameters val: number Returns void setResultYInterceptError setResultYInterceptError(val: number): void Parameters val: number Returns void setSelectedIndex setSelectedIndex(val: number): void Parameters val: number Returns void setSlope setSlope(val: number): void Parameters val: number Returns void setYIntercept setYIntercept(val: number): void Parameters val: number Returns void","keywords":""},{"title":"ProfileSmoothingStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/ProfileSmoothingStore","content":"ProfileSmoothingStore Index Constructors constructor Properties binWidthboxcarSizecolorMapdecimationWidthgaussianSigmahanningSizeisOverlayOnlineColorlineTypelineWidthpointRadiussavitzkyGolayOrdersavitzkyGolaySizeselectedLinetype Accessors commentsexportDatagaussianAlphagaussianKernel Methods getDecimatedPoint2DArraygetSmoothingPoint2DArraygetSmoothingValuessetBinWidthsetBoxcarSizesetColorMapsetDecimationWidthsetGaussianSigmasetHanningSizesetIsOverlayOnsetLineColorsetLineTypesetLineWidthsetPointRadiussetSavitzkyGolayOrdersetSavitzkyGolaySizesetSelectedLinesetType Constructors constructor new ProfileSmoothingStore(): ProfileSmoothingStore Returns ProfileSmoothingStore Properties binWidth binWidth: number boxcarSize boxcarSize: number colorMap colorMap: Map&lt;string, string&gt; decimationWidth decimationWidth: number gaussianSigma gaussianSigma: number hanningSize hanningSize: number isOverlayOn isOverlayOn: boolean lineColor lineColor: string lineType lineType: PlotType lineWidth lineWidth: number pointRadius pointRadius: number savitzkyGolayOrder savitzkyGolayOrder: number savitzkyGolaySize savitzkyGolaySize: number selectedLine selectedLine: string type type: SmoothingType Accessors comments get comments(): string[] Returns string[] exportData get exportData(): Map&lt;string, string&gt; Returns Map&lt;string, string&gt; gaussianAlpha get gaussianAlpha(): number Returns number gaussianKernel get gaussianKernel(): number Returns number Methods getDecimatedPoint2DArray getDecimatedPoint2DArray(x: number[], y: Float32Array | Float64Array, decimationWidth: number, xMinIndex?: number, xMaxIndex?: number): Point2D[] Parameters x: number[] y: Float32Array | Float64Array decimationWidth: number optionalxMinIndex: number optionalxMaxIndex: number Returns Point2D[] getSmoothingPoint2DArray getSmoothingPoint2DArray(x: number[], y: Float32Array | Float64Array, xMinIndex?: number, xMaxIndex?: number): Point2D[] Parameters x: number[] y: Float32Array | Float64Array optionalxMinIndex: number optionalxMaxIndex: number Returns Point2D[] getSmoothingValues getSmoothingValues(x: number[], y: Float32Array | Float64Array, xMinIndex?: number, xMaxIndex?: number): { x: number[]; y: Float32Array | Float64Array } Parameters x: number[] y: Float32Array | Float64Array optionalxMinIndex: number optionalxMaxIndex: number Returns { x: number[]; y: Float32Array | Float64Array } x: number[] y: Float32Array | Float64Array setBinWidth setBinWidth(val: number): void Parameters val: number Returns void setBoxcarSize setBoxcarSize(val: number): void Parameters val: number Returns void setColorMap setColorMap(key: string, color: string): void Parameters key: string color: string Returns void setDecimationWidth setDecimationWidth(val: number): void Parameters val: number Returns void setGaussianSigma setGaussianSigma(val: number): void Parameters val: number Returns void setHanningSize setHanningSize(val: number): void Parameters val: number Returns void setIsOverlayOn setIsOverlayOn(val: boolean): void Parameters val: boolean Returns void setLineColor setLineColor(color: string): void Parameters color: string Returns void setLineType setLineType(val: PlotType): void Parameters val: PlotType Returns void setLineWidth setLineWidth(val: number): void Parameters val: number Returns void setPointRadius setPointRadius(val: number): void Parameters val: number Returns void setSavitzkyGolayOrder setSavitzkyGolayOrder(val: number): void Parameters val: number Returns void setSavitzkyGolaySize setSavitzkyGolaySize(val: number): void Parameters val: number Returns void setSelectedLine setSelectedLine(key: string): void Parameters key: string Returns void setType setType(val: SmoothingType): void Parameters val: SmoothingType Returns void","keywords":""},{"title":"PvGeneratorWidgetStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/PvGeneratorWidgetStore","content":"PvGeneratorWidgetStore Hierarchy RegionWidgetStore PvGeneratorWidgetStore Index Constructors constructor Properties fileIdkeeppreviewFramepreviewRegionIdpvCutRegionIdrangeregionIdMapreversetypewidthxyRebinzRebin Accessors effectiveFrameeffectivePreviewRegionIdeffectiveRegioneffectiveRegionIdeffectiveRegionInfoframeOptionsisEffectiveFrameEqualToActiveFramematchesSelectedRegionpreviewRegionOptionsregionOptions Methods clearFrameEntryclearRegionMapremovePreviewFramerequestPVrequestingPVCancelledsetFileIdsetKeepsetPreviewFramesetPreviewRegionIdsetPvCutRegionIdsetRegionIdsetReversesetSpectralCoordinatesetSpectralRangesetSpectralSystemsetWidthsetXYRebinsetZRebinCalculateRequirementsArray Constructors constructor new PvGeneratorWidgetStore(): PvGeneratorWidgetStore Overrides RegionWidgetStore.constructor Returns PvGeneratorWidgetStore Properties fileId fileId: number Inherited from RegionWidgetStore.fileId keep keep: boolean previewFrame previewFrame: FrameStore previewRegionId previewRegionId: number pvCutRegionId pvCutRegionId: number range range: IIntBounds = ... regionIdMap regionIdMap: Map&lt;number, number&gt; Inherited from RegionWidgetStore.regionIdMap reverse reverse: boolean type type: RegionsType Inherited from RegionWidgetStore.type width width: number xyRebin xyRebin: number = 1 zRebin zRebin: number = 1 Accessors effectiveFrame get effectiveFrame(): FrameStore Inherited from RegionWidgetStore.effectiveFrame Returns FrameStore effectivePreviewRegionId get effectivePreviewRegionId(): number Returns number effectiveRegion get effectiveRegion(): RegionStore Inherited from RegionWidgetStore.effectiveRegion Returns RegionStore effectiveRegionId get effectiveRegionId(): number Inherited from RegionWidgetStore.effectiveRegionId Returns number effectiveRegionInfo get effectiveRegionInfo(): string Inherited from RegionWidgetStore.effectiveRegionInfo Returns string frameOptions get frameOptions(): IOptionProps[] Inherited from RegionWidgetStore.frameOptions Returns IOptionProps[] isEffectiveFrameEqualToActiveFrame get isEffectiveFrameEqualToActiveFrame(): boolean Inherited from RegionWidgetStore.isEffectiveFrameEqualToActiveFrame Returns boolean matchesSelectedRegion get matchesSelectedRegion(): boolean Inherited from RegionWidgetStore.matchesSelectedRegion Returns boolean previewRegionOptions get previewRegionOptions(): OptionProps[] Returns OptionProps[] regionOptions get regionOptions(): OptionProps[] Returns OptionProps[] Methods clearFrameEntry clearFrameEntry(fileId: number): void Inherited from RegionWidgetStore.clearFrameEntry Parameters fileId: number Returns void clearRegionMap clearRegionMap(): void Inherited from RegionWidgetStore.clearRegionMap Returns void removePreviewFrame removePreviewFrame(id: number): void Parameters id: number Returns void requestPV requestPV(preview?: boolean, pvGeneratorId?: string): void Parameters preview: boolean = false optionalpvGeneratorId: string Returns void requestingPVCancelled requestingPVCancelled(pvGeneratorId: string): () =&gt; void Parameters pvGeneratorId: string Returns () =&gt; void (): void Returns void setFileId setFileId(fileId: number): void Inherited from RegionWidgetStore.setFileId Parameters fileId: number Returns void setKeep setKeep(bool: boolean): void Parameters bool: boolean Returns void setPreviewFrame setPreviewFrame(frame: FrameStore): void Parameters frame: FrameStore Returns void setPreviewRegionId setPreviewRegionId(regionId: number): void Parameters regionId: number Returns void setPvCutRegionId setPvCutRegionId(regionId: number): void Parameters regionId: number Returns void setRegionId setRegionId(fileId: number, regionId: number): void Inherited from RegionWidgetStore.setRegionId Parameters fileId: number regionId: number Returns void setReverse setReverse(bool: boolean): void Parameters bool: boolean Returns void setSpectralCoordinate setSpectralCoordinate(coordStr: string): void Parameters coordStr: string Returns void setSpectralRange setSpectralRange(range: IIntBounds): void Parameters range: IIntBounds Returns void setSpectralSystem setSpectralSystem(specsys: SpectralSystem): void Parameters specsys: SpectralSystem Returns void setWidth setWidth(val: number): void Parameters val: number Returns void setXYRebin setXYRebin(val: number): void Parameters val: number Returns void setZRebin setZRebin(val: number): void Parameters val: number Returns void publicstaticCalculateRequirementsArray CalculateRequirementsArray(widgetsMap: Map&lt;string, RegionWidgetStore&gt;): Map&lt;number, number[]&gt; Inherited from RegionWidgetStore.CalculateRequirementsArray Parameters widgetsMap: Map&lt;string, RegionWidgetStore&gt; Returns Map&lt;number, number[]&gt;","keywords":""},{"title":"RegionSetStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/RegionSetStore","content":"RegionSetStore Index Constructors constructor Properties isHoverImagelockedmodenewRegionTypeopacityregionsselectedRegion Accessors isNewRegionAnnotationregionListregionMapregionsAndAnnotationsForRender Methods addAnnCompassRegionaddAnnEllipticalRegionaddAnnLineRegionaddAnnPointRegionaddAnnPolygonalRegionaddAnnPolylineRegionaddAnnRectangularRegionaddAnnRulerRegionaddAnnTextRegionaddAnnVectorRegionaddEllipticalRegionaddExistingRegionaddLineRegionaddPointRegionaddPolygonalRegionaddPolylineRegionaddRectangularRegionaddRegionAsyncdeleteRegiondeselectRegionmigrateRegionsFromExistingSetselectRegionselectRegionByIndexsetIsHoversetLockedsetModesetNewRegionTypesetOpacitytoggleModeupdateCursorRegionPosition Constructors constructor new RegionSetStore(frame: FrameStore, preference: PreferenceStore, backendService: BackendService): RegionSetStore Parameters frame: FrameStore preference: PreferenceStore backendService: BackendService Returns RegionSetStore Properties isHoverImage isHoverImage: Boolean = false locked locked: boolean = false mode mode: RegionMode newRegionType newRegionType: RegionType opacity opacity: number = 1 regions regions: RegionStore[] selectedRegion selectedRegion: RegionStore Accessors isNewRegionAnnotation get isNewRegionAnnotation(): boolean Returns boolean regionList get regionList(): { id: number; type: RegionType }[] Returns an array of region IDs and types in the region set. Returns { id: number; type: RegionType }[] regionMap get regionMap(): Map&lt;number, RegionStore&gt; Returns a map associating region IDs with their corresponding RegionStore instances. Returns Map&lt;number, RegionStore&gt; regionsAndAnnotationsForRender get regionsAndAnnotationsForRender(): RegionStore[] Returns RegionStore[] Methods addAnnCompassRegion addAnnCompassRegion(point: Point2D, length: number, temporary?: boolean): RegionStore Parameters point: Point2D length: number temporary: boolean = false Returns RegionStore addAnnEllipticalRegion addAnnEllipticalRegion(center: Point2D, semiMajor: number, semiMinor: number, temporary?: boolean): RegionStore Parameters center: Point2D semiMajor: number semiMinor: number temporary: boolean = false Returns RegionStore addAnnLineRegion addAnnLineRegion(points: Point2D[], temporary?: boolean): RegionStore Parameters points: Point2D[] temporary: boolean = false Returns RegionStore addAnnPointRegion addAnnPointRegion(center: Point2D, shape: PointAnnotationShape, cursorRegion?: boolean): RegionStore Parameters center: Point2D shape: PointAnnotationShape cursorRegion: boolean = false Returns RegionStore addAnnPolygonalRegion addAnnPolygonalRegion(points: Point2D[], temporary?: boolean): RegionStore Parameters points: Point2D[] temporary: boolean = false Returns RegionStore addAnnPolylineRegion addAnnPolylineRegion(points: Point2D[], temporary?: boolean): RegionStore Parameters points: Point2D[] temporary: boolean = false Returns RegionStore addAnnRectangularRegion addAnnRectangularRegion(center: Point2D, width: number, height: number, temporary?: boolean): RegionStore Parameters center: Point2D width: number height: number temporary: boolean = false Returns RegionStore addAnnRulerRegion addAnnRulerRegion(points: Point2D[], temporary?: boolean): RegionStore Parameters points: Point2D[] temporary: boolean = false Returns RegionStore addAnnTextRegion addAnnTextRegion(center: Point2D, width: number, height: number, temporary?: boolean): RegionStore Parameters center: Point2D width: number height: number temporary: boolean = false Returns RegionStore addAnnVectorRegion addAnnVectorRegion(points: Point2D[], temporary?: boolean): RegionStore Parameters points: Point2D[] temporary: boolean = false Returns RegionStore addEllipticalRegion addEllipticalRegion(center: Point2D, semiMajor: number, semiMinor: number, temporary?: boolean): RegionStore Parameters center: Point2D semiMajor: number semiMinor: number temporary: boolean = false Returns RegionStore addExistingRegion addExistingRegion(points: Point2D[], rotation: number, regionType: RegionType, regionId: number, name: string, color: string, lineWidth: number, dashes: number[], temporary?: boolean, annotationStyles?: any): RegionStore Parameters points: Point2D[] rotation: number regionType: RegionType regionId: number name: string color: string lineWidth: number dashes: number[] temporary: boolean = true optionalannotationStyles: any Returns RegionStore addLineRegion addLineRegion(points: Point2D[], temporary?: boolean): RegionStore Parameters points: Point2D[] temporary: boolean = false Returns RegionStore addPointRegion addPointRegion(center: Point2D, cursorRegion?: boolean): RegionStore Parameters center: Point2D cursorRegion: boolean = false Returns RegionStore addPolygonalRegion addPolygonalRegion(points: Point2D[], temporary?: boolean): RegionStore Parameters points: Point2D[] temporary: boolean = false Returns RegionStore addPolylineRegion addPolylineRegion(points: Point2D[], temporary?: boolean): RegionStore Parameters points: Point2D[] temporary: boolean = false Returns RegionStore addRectangularRegion addRectangularRegion(center: Point2D, width: number, height: number, temporary?: boolean): RegionStore Parameters center: Point2D width: number height: number temporary: boolean = false Returns RegionStore addRegionAsync addRegionAsync(regionType: RegionType, points: Point2D[], rotation?: number, regionName?: string): Promise&lt;RegionStore&gt; Adds a new region and returns the corresponding RegionStore object. Parameters regionType: RegionType Type of the region. points: Point2D[] Points defining the shape of the region. For rectangles, ellipses, text annotations, and compass annotations, provide [center, size]; for other types, provide an array of positions. rotation: number = 0 Rotation angle of the region in degrees. Only applicable for rectangles, ellipses, and text annotations. regionName: string = &quot;&quot; Optional name for the region. If it is not provided or is an empty string, a default name will be applied. Returns Promise&lt;RegionStore&gt; A promise that resolves to the RegionStore object representing the added region. deleteRegion deleteRegion(region: RegionStore): void Parameters region: RegionStore Returns void deselectRegion deselectRegion(): void Returns void migrateRegionsFromExistingSet migrateRegionsFromExistingSet(sourceRegionSet: RegionSetStore, spatialTransformAST: Mapping, forward?: boolean): void Parameters sourceRegionSet: RegionSetStore spatialTransformAST: Mapping forward: boolean = false Returns void selectRegion selectRegion(region: RegionStore): void Parameters region: RegionStore Returns void selectRegionByIndex selectRegionByIndex(index: number): void Parameters index: number Returns void setIsHover setIsHover(bool: boolean): void Parameters bool: boolean Returns void setLocked setLocked(locked?: boolean): void Parameters optionallocked: boolean Returns void setMode setMode(mode: any): void Parameters mode: any Returns void setNewRegionType setNewRegionType(type: RegionType): void Parameters type: RegionType Returns void setOpacity setOpacity(opacity: RegionsOpacity): void Parameters opacity: RegionsOpacity Returns void toggleMode toggleMode(): void Returns void publicupdateCursorRegionPosition updateCursorRegionPosition(pos: Point2D): void Parameters pos: Point2D Returns void","keywords":""},{"title":"RegionWidgetStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/RegionWidgetStore","content":"RegionWidgetStore Hierarchy RegionWidgetStore HistogramWidgetStorePvGeneratorWidgetStoreSpatialProfileWidgetStoreSpectralProfileWidgetStoreStatsWidgetStoreStokesAnalysisWidgetStore Index Constructors constructor Properties fileIdregionIdMaptype Accessors effectiveFrameeffectiveRegioneffectiveRegionIdeffectiveRegionInfoframeOptionsisEffectiveFrameEqualToActiveFramematchesSelectedRegion Methods clearFrameEntryclearRegionMapsetFileIdsetRegionIdCalculateRequirementsArray Constructors constructor new RegionWidgetStore(type: RegionsType): RegionWidgetStore Parameters type: RegionsType Returns RegionWidgetStore Properties fileId fileId: number regionIdMap regionIdMap: Map&lt;number, number&gt; type type: RegionsType Accessors effectiveFrame get effectiveFrame(): FrameStore Returns FrameStore effectiveRegion get effectiveRegion(): RegionStore Returns RegionStore effectiveRegionId get effectiveRegionId(): number Returns number effectiveRegionInfo get effectiveRegionInfo(): string Returns string frameOptions get frameOptions(): IOptionProps[] Returns IOptionProps[] isEffectiveFrameEqualToActiveFrame get isEffectiveFrameEqualToActiveFrame(): boolean Returns boolean matchesSelectedRegion get matchesSelectedRegion(): boolean Returns boolean Methods clearFrameEntry clearFrameEntry(fileId: number): void Parameters fileId: number Returns void clearRegionMap clearRegionMap(): void Returns void setFileId setFileId(fileId: number): void Parameters fileId: number Returns void setRegionId setRegionId(fileId: number, regionId: number): void Parameters fileId: number regionId: number Returns void publicstaticCalculateRequirementsArray CalculateRequirementsArray(widgetsMap: Map&lt;string, RegionWidgetStore&gt;): Map&lt;number, number[]&gt; Parameters widgetsMap: Map&lt;string, RegionWidgetStore&gt; Returns Map&lt;number, number[]&gt;","keywords":""},{"title":"RegionStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/RegionStore","content":"RegionStore Hierarchy RegionStore PointAnnotationStoreTextAnnotationStoreVectorAnnotationStoreCompassAnnotationStoreRulerAnnotationStore Index Constructors constructor Properties activeFramecolorcontrolPointscoordinatecreatingdashLengtheditingfileIdisSimplePolygonlineRegionSampleWidthlineWidthlockedmodifiedTimestampnameregionIdregionTyperotationAVAILABLE_ANNOTATION_TYPESAVAILABLE_REGION_TYPESMAX_DASH_LENGTHMAX_LINE_WIDTHMIN_LINE_WIDTHTARGET_VERTEX_COUNT Accessors boundingBoxboundingBoxAreacenterisAnnotationisClosedRegionisPreviewCutisTemporaryisValidnameStringregionPropertiessizewcsSize Methods beginCreatingbeginEditingendCreatingendEditingfocusCentergetRegionApproximationsetCentersetColorsetControlPointsetControlPointssetCoordinatesetDashLengthsetLineWidthsetLockedsetNamesetRegionIdsetRotationsetSizetoggleLockGetRegionPropertiesIsRegionCustomIconIsRegionDashLengthValidIsRegionLineWidthValidIsRegionTypeValidRegionIconStringRegionTypeString Constructors constructor new RegionStore(backendService: BackendService, fileId: number, activeFrame: FrameStore, controlPoints: Point2D[], regionType: RegionType, regionId?: number, rotation?: number, name?: string, color?: string, lineWidth?: number, dashLength?: number): RegionStore Parameters backendService: BackendService fileId: number activeFrame: FrameStore controlPoints: Point2D[] regionType: RegionType regionId: number = -1 rotation: number = 0 name: string = &quot;&quot; color: string = Colors.TURQUOISE5 lineWidth: number = 2 dashLength: number = 0 Returns RegionStore Properties activeFrame activeFrame: FrameStore color color: string controlPoints controlPoints: Point2D[] coordinate coordinate: CoordinateMode creating creating: boolean dashLength dashLength: number editing editing: boolean readonlyfileId fileId: number isSimplePolygon isSimplePolygon: boolean lineRegionSampleWidth lineRegionSampleWidth: number = 3 lineWidth lineWidth: number locked locked: boolean = false publicmodifiedTimestamp modifiedTimestamp: number name name: string regionId regionId: number regionType regionType: RegionType rotation rotation: number staticreadonlyAVAILABLE_ANNOTATION_TYPES AVAILABLE_ANNOTATION_TYPES: Map&lt;RegionType, string&gt; = ... staticreadonlyAVAILABLE_REGION_TYPES AVAILABLE_REGION_TYPES: Map&lt;RegionType, string&gt; = ... staticreadonlyMAX_DASH_LENGTH MAX_DASH_LENGTH: 50 = 50 staticreadonlyMAX_LINE_WIDTH MAX_LINE_WIDTH: 10 = 10 staticreadonlyMIN_LINE_WIDTH MIN_LINE_WIDTH: 0.5 = 0.5 staticreadonlyTARGET_VERTEX_COUNT TARGET_VERTEX_COUNT: 200 = 200 Accessors boundingBox get boundingBox(): Point2D Returns Point2D boundingBoxArea get boundingBoxArea(): number Returns number center get center(): Point2D Returns Point2D isAnnotation get isAnnotation(): boolean Returns boolean isClosedRegion get isClosedRegion(): boolean Returns boolean isPreviewCut get isPreviewCut(): boolean Returns boolean isTemporary get isTemporary(): boolean Returns boolean isValid get isValid(): boolean Returns boolean nameString get nameString(): string Returns string regionProperties get regionProperties(): string Returns string size get size(): Point2D Returns Point2D wcsSize get wcsSize(): Point2D Returns Point2D Methods beginCreating beginCreating(): void Returns void beginEditing beginEditing(): void Returns void endCreating endCreating(): Generator&lt;Promise&lt;ISetRegionAck&gt;, void, unknown&gt; Returns Generator&lt;Promise&lt;ISetRegionAck&gt;, void, unknown&gt; endEditing endEditing(): void Returns void focusCenter focusCenter(): void Returns void publicgetRegionApproximation getRegionApproximation(astTransform: Mapping): Point2D[] | { eastApproximatePoints: number[]; northApproximatePoints: number[] } | { hypotenuseApproximatePoints: number[]; xApproximatePoints: number[]; yApproximatePoints: number[] } Parameters astTransform: Mapping Returns Point2D[] | { eastApproximatePoints: number[]; northApproximatePoints: number[] } | { hypotenuseApproximatePoints: number[]; xApproximatePoints: number[]; yApproximatePoints: number[] } setCenter setCenter(p: Point2D, skipUpdate?: boolean): void Parameters p: Point2D skipUpdate: boolean = false Returns void setColor setColor(color: string): void Parameters color: string Returns void setControlPoint setControlPoint(index: number, p: Point2D, skipUpdate?: boolean): void Parameters index: number p: Point2D skipUpdate: boolean = false Returns void setControlPoints setControlPoints(points: Point2D[], skipUpdate?: boolean, shapeChanged?: boolean): void Parameters points: Point2D[] skipUpdate: boolean = false shapeChanged: boolean = true Returns void setCoordinate setCoordinate(coordinate: CoordinateMode): void Parameters coordinate: CoordinateMode Returns void setDashLength setDashLength(dashLength: number): void Parameters dashLength: number Returns void setLineWidth setLineWidth(lineWidth: number): void Parameters lineWidth: number Returns void setLocked setLocked(locked: boolean): void Parameters locked: boolean Returns void setName setName(name: string): void Parameters name: string Returns void setRegionId setRegionId(id: number): void Parameters id: number Returns void setRotation setRotation(angle: number, skipUpdate?: boolean): void Parameters angle: number skipUpdate: boolean = false Returns void setSize setSize(p: Point2D, skipUpdate?: boolean): void Parameters p: Point2D skipUpdate: boolean = false Returns void toggleLock toggleLock(): void Returns void publicstaticGetRegionProperties GetRegionProperties(regionType: RegionType, controlPoints: Point2D[], rotation: number): string Parameters regionType: RegionType controlPoints: Point2D[] rotation: number Returns string publicstaticIsRegionCustomIcon IsRegionCustomIcon(regionType: RegionType): boolean Parameters regionType: RegionType Returns boolean publicstaticIsRegionDashLengthValid IsRegionDashLengthValid(regionDashLength: number): boolean Parameters regionDashLength: number Returns boolean publicstaticIsRegionLineWidthValid IsRegionLineWidthValid(regionLineWidth: number): boolean Parameters regionLineWidth: number Returns boolean publicstaticIsRegionTypeValid IsRegionTypeValid(regionType: RegionType): boolean Parameters regionType: RegionType Returns boolean publicstaticRegionIconString RegionIconString(regionType: RegionType): any Parameters regionType: RegionType Returns any publicstaticRegionTypeString RegionTypeString(regionType: RegionType): string Parameters regionType: RegionType Returns string","keywords":""},{"title":"RenderConfigWidgetStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/RenderConfigWidgetStore","content":"RenderConfigWidgetStore Index Constructors constructor Properties cursorXlinePlotInitXYBoundarieslinePlotPointSizelineWidthlogScaleYmarkerTextVisiblemaxXmaxYmeanRmsVisibleminXminYplotTypeprimaryLineColor Accessors isAutoScaledXisAutoScaledY Methods clearXBoundsclearXYBoundsclearYBoundsinitinitXYBoundariessetCursorsetLinePlotPointSizesetLineWidthsetLogScalesetMarkerTextVisiblesetMeanRmsVisiblesetPlotTypesetPrimaryLineColorsetXBoundssetXYBoundssetYBoundstoConfig Constructors constructor new RenderConfigWidgetStore(): RenderConfigWidgetStore Returns RenderConfigWidgetStore Properties cursorX cursorX: number linePlotInitXYBoundaries linePlotInitXYBoundaries: { maxXVal: number; maxYVal: number; minXVal: number; minYVal: number } Type declaration maxXVal: number maxYVal: number minXVal: number minYVal: number linePlotPointSize linePlotPointSize: number lineWidth lineWidth: number logScaleY logScaleY: boolean markerTextVisible markerTextVisible: boolean maxX maxX: number maxY maxY: number meanRmsVisible meanRmsVisible: boolean minX minX: number minY minY: number plotType plotType: PlotType primaryLineColor primaryLineColor: string Accessors isAutoScaledX get isAutoScaledX(): boolean Returns boolean isAutoScaledY get isAutoScaledY(): boolean Returns boolean Methods clearXBounds clearXBounds(): void Returns void clearXYBounds clearXYBounds(): void Returns void clearYBounds clearYBounds(): void Returns void publicinit init(widgetSettings: any): void Parameters widgetSettings: any Returns void initXYBoundaries initXYBoundaries(minXVal: number, maxXVal: number, minYVal: number, maxYVal: number): void Parameters minXVal: number maxXVal: number minYVal: number maxYVal: number Returns void setCursor setCursor(cursorVal: number): void Parameters cursorVal: number Returns void setLinePlotPointSize setLinePlotPointSize(val: number): void Parameters val: number Returns void setLineWidth setLineWidth(val: number): void Parameters val: number Returns void setLogScale setLogScale(logScale: boolean): void Parameters logScale: boolean Returns void setMarkerTextVisible setMarkerTextVisible(val: boolean): void Parameters val: boolean Returns void setMeanRmsVisible setMeanRmsVisible(val: boolean): void Parameters val: boolean Returns void setPlotType setPlotType(val: PlotType): void Parameters val: PlotType Returns void setPrimaryLineColor setPrimaryLineColor(color: string): void Parameters color: string Returns void setXBounds setXBounds(minVal: number, maxVal: number): void Parameters minVal: number maxVal: number Returns void setXYBounds setXYBounds(minX: number, maxX: number, minY: number, maxY: number): void Parameters minX: number maxX: number minY: number maxY: number Returns void setYBounds setYBounds(minVal: number, maxVal: number): void Parameters minVal: number maxVal: number Returns void publictoConfig toConfig(): { linePlotPointSize: number; lineWidth: number; logScaleY: boolean; markerTextVisible: boolean; maxXVal: number; maxYVal: number; meanRmsVisible: boolean; minXVal: number; minYVal: number; plotType: PlotType; primaryLineColor: string } Returns { linePlotPointSize: number; lineWidth: number; logScaleY: boolean; markerTextVisible: boolean; maxXVal: number; maxYVal: number; meanRmsVisible: boolean; minXVal: number; minYVal: number; plotType: PlotType; primaryLineColor: string } linePlotPointSize: number lineWidth: number logScaleY: boolean markerTextVisible: boolean maxXVal: number maxYVal: number meanRmsVisible: boolean minXVal: number minYVal: number plotType: PlotType primaryLineColor: string","keywords":""},{"title":"RenderConfigStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/RenderConfigStore","content":"RenderConfigStore Index Constructors constructor Properties alphabiaschannelHistogramcolorMapIndexcontrastcubeHistogramcubeHistogramProgressgammahistChannelinvertedpreferencepreviewHistogramMaxpreviewHistogramMinscaleMaxscaleMinscalingselectedPercentilestokesIndexuseCubeHistogramuseCubeHistogramContoursvisibleALPHA_MAXALPHA_MINBIAS_MAXBIAS_MINCOLOR_MAPS_ALLCOLOR_MAPS_SELECTEDCONTRAST_MAXCONTRAST_MINGAMMA_MAXGAMMA_MINPERCENTILE_RANKSSCALING_TYPES Accessors colorMapcolorscaleArraycontourHistogramhistogramhistogramMaxhistogramMinscaleMaxValscaleMinValscalingNameselectedPercentileVal Methods resetBiasresetContrastsetAlphasetBiassetColorMapsetColorMapIndexsetContrastsetCustomScalesetGammasetHistChannelsetInvertedsetPercentileRanksetPreviewHistogramMaxsetPreviewHistogramMinsetScalingsetStokesIndexsetUseCubeHistogramsetUseCubeHistogramContourssetVisibletoggleVisibilityupdateChannelHistogramupdateCubeHistogramupdateFromupdateFromWorkspaceupdateSiblingsIsColormapValidIsGammaValidIsPercentileValidIsScalingValid Constructors constructor new RenderConfigStore(preference: PreferenceStore, frame: FrameStore): RenderConfigStore Parameters preference: PreferenceStore frame: FrameStore Returns RenderConfigStore Properties alpha alpha: number bias bias: number channelHistogram channelHistogram: IHistogram colorMapIndex colorMapIndex: number contrast contrast: number cubeHistogram cubeHistogram: IHistogram cubeHistogramProgress cubeHistogramProgress: number gamma gamma: number histChannel histChannel: number inverted inverted: boolean readonlypreference preference: PreferenceStore previewHistogramMax previewHistogramMax: number previewHistogramMin previewHistogramMin: number scaleMax scaleMax: number[] scaleMin scaleMin: number[] scaling scaling: FrameScaling selectedPercentile selectedPercentile: number[] stokesIndex stokesIndex: number useCubeHistogram useCubeHistogram: boolean useCubeHistogramContours useCubeHistogramContours: boolean visible visible: boolean staticreadonlyALPHA_MAX ALPHA_MAX: 1000000 = 1000000 staticreadonlyALPHA_MIN ALPHA_MIN: 0.1 = 0.1 staticreadonlyBIAS_MAX BIAS_MAX: 1 = 1 staticreadonlyBIAS_MIN BIAS_MIN: -1 = -1 staticreadonlyCOLOR_MAPS_ALL COLOR_MAPS_ALL: string[] = ... staticreadonlyCOLOR_MAPS_SELECTED COLOR_MAPS_SELECTED: string[] = ... staticreadonlyCONTRAST_MAX CONTRAST_MAX: 2 = 2 staticreadonlyCONTRAST_MIN CONTRAST_MIN: 0 = 0 staticreadonlyGAMMA_MAX GAMMA_MAX: 2 = 2 staticreadonlyGAMMA_MIN GAMMA_MIN: 0.1 = 0.1 staticreadonlyPERCENTILE_RANKS PERCENTILE_RANKS: number[] = ... staticreadonlySCALING_TYPES SCALING_TYPES: Map&lt;FrameScaling, string&gt; = ... Accessors colorMap get colorMap(): string Returns string colorscaleArray get colorscaleArray(): any[] Returns any[] contourHistogram get contourHistogram(): IHistogram Returns IHistogram histogram get histogram(): IHistogram Returns IHistogram histogramMax get histogramMax(): any Returns any histogramMin get histogramMin(): number Returns number scaleMaxVal get scaleMaxVal(): number Returns number scaleMinVal get scaleMinVal(): number Returns number scalingName get scalingName(): string Returns string selectedPercentileVal get selectedPercentileVal(): number Returns number Methods resetBias resetBias(): void Returns void resetContrast resetContrast(): void Returns void setAlpha setAlpha(alpha: number): void Parameters alpha: number Returns void setBias setBias(bias: number): void Parameters bias: number Returns void setColorMap setColorMap(colormap: string): void Parameters colormap: string Returns void setColorMapIndex setColorMapIndex(index: number): void Parameters index: number Returns void setContrast setContrast(contrast: number): void Parameters contrast: number Returns void setCustomScale setCustomScale(minVal: number, maxVal: number): void Parameters minVal: number maxVal: number Returns void setGamma setGamma(gamma: number): void Parameters gamma: number Returns void setHistChannel setHistChannel(val: number): void Parameters val: number Returns void setInverted setInverted(inverted: boolean): void Parameters inverted: boolean Returns void setPercentileRank setPercentileRank(rank: number): boolean Parameters rank: number Returns boolean setPreviewHistogramMax setPreviewHistogramMax(histogramMax: number): void Parameters histogramMax: number Returns void setPreviewHistogramMin setPreviewHistogramMin(histogramMin: number): void Parameters histogramMin: number Returns void setScaling setScaling(newScaling: FrameScaling): void Parameters newScaling: FrameScaling Returns void setStokesIndex setStokesIndex(val: number): void Parameters val: number Returns void setUseCubeHistogram setUseCubeHistogram(val: boolean): void Parameters val: boolean Returns void setUseCubeHistogramContours setUseCubeHistogramContours(val: boolean): void Parameters val: boolean Returns void setVisible setVisible(visible: boolean): void Parameters visible: boolean Returns void toggleVisibility toggleVisibility(): void Returns void updateChannelHistogram updateChannelHistogram(histogram: IHistogram): void Parameters histogram: IHistogram Returns void updateCubeHistogram updateCubeHistogram(histogram: IHistogram, progress: number): void Parameters histogram: IHistogram progress: number Returns void updateFrom updateFrom(other: RenderConfigStore): void Parameters other: RenderConfigStore Returns void updateFromWorkspace updateFromWorkspace(config: WorkspaceRenderConfig): void Parameters config: WorkspaceRenderConfig Returns void updateSiblings updateSiblings(): void Returns void publicstaticIsColormapValid IsColormapValid(colormap: string): boolean Parameters colormap: string Returns boolean publicstaticIsGammaValid IsGammaValid(gamma: number): boolean Parameters gamma: number Returns boolean publicstaticIsPercentileValid IsPercentileValid(percentile: number): boolean Parameters percentile: number Returns boolean publicstaticIsScalingValid IsScalingValid(scaling: FrameScaling): boolean Parameters scaling: FrameScaling Returns boolean","keywords":""},{"title":"RestFreqStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/RestFreqStore","content":"RestFreqStore Index Constructors constructor Properties customRestFreqheaderRestFreq Accessors defaultInfoinValidInputresetDisablerestFreqInHz Methods restoreDefaultssetCustomUnitsetCustomVal Constructors constructor new RestFreqStore(headerRestFreq: number): RestFreqStore Parameters headerRestFreq: number Returns RestFreqStore Properties customRestFreq customRestFreq: Freq readonlyheaderRestFreq headerRestFreq: Freq Accessors defaultInfo get defaultInfo(): string Returns string inValidInput get inValidInput(): boolean Returns boolean resetDisable get resetDisable(): boolean Returns boolean restFreqInHz get restFreqInHz(): number Returns number Methods restoreDefaults restoreDefaults(): void Returns void setCustomUnit setCustomUnit(val: FrequencyUnit): void Parameters val: FrequencyUnit Returns void setCustomVal setCustomVal(val: number): void Parameters val: number Returns void","keywords":""},{"title":"SnippetStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/SnippetStore","content":"SnippetStore Index Properties activeSnippetactiveSnippetNameisExecutingsnippetsToasterTimeout Accessors numSavedSnippetsvalidInputInstance Methods clearActiveSnippetdeleteSnippetexecuteCurrentSnippetfetchSnippetssaveSnippetsetActiveSnippetsetDefaultSnippetssetSnippetStringsnippetExists Properties activeSnippet activeSnippet: Snippet activeSnippetName activeSnippetName: string isExecuting isExecuting: boolean snippets snippets: Map&lt;string, Snippet&gt; publicstaticreadonlyToasterTimeout ToasterTimeout: 1500 = 1500 Accessors numSavedSnippets get numSavedSnippets(): number Returns number validInput get validInput(): boolean Returns boolean staticInstance get Instance(): SnippetStore Returns SnippetStore Methods clearActiveSnippet clearActiveSnippet(): void Returns void deleteSnippet deleteSnippet(name: string, silent?: boolean): Generator&lt;Promise&lt;any&gt;, boolean, unknown&gt; Parameters name: string silent: boolean = false Returns Generator&lt;Promise&lt;any&gt;, boolean, unknown&gt; executeCurrentSnippet executeCurrentSnippet(): Generator&lt;any, boolean, unknown&gt; Returns Generator&lt;any, boolean, unknown&gt; fetchSnippets fetchSnippets(): Generator&lt;Promise&lt;Map&lt;string, Snippet&gt;&gt;, void, unknown&gt; Returns Generator&lt;Promise&lt;Map&lt;string, Snippet&gt;&gt;, void, unknown&gt; saveSnippet saveSnippet(name: string, snippet: Snippet, silent?: boolean): Generator&lt;Promise&lt;any&gt;, boolean, unknown&gt; Parameters name: string snippet: Snippet silent: boolean = false Returns Generator&lt;Promise&lt;any&gt;, boolean, unknown&gt; setActiveSnippet setActiveSnippet(snippet: Snippet, name: string): void Parameters snippet: Snippet name: string Returns void setDefaultSnippets setDefaultSnippets(): void Returns void setSnippetString setSnippetString(val: string): void Parameters val: string Returns void publicsnippetExists snippetExists(name: string): boolean Parameters name: string Returns boolean","keywords":""},{"title":"SpatialProfileStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/SpatialProfileStore","content":"SpatialProfileStore Index Constructors constructor Properties channelfileIdprofilesregionIdvaluexy Methods getProfilesetProfilesetProfilesupdateFromStream Constructors constructor new SpatialProfileStore(fileId?: number, regionId?: number): SpatialProfileStore Parameters fileId: number = 0 regionId: number = 0 Returns SpatialProfileStore Properties channel channel: number readonlyfileId fileId: number profiles profiles: Map&lt;string, ProcessedSpatialProfile&gt; readonlyregionId regionId: number value value: number x x: number y y: number Methods publicgetProfile getProfile(coordinate: string): ProcessedSpatialProfile Parameters coordinate: string Returns ProcessedSpatialProfile setProfile setProfile(coordinate: string, profile: ProcessedSpatialProfile): void Parameters coordinate: string profile: ProcessedSpatialProfile Returns void setProfiles setProfiles(profiles: Map&lt;string, ProcessedSpatialProfile&gt;): void Parameters profiles: Map&lt;string, ProcessedSpatialProfile&gt; Returns void updateFromStream updateFromStream(spatialProfileData: ISpatialProfileData): void Parameters spatialProfileData: ISpatialProfileData Returns void","keywords":""},{"title":"RulerAnnotationStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/RulerAnnotationStore","content":"RulerAnnotationStore Hierarchy RegionStore RulerAnnotationStore Index Constructors constructor Properties activeFrameauxiliaryLineDashLengthauxiliaryLineVisiblecolorcontrolPointscoordinatecreatingdashLengtheditingfileIdfontfontSizefontStyleisSimplePolygonlineRegionSampleWidthlineWidthlockedmodifiedTimestampnameregionIdregionTyperotationtextOffsetAVAILABLE_ANNOTATION_TYPESAVAILABLE_REGION_TYPESMAX_DASH_LENGTHMAX_LINE_WIDTHMIN_LINE_WIDTHTARGET_VERTEX_COUNT Accessors boundingBoxboundingBoxAreacenterisAnnotationisClosedRegionisPreviewCutisTemporaryisValidnameStringregionPropertiessizewcsSize Methods beginCreatingbeginEditingendCreatingendEditingfocusCentergetAnnotationStylesgetAnnotationStylesForExportgetRegionApproximationinitializeStylessetAuxiliaryLineDashLengthsetAuxiliaryLineVisiblesetCentersetColorsetControlPointsetControlPointssetCoordinatesetDashLengthsetFontsetFontSizesetFontStylesetLineWidthsetLockedsetNamesetRegionIdsetRotationsetSizesetTextOffsettoggleLockGetRegionPropertiesIsRegionCustomIconIsRegionDashLengthValidIsRegionLineWidthValidIsRegionTypeValidRegionIconStringRegionTypeString Constructors constructor new RulerAnnotationStore(backendService: BackendService, fileId: number, activeFrame: FrameStore, controlPoints: Point2D[], regionType: RegionType, regionId?: number, rotation?: number, name?: string, color?: string, lineWidth?: number, dashLength?: number): RulerAnnotationStore Overrides RegionStore.constructor Parameters backendService: BackendService fileId: number activeFrame: FrameStore controlPoints: Point2D[] regionType: RegionType regionId: number = -1 rotation: number = 0 name: string = &quot;&quot; color: string = Colors.TURQUOISE5 lineWidth: number = 2 dashLength: number = 0 Returns RulerAnnotationStore Properties activeFrame activeFrame: FrameStore Inherited from RegionStore.activeFrame auxiliaryLineDashLength auxiliaryLineDashLength: number = 0 auxiliaryLineVisible auxiliaryLineVisible: boolean = true color color: string Inherited from RegionStore.color controlPoints controlPoints: Point2D[] Inherited from RegionStore.controlPoints coordinate coordinate: CoordinateMode Inherited from RegionStore.coordinate creating creating: boolean Inherited from RegionStore.creating dashLength dashLength: number Inherited from RegionStore.dashLength editing editing: boolean Inherited from RegionStore.editing readonlyfileId fileId: number Inherited from RegionStore.fileId font font: Font = Font.HELVETICA fontSize fontSize: number = 13 fontStyle fontStyle: FontStyle = FontStyle.NORMAL isSimplePolygon isSimplePolygon: boolean Inherited from RegionStore.isSimplePolygon lineRegionSampleWidth lineRegionSampleWidth: number = 3 Inherited from RegionStore.lineRegionSampleWidth lineWidth lineWidth: number Inherited from RegionStore.lineWidth locked locked: boolean = false Inherited from RegionStore.locked publicmodifiedTimestamp modifiedTimestamp: number Inherited from RegionStore.modifiedTimestamp name name: string Inherited from RegionStore.name regionId regionId: number Inherited from RegionStore.regionId regionType regionType: RegionType Inherited from RegionStore.regionType rotation rotation: number Inherited from RegionStore.rotation textOffset textOffset: Point2D = ... staticreadonlyAVAILABLE_ANNOTATION_TYPES AVAILABLE_ANNOTATION_TYPES: Map&lt;RegionType, string&gt; = ... Inherited from RegionStore.AVAILABLE_ANNOTATION_TYPES staticreadonlyAVAILABLE_REGION_TYPES AVAILABLE_REGION_TYPES: Map&lt;RegionType, string&gt; = ... Inherited from RegionStore.AVAILABLE_REGION_TYPES staticreadonlyMAX_DASH_LENGTH MAX_DASH_LENGTH: 50 = 50 Inherited from RegionStore.MAX_DASH_LENGTH staticreadonlyMAX_LINE_WIDTH MAX_LINE_WIDTH: 10 = 10 Inherited from RegionStore.MAX_LINE_WIDTH staticreadonlyMIN_LINE_WIDTH MIN_LINE_WIDTH: 0.5 = 0.5 Inherited from RegionStore.MIN_LINE_WIDTH staticreadonlyTARGET_VERTEX_COUNT TARGET_VERTEX_COUNT: 200 = 200 Inherited from RegionStore.TARGET_VERTEX_COUNT Accessors boundingBox get boundingBox(): Point2D Inherited from RegionStore.boundingBox Returns Point2D boundingBoxArea get boundingBoxArea(): number Inherited from RegionStore.boundingBoxArea Returns number center get center(): Point2D Inherited from RegionStore.center Returns Point2D isAnnotation get isAnnotation(): boolean Inherited from RegionStore.isAnnotation Returns boolean isClosedRegion get isClosedRegion(): boolean Inherited from RegionStore.isClosedRegion Returns boolean isPreviewCut get isPreviewCut(): boolean Inherited from RegionStore.isPreviewCut Returns boolean isTemporary get isTemporary(): boolean Inherited from RegionStore.isTemporary Returns boolean isValid get isValid(): boolean Inherited from RegionStore.isValid Returns boolean nameString get nameString(): string Inherited from RegionStore.nameString Returns string regionProperties get regionProperties(): string Inherited from RegionStore.regionProperties Returns string size get size(): Point2D Inherited from RegionStore.size Returns Point2D wcsSize get wcsSize(): Point2D Inherited from RegionStore.wcsSize Returns Point2D Methods beginCreating beginCreating(): void Inherited from RegionStore.beginCreating Returns void beginEditing beginEditing(): void Inherited from RegionStore.beginEditing Returns void endCreating endCreating(): Generator&lt;Promise&lt;ISetRegionAck&gt;, void, unknown&gt; Inherited from RegionStore.endCreating Returns Generator&lt;Promise&lt;ISetRegionAck&gt;, void, unknown&gt; endEditing endEditing(): void Inherited from RegionStore.endEditing Returns void focusCenter focusCenter(): void Inherited from RegionStore.focusCenter Returns void publicgetAnnotationStyles getAnnotationStyles(): { auxiliaryLineDashLength: number; auxiliaryLineVisible: boolean; font: Font; fontSize: number; fontStyle: FontStyle; textOffset: Point2D } Returns { auxiliaryLineDashLength: number; auxiliaryLineVisible: boolean; font: Font; fontSize: number; fontStyle: FontStyle; textOffset: Point2D } auxiliaryLineDashLength: number auxiliaryLineVisible: boolean font: Font fontSize: number fontStyle: FontStyle textOffset: Point2D publicgetAnnotationStylesForExport getAnnotationStylesForExport(): { coordinateSystem: string; font: Font; fontSize: number; fontStyle: FontStyle } Returns { coordinateSystem: string; font: Font; fontSize: number; fontStyle: FontStyle } coordinateSystem: string font: Font fontSize: number fontStyle: FontStyle publicgetRegionApproximation getRegionApproximation(astTransform: any, spatiallyMatched?: boolean): { hypotenuseApproximatePoints: number[]; xApproximatePoints: number[]; yApproximatePoints: number[] } Overrides RegionStore.getRegionApproximation Parameters astTransform: any optionalspatiallyMatched: boolean Returns { hypotenuseApproximatePoints: number[]; xApproximatePoints: number[]; yApproximatePoints: number[] } hypotenuseApproximatePoints: number[] xApproximatePoints: number[] yApproximatePoints: number[] publicinitializeStyles initializeStyles(annotationStyles: { auxiliaryLineDashLength: number; auxiliaryLineVisible: boolean; font: Font; fontSize: number; fontStyle: FontStyle; textOffset: Point2D }): void Parameters annotationStyles: { auxiliaryLineDashLength: number; auxiliaryLineVisible: boolean; font: Font; fontSize: number; fontStyle: FontStyle; textOffset: Point2D } Returns void setAuxiliaryLineDashLength setAuxiliaryLineDashLength(length: number): void Parameters length: number Returns void setAuxiliaryLineVisible setAuxiliaryLineVisible(isVisible: boolean): void Parameters isVisible: boolean Returns void setCenter setCenter(p: Point2D, skipUpdate?: boolean): void Inherited from RegionStore.setCenter Parameters p: Point2D skipUpdate: boolean = false Returns void setColor setColor(color: string): void Inherited from RegionStore.setColor Parameters color: string Returns void setControlPoint setControlPoint(index: number, p: Point2D, skipUpdate?: boolean): void Inherited from RegionStore.setControlPoint Parameters index: number p: Point2D skipUpdate: boolean = false Returns void setControlPoints setControlPoints(points: Point2D[], skipUpdate?: boolean, shapeChanged?: boolean): void Inherited from RegionStore.setControlPoints Parameters points: Point2D[] skipUpdate: boolean = false shapeChanged: boolean = true Returns void setCoordinate setCoordinate(coordinate: CoordinateMode): void Inherited from RegionStore.setCoordinate Parameters coordinate: CoordinateMode Returns void setDashLength setDashLength(dashLength: number): void Inherited from RegionStore.setDashLength Parameters dashLength: number Returns void setFont setFont(font: Font): void Parameters font: Font Returns void setFontSize setFontSize(fontSize: number): void Parameters fontSize: number Returns void setFontStyle setFontStyle(fontStyle: string): void Parameters fontStyle: string Returns void setLineWidth setLineWidth(lineWidth: number): void Inherited from RegionStore.setLineWidth Parameters lineWidth: number Returns void setLocked setLocked(locked: boolean): void Inherited from RegionStore.setLocked Parameters locked: boolean Returns void setName setName(name: string): void Inherited from RegionStore.setName Parameters name: string Returns void setRegionId setRegionId(id: number): void Inherited from RegionStore.setRegionId Parameters id: number Returns void setRotation setRotation(angle: number, skipUpdate?: boolean): void Inherited from RegionStore.setRotation Parameters angle: number skipUpdate: boolean = false Returns void setSize setSize(p: Point2D, skipUpdate?: boolean): void Inherited from RegionStore.setSize Parameters p: Point2D skipUpdate: boolean = false Returns void setTextOffset setTextOffset(offset: number, isX: boolean): void Parameters offset: number isX: boolean Returns void toggleLock toggleLock(): void Inherited from RegionStore.toggleLock Returns void publicstaticGetRegionProperties GetRegionProperties(regionType: RegionType, controlPoints: Point2D[], rotation: number): string Inherited from RegionStore.GetRegionProperties Parameters regionType: RegionType controlPoints: Point2D[] rotation: number Returns string publicstaticIsRegionCustomIcon IsRegionCustomIcon(regionType: RegionType): boolean Inherited from RegionStore.IsRegionCustomIcon Parameters regionType: RegionType Returns boolean publicstaticIsRegionDashLengthValid IsRegionDashLengthValid(regionDashLength: number): boolean Inherited from RegionStore.IsRegionDashLengthValid Parameters regionDashLength: number Returns boolean publicstaticIsRegionLineWidthValid IsRegionLineWidthValid(regionLineWidth: number): boolean Inherited from RegionStore.IsRegionLineWidthValid Parameters regionLineWidth: number Returns boolean publicstaticIsRegionTypeValid IsRegionTypeValid(regionType: RegionType): boolean Inherited from RegionStore.IsRegionTypeValid Parameters regionType: RegionType Returns boolean publicstaticRegionIconString RegionIconString(regionType: RegionType): any Inherited from RegionStore.RegionIconString Parameters regionType: RegionType Returns any publicstaticRegionTypeString RegionTypeString(regionType: RegionType): string Inherited from RegionStore.RegionTypeString Parameters regionType: RegionType Returns string","keywords":""},{"title":"SpatialProfileWidgetStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/SpatialProfileWidgetStore","content":"SpatialProfileWidgetStore Hierarchy RegionWidgetStore SpatialProfileWidgetStore Index Constructors constructor Properties coordinatecursorXfileIdisMouseMoveIntoLinePlotslinePlotInitXYBoundarieslinePlotPointSizelineWidthmarkerTextVisiblemaxXmaxYmeanRmsVisibleminXminYplotTypeprimaryLineColorregionIdMapselectedStokessettingsTabIdsmoothingStoretypewcsAxisVisible Accessors effectiveFrameeffectivePolarizationeffectiveRegioneffectiveRegionIdeffectiveRegionInfoframeOptionsfullCoordinateisAutoScaledXisAutoScaledYisEffectiveFrameEqualToActiveFrameisLineOrPolylineisXProfilematchesSelectedRegionstokesOptions Methods clearFrameEntryclearRegionMapclearXBoundsclearXYBoundsclearYBoundsinitinitXYBoundariessetCoordinatesetCursorsetFileIdsetLinePlotPointSizesetLineRegionSampleWidthsetLineWidthsetMarkerTextVisiblesetMeanRmsVisiblesetMouseMoveIntoLinePlotssetPlotTypesetPrimaryLineColorsetRegionIdsetSelectedStokessetSettingsTabIdsetWcsAxisVisiblesetXBoundssetXYBoundssetYBoundstoConfigCalculateRequirementsArrayCalculateRequirementsMapDiffSpatialRequirements Constructors constructor new SpatialProfileWidgetStore(coordinate?: string): SpatialProfileWidgetStore Overrides RegionWidgetStore.constructor Parameters coordinate: string = &quot;x&quot; Returns SpatialProfileWidgetStore Properties coordinate coordinate: string cursorX cursorX: number fileId fileId: number Inherited from RegionWidgetStore.fileId isMouseMoveIntoLinePlots isMouseMoveIntoLinePlots: boolean linePlotInitXYBoundaries linePlotInitXYBoundaries: { maxXVal: number; maxYVal: number; minXVal: number; minYVal: number } Type declaration maxXVal: number maxYVal: number minXVal: number minYVal: number linePlotPointSize linePlotPointSize: number lineWidth lineWidth: number markerTextVisible markerTextVisible: boolean maxX maxX: number maxY maxY: number meanRmsVisible meanRmsVisible: boolean minX minX: number minY minY: number plotType plotType: PlotType primaryLineColor primaryLineColor: string regionIdMap regionIdMap: Map&lt;number, number&gt; Inherited from RegionWidgetStore.regionIdMap selectedStokes selectedStokes: string settingsTabId settingsTabId: SpatialProfilerSettingsTabs readonlysmoothingStore smoothingStore: ProfileSmoothingStore type type: RegionsType Inherited from RegionWidgetStore.type wcsAxisVisible wcsAxisVisible: boolean Accessors effectiveFrame get effectiveFrame(): FrameStore Inherited from RegionWidgetStore.effectiveFrame Returns FrameStore effectivePolarization get effectivePolarization(): POLARIZATIONS Returns POLARIZATIONS effectiveRegion get effectiveRegion(): RegionStore Inherited from RegionWidgetStore.effectiveRegion Returns RegionStore effectiveRegionId get effectiveRegionId(): number Inherited from RegionWidgetStore.effectiveRegionId Returns number effectiveRegionInfo get effectiveRegionInfo(): string Inherited from RegionWidgetStore.effectiveRegionInfo Returns string frameOptions get frameOptions(): IOptionProps[] Inherited from RegionWidgetStore.frameOptions Returns IOptionProps[] fullCoordinate get fullCoordinate(): string Returns string isAutoScaledX get isAutoScaledX(): boolean Returns boolean isAutoScaledY get isAutoScaledY(): boolean Returns boolean isEffectiveFrameEqualToActiveFrame get isEffectiveFrameEqualToActiveFrame(): boolean Inherited from RegionWidgetStore.isEffectiveFrameEqualToActiveFrame Returns boolean isLineOrPolyline get isLineOrPolyline(): boolean Returns boolean isXProfile get isXProfile(): boolean Returns boolean matchesSelectedRegion get matchesSelectedRegion(): boolean Inherited from RegionWidgetStore.matchesSelectedRegion Returns boolean stokesOptions get stokesOptions(): LineOption[] Returns LineOption[] Methods clearFrameEntry clearFrameEntry(fileId: number): void Inherited from RegionWidgetStore.clearFrameEntry Parameters fileId: number Returns void clearRegionMap clearRegionMap(): void Inherited from RegionWidgetStore.clearRegionMap Returns void clearXBounds clearXBounds(): void Returns void clearXYBounds clearXYBounds(): void Returns void clearYBounds clearYBounds(): void Returns void publicinit init(widgetSettings: any): void Parameters widgetSettings: any Returns void initXYBoundaries initXYBoundaries(minXVal: number, maxXVal: number, minYVal: number, maxYVal: number): void Parameters minXVal: number maxXVal: number minYVal: number maxYVal: number Returns void setCoordinate setCoordinate(coordinate: string): void Parameters coordinate: string Returns void setCursor setCursor(cursorVal: number): void Parameters cursorVal: number Returns void setFileId setFileId(fileId: number): void Inherited from RegionWidgetStore.setFileId Parameters fileId: number Returns void setLinePlotPointSize setLinePlotPointSize(val: number): void Parameters val: number Returns void setLineRegionSampleWidth setLineRegionSampleWidth(val: number): void Parameters val: number Returns void setLineWidth setLineWidth(val: number): void Parameters val: number Returns void setMarkerTextVisible setMarkerTextVisible(val: boolean): void Parameters val: boolean Returns void setMeanRmsVisible setMeanRmsVisible(val: boolean): void Parameters val: boolean Returns void setMouseMoveIntoLinePlots setMouseMoveIntoLinePlots(val: boolean): void Parameters val: boolean Returns void setPlotType setPlotType(val: PlotType): void Parameters val: PlotType Returns void setPrimaryLineColor setPrimaryLineColor(color: string): void Parameters color: string Returns void setRegionId setRegionId(fileId: number, regionId: number): void Overrides RegionWidgetStore.setRegionId Parameters fileId: number regionId: number Returns void setSelectedStokes setSelectedStokes(stokes: string): void Parameters stokes: string Returns void setSettingsTabId setSettingsTabId(val: SpatialProfilerSettingsTabs): void Parameters val: SpatialProfilerSettingsTabs Returns void setWcsAxisVisible setWcsAxisVisible(val: boolean): void Parameters val: boolean Returns void setXBounds setXBounds(minVal: number, maxVal: number): void Parameters minVal: number maxVal: number Returns void setXYBounds setXYBounds(minX: number, maxX: number, minY: number, maxY: number): void Parameters minX: number maxX: number minY: number maxY: number Returns void setYBounds setYBounds(minVal: number, maxVal: number): void Parameters minVal: number maxVal: number Returns void publictoConfig toConfig(): { coordinate: string; linePlotPointSize: number; lineWidth: number; maxXVal: number; maxYVal: number; meanRmsVisible: boolean; minXVal: number; minYVal: number; plotType: PlotType; primaryLineColor: string; wcsAxisVisible: boolean } Returns { coordinate: string; linePlotPointSize: number; lineWidth: number; maxXVal: number; maxYVal: number; meanRmsVisible: boolean; minXVal: number; minYVal: number; plotType: PlotType; primaryLineColor: string; wcsAxisVisible: boolean } coordinate: string linePlotPointSize: number lineWidth: number maxXVal: number maxYVal: number meanRmsVisible: boolean minXVal: number minYVal: number plotType: PlotType primaryLineColor: string wcsAxisVisible: boolean publicstaticCalculateRequirementsArray CalculateRequirementsArray(widgetsMap: Map&lt;string, RegionWidgetStore&gt;): Map&lt;number, number[]&gt; Inherited from RegionWidgetStore.CalculateRequirementsArray Parameters widgetsMap: Map&lt;string, RegionWidgetStore&gt; Returns Map&lt;number, number[]&gt; publicstaticCalculateRequirementsMap CalculateRequirementsMap(widgetsMap: Map&lt;string, SpatialProfileWidgetStore&gt;): Map&lt;number, Map&lt;number, SetSpatialRequirements&gt;&gt; Parameters widgetsMap: Map&lt;string, SpatialProfileWidgetStore&gt; Returns Map&lt;number, Map&lt;number, SetSpatialRequirements&gt;&gt; publicstaticDiffSpatialRequirements DiffSpatialRequirements(originalRequirements: Map&lt;number, Map&lt;number, SetSpatialRequirements&gt;&gt;, updatedRequirements: Map&lt;number, Map&lt;number, SetSpatialRequirements&gt;&gt;): SetSpatialRequirements[] Parameters originalRequirements: Map&lt;number, Map&lt;number, SetSpatialRequirements&gt;&gt; updatedRequirements: Map&lt;number, Map&lt;number, SetSpatialRequirements&gt;&gt; Returns SetSpatialRequirements[]","keywords":""},{"title":"SpectralLineQueryWidgetStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/SpectralLineQueryWidgetStore","content":"SpectralLineQueryWidgetStore Index Constructors constructor Properties columnHeaderscontrolHeaderfilterResultintensityLimitEnabledintensityLimitValueisQueryingnumDataRowsqueryqueryRangequeryRangeByCenterqueryRangeTypequeryResultTableRefqueryUnitredshiftInputredshiftTypeselectedSpectralProfilerID Accessors displayedColumnHeadersfiltersfullRowIndexesnumSelectedLinesnumVisibleRowsredshiftFactorresultTableColumnWidthsresultTableInfo Methods filtergetSelectedLinesresetFilterselectSingleLinesetColumnFiltersetHeaderDisplaysetIntensityLimitValuesetQueryRangesetQueryRangeByCentersetQueryRangeTypesetQueryResultTableRefsetQueryUnitsetRedshiftInputsetRedshiftTypesetResultTableColumnWidthsetSelectedSpectralProfilertoggleIntensityLimit Constructors constructor new SpectralLineQueryWidgetStore(): SpectralLineQueryWidgetStore Returns SpectralLineQueryWidgetStore Properties columnHeaders columnHeaders: ICatalogHeader[] controlHeader controlHeader: Map&lt;string, ControlHeader&gt; filterResult filterResult: Map&lt;number, ProcessedColumnData&gt; intensityLimitEnabled intensityLimitEnabled: boolean intensityLimitValue intensityLimitValue: number isQuerying isQuerying: boolean numDataRows numDataRows: number query query: any = ... queryRange queryRange: NumberRange queryRangeByCenter queryRangeByCenter: NumberRange queryRangeType queryRangeType: SpectralLineQueryRangeType queryResultTableRef queryResultTableRef: Table queryUnit queryUnit: SpectralLineQueryUnit redshiftInput redshiftInput: number redshiftType redshiftType: RedshiftType selectedSpectralProfilerID selectedSpectralProfilerID: string Accessors displayedColumnHeaders get displayedColumnHeaders(): CatalogHeader[] Returns CatalogHeader[] filters get filters(): string[] Returns string[] fullRowIndexes get fullRowIndexes(): number[] Returns number[] numSelectedLines get numSelectedLines(): number Returns number numVisibleRows get numVisibleRows(): number Returns number redshiftFactor get redshiftFactor(): number Returns number resultTableColumnWidths get resultTableColumnWidths(): number[] Returns number[] resultTableInfo get resultTableInfo(): string Returns string Methods filter filter(): void Returns void publicgetSelectedLines getSelectedLines(): SpectralLine[] Returns SpectralLine[] resetFilter resetFilter(): void Returns void selectSingleLine selectSingleLine(rowIndex: number): void Parameters rowIndex: number Returns void setColumnFilter setColumnFilter(filterInput: string, columnName: string): void Parameters filterInput: string columnName: string Returns void setHeaderDisplay setHeaderDisplay(val: boolean, columnName: string): void Parameters val: boolean columnName: string Returns void setIntensityLimitValue setIntensityLimitValue(intensityLimitValue: number): void Parameters intensityLimitValue: number Returns void setQueryRange setQueryRange(queryRange: NumberRange): void Parameters queryRange: NumberRange Returns void setQueryRangeByCenter setQueryRangeByCenter(queryRange: NumberRange): void Parameters queryRange: NumberRange Returns void setQueryRangeType setQueryRangeType(queryRangeType: SpectralLineQueryRangeType): void Parameters queryRangeType: SpectralLineQueryRangeType Returns void setQueryResultTableRef setQueryResultTableRef(ref: Table): void Parameters ref: Table Returns void setQueryUnit setQueryUnit(queryUnit: SpectralLineQueryUnit): void Parameters queryUnit: SpectralLineQueryUnit Returns void setRedshiftInput setRedshiftInput(input: number): void Parameters input: number Returns void setRedshiftType setRedshiftType(redshiftType: RedshiftType): void Parameters redshiftType: RedshiftType Returns void setResultTableColumnWidth setResultTableColumnWidth(width: number, columnName: string): void Parameters width: number columnName: string Returns void setSelectedSpectralProfiler setSelectedSpectralProfiler(widgetID: string): void Parameters widgetID: string Returns void toggleIntensityLimit toggleIntensityLimit(): void Returns void","keywords":""},{"title":"SpectralProfileSelectionStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/SpectralProfileSelectionStore","content":"SpectralProfileSelectionStore Index Constructors constructor Properties activeProfileCategoryselectedCoordinatesselectedRegionIdsselectedStatsTypes Accessors coordinateOptionseffectiveRegionIdframeOptionsisCoordinatesIncludingNonIntensityUnitisCoordinatesPFtotalPFlinearOnlyisCoordinatesPangleOnlyisSameCoordinatesUnitisSameStatsTypeUnitisSelectingActiveFrameisSelectingActiveRegionisShowingProfilesOfMultiImagesisSingleProfileModeisStatsTypeFluxDensityOnlyisStatsTypeSelectionAvailableisStatsTypeSumSqOnlyprofileOptionsprofileOrderedKeysprofilesprofilesPlotNameregionOptionsselectedFrameselectedFrameFileIdselectedFrameWidgetFileIdstatsTypeOptions Methods getFormattedSpectralConfigsremoveSelectedRegionMultiModeselectCoordinateMultiModeselectCoordinateSingleModeselectFrameselectRegionMultiModeselectRegionSingleModeselectStatMultiModeselectStatSingleModesetActiveProfileCategory Constructors constructor new SpectralProfileSelectionStore(widgetStore: SpectralProfileWidgetStore, coordinate: string): SpectralProfileSelectionStore Parameters widgetStore: SpectralProfileWidgetStore coordinate: string Returns SpectralProfileSelectionStore Properties activeProfileCategory activeProfileCategory: MultiProfileCategory selectedCoordinates selectedCoordinates: string[] selectedRegionIds selectedRegionIds: number[] selectedStatsTypes selectedStatsTypes: StatsType[] Accessors coordinateOptions get coordinateOptions(): LineOption[] Returns LineOption[] effectiveRegionId get effectiveRegionId(): number Returns number frameOptions get frameOptions(): LineOption[] Returns LineOption[] isCoordinatesIncludingNonIntensityUnit get isCoordinatesIncludingNonIntensityUnit(): boolean Returns boolean isCoordinatesPFtotalPFlinearOnly get isCoordinatesPFtotalPFlinearOnly(): boolean Returns boolean isCoordinatesPangleOnly get isCoordinatesPangleOnly(): boolean Returns boolean isSameCoordinatesUnit get isSameCoordinatesUnit(): boolean Returns boolean isSameStatsTypeUnit get isSameStatsTypeUnit(): boolean Returns boolean isSelectingActiveFrame get isSelectingActiveFrame(): boolean Returns boolean isSelectingActiveRegion get isSelectingActiveRegion(): boolean Returns boolean isShowingProfilesOfMultiImages get isShowingProfilesOfMultiImages(): boolean Returns boolean isSingleProfileMode get isSingleProfileMode(): boolean Returns boolean isStatsTypeFluxDensityOnly get isStatsTypeFluxDensityOnly(): boolean Returns boolean isStatsTypeSelectionAvailable get isStatsTypeSelectionAvailable(): boolean Returns boolean isStatsTypeSumSqOnly get isStatsTypeSumSqOnly(): boolean Returns boolean profileOptions get profileOptions(): LineOption[] Returns LineOption[] profileOrderedKeys get profileOrderedKeys(): LineKey[] Returns LineKey[] profiles get profiles(): { channelSecondaryValues: number[]; channelValues: number[]; colorKey: string; comments: string[]; data: ProcessedSpectralProfile; intensityConfig: IntensityConfig; intensityUnit: string; label: { image: string; plot: string } }[] Returns { channelSecondaryValues: number[]; channelValues: number[]; colorKey: string; comments: string[]; data: ProcessedSpectralProfile; intensityConfig: IntensityConfig; intensityUnit: string; label: { image: string; plot: string } }[] profilesPlotName get profilesPlotName(): { image: string; plot: string } Returns { image: string; plot: string } image: string plot: string regionOptions get regionOptions(): LineOption[] Returns LineOption[] selectedFrame get selectedFrame(): FrameStore Returns FrameStore selectedFrameFileId get selectedFrameFileId(): number Returns number selectedFrameWidgetFileId get selectedFrameWidgetFileId(): number Returns number statsTypeOptions get statsTypeOptions(): LineOption[] Returns LineOption[] Methods publicgetFormattedSpectralConfigs getFormattedSpectralConfigs(): SpectralConfig[] Returns SpectralConfig[] removeSelectedRegionMultiMode removeSelectedRegionMultiMode(regionId: number): void Parameters regionId: number Returns void selectCoordinateMultiMode selectCoordinateMultiMode(coordinate: string, itemIndex: number): void Parameters coordinate: string itemIndex: number Returns void selectCoordinateSingleMode selectCoordinateSingleMode(coordinate: string): void Parameters coordinate: string Returns void selectFrame selectFrame(fileId: number): void Parameters fileId: number Returns void selectRegionMultiMode selectRegionMultiMode(regionId: number, itemIndex: number): void Parameters regionId: number itemIndex: number Returns void selectRegionSingleMode selectRegionSingleMode(regionId: number): void Parameters regionId: number Returns void selectStatMultiMode selectStatMultiMode(statsType: StatsType, itemIndex: number): void Parameters statsType: StatsType itemIndex: number Returns void selectStatSingleMode selectStatSingleMode(statsType: StatsType): void Parameters statsType: StatsType Returns void setActiveProfileCategory setActiveProfileCategory(profileCategory: MultiProfileCategory): void Parameters profileCategory: MultiProfileCategory Returns void","keywords":""},{"title":"SpectralProfileStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/SpectralProfileStore","content":"SpectralProfileStore Index Constructors constructor Properties fileIdprofilesregionId Methods getProfileresetProfilesProgresssetProfile Constructors constructor new SpectralProfileStore(fileId?: number, regionId?: number): SpectralProfileStore Parameters fileId: number = 0 regionId: number = 0 Returns SpectralProfileStore Properties readonlyfileId fileId: number profiles profiles: Map&lt;string, ObservableMap&lt;StatsType, ProcessedSpectralProfile&gt;&gt; readonlyregionId regionId: number Methods publicgetProfile getProfile(coordinate: string, statsType: StatsType): ProcessedSpectralProfile Parameters coordinate: string statsType: StatsType Returns ProcessedSpectralProfile resetProfilesProgress resetProfilesProgress(): void Returns void setProfile setProfile(profile: ProcessedSpectralProfile): void Parameters profile: ProcessedSpectralProfile Returns void","keywords":""},{"title":"StatsWidgetStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/StatsWidgetStore","content":"StatsWidgetStore Hierarchy RegionWidgetStore StatsWidgetStore Index Constructors constructor Properties coordinatefileIdregionIdMaptype Accessors effectiveFrameeffectivePolarizationeffectiveRegioneffectiveRegionIdeffectiveRegionInfoframeOptionsisEffectiveFrameEqualToActiveFramematchesSelectedRegion Methods clearFrameEntryclearRegionMapsetCoordinatesetFileIdsetRegionIdCalculateRequirementsArrayCalculateRequirementsMapDiffStatsRequirements Constructors constructor new StatsWidgetStore(): StatsWidgetStore Overrides RegionWidgetStore.constructor Returns StatsWidgetStore Properties coordinate coordinate: string fileId fileId: number Inherited from RegionWidgetStore.fileId regionIdMap regionIdMap: Map&lt;number, number&gt; Inherited from RegionWidgetStore.regionIdMap type type: RegionsType Inherited from RegionWidgetStore.type Accessors effectiveFrame get effectiveFrame(): FrameStore Inherited from RegionWidgetStore.effectiveFrame Returns FrameStore effectivePolarization get effectivePolarization(): POLARIZATIONS Returns POLARIZATIONS effectiveRegion get effectiveRegion(): RegionStore Inherited from RegionWidgetStore.effectiveRegion Returns RegionStore effectiveRegionId get effectiveRegionId(): number Inherited from RegionWidgetStore.effectiveRegionId Returns number effectiveRegionInfo get effectiveRegionInfo(): string Inherited from RegionWidgetStore.effectiveRegionInfo Returns string frameOptions get frameOptions(): IOptionProps[] Inherited from RegionWidgetStore.frameOptions Returns IOptionProps[] isEffectiveFrameEqualToActiveFrame get isEffectiveFrameEqualToActiveFrame(): boolean Inherited from RegionWidgetStore.isEffectiveFrameEqualToActiveFrame Returns boolean matchesSelectedRegion get matchesSelectedRegion(): boolean Inherited from RegionWidgetStore.matchesSelectedRegion Returns boolean Methods clearFrameEntry clearFrameEntry(fileId: number): void Inherited from RegionWidgetStore.clearFrameEntry Parameters fileId: number Returns void clearRegionMap clearRegionMap(): void Inherited from RegionWidgetStore.clearRegionMap Returns void setCoordinate setCoordinate(coordinate: string): void Parameters coordinate: string Returns void setFileId setFileId(fileId: number): void Inherited from RegionWidgetStore.setFileId Parameters fileId: number Returns void setRegionId setRegionId(fileId: number, regionId: number): void Inherited from RegionWidgetStore.setRegionId Parameters fileId: number regionId: number Returns void publicstaticCalculateRequirementsArray CalculateRequirementsArray(widgetsMap: Map&lt;string, RegionWidgetStore&gt;): Map&lt;number, number[]&gt; Inherited from RegionWidgetStore.CalculateRequirementsArray Parameters widgetsMap: Map&lt;string, RegionWidgetStore&gt; Returns Map&lt;number, number[]&gt; publicstaticCalculateRequirementsMap CalculateRequirementsMap(widgetsMap: Map&lt;string, StatsWidgetStore&gt;): Map&lt;number, Map&lt;number, SetStatsRequirements&gt;&gt; Parameters widgetsMap: Map&lt;string, StatsWidgetStore&gt; Returns Map&lt;number, Map&lt;number, SetStatsRequirements&gt;&gt; publicstaticDiffStatsRequirements DiffStatsRequirements(originalRequirements: Map&lt;number, Map&lt;number, SetStatsRequirements&gt;&gt;, updatedRequirements: Map&lt;number, Map&lt;number, SetStatsRequirements&gt;&gt;): SetStatsRequirements[] Parameters originalRequirements: Map&lt;number, Map&lt;number, SetStatsRequirements&gt;&gt; updatedRequirements: Map&lt;number, Map&lt;number, SetStatsRequirements&gt;&gt; Returns SetStatsRequirements[]","keywords":""},{"title":"SpectralProfileWidgetStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/SpectralProfileWidgetStore","content":"SpectralProfileWidgetStore Hierarchy RegionWidgetStore SpectralProfileWidgetStore Index Constructors constructor Properties channelchannelValueRangecursorXfileIdfittingStoreintensityUnitisHighlightedisMouseMoveIntoLinePlotsisStreamingDatakeeplineColorMaplinePlotInitXYBoundarieslinePlotPointSizelineWidthmarkerTextVisiblemaskRangemaxXmaxYmeanRmsVisibleminXminYmomentMaskmomentRegionIdplotTypeprimaryLineColorprofileSelectionStoreregionIdMapsecondaryAxisCursorInfoVisibleselectedMomentsselectingModesettingsTabIdsmoothingStoretypePRIMARY_LINE_KEY Accessors effectiveFrameeffectiveRegioneffectiveRegionIdeffectiveRegionInfoframeOptionsintensityOptionsisAutoScaledXisAutoScaledYisEffectiveFrameEqualToActiveFrameisIntensityConvertibleisMomentRegionValidisSelectingMomentChannelRangeisSelectingMomentMaskRangematchesSelectedRegionmomentRegionInfomomentRegionOptionsplotDataprofileNumselectedRangetransformedSpectralLinesyUnit Methods addSpectralLinesclearFrameEntryclearMomentRangeSelectingModeclearProfileColorsclearRegionMapclearSelectedMomentsclearSpectralLinesclearXBoundsclearXYBoundsclearYBoundsdeselectMomentgetProfileColorinitinitXYBoundariesisMomentSelectedremoveMomentByIndexremoveProfileColorrequestMomentrequestingMomentCancelledselectFrameselectMomentselectMomentRegionsetChannelsetCursorsetFileIdsetHighlightedsetKeepsetLinePlotPointSizesetLineWidthsetMarkerTextVisiblesetMeanRmsVisiblesetMomentMasksetMomentRangeSelectingModesetMouseMoveIntoLinePlotssetMultiProfileIntensityUnitsetPlotTypesetProfileColorsetRegionIdsetSecondaryAxisCursorInfoVisiblesetSelectedChannelRangesetSelectedMaskRangesetSettingsTabIdsetSpectralCoordinatesetSpectralCoordinateSecondarysetSpectralSystemsetXBoundssetXYBoundssetYBoundstoConfigupdateStreamingDataStatusCalculateRequirementsArrayCalculateRequirementsMapDiffSpectralRequirements Constructors constructor new SpectralProfileWidgetStore(coordinate?: string): SpectralProfileWidgetStore Overrides RegionWidgetStore.constructor Parameters coordinate: string = &quot;z&quot; Returns SpectralProfileWidgetStore Properties channel channel: number channelValueRange channelValueRange: NumberRange cursorX cursorX: number fileId fileId: number Inherited from RegionWidgetStore.fileId readonlyfittingStore fittingStore: ProfileFittingStore intensityUnit intensityUnit: string isHighlighted isHighlighted: boolean isMouseMoveIntoLinePlots isMouseMoveIntoLinePlots: boolean isStreamingData isStreamingData: boolean keep keep: boolean lineColorMap lineColorMap: Map&lt;LineKey, string&gt; linePlotInitXYBoundaries linePlotInitXYBoundaries: { maxXVal: number; maxYVal: number; minXVal: number; minYVal: number } Type declaration maxXVal: number maxYVal: number minXVal: number minYVal: number linePlotPointSize linePlotPointSize: number lineWidth lineWidth: number markerTextVisible markerTextVisible: boolean maskRange maskRange: NumberRange maxX maxX: number maxY maxY: number meanRmsVisible meanRmsVisible: boolean minX minX: number minY minY: number momentMask momentMask: MomentMask momentRegionId momentRegionId: number plotType plotType: PlotType primaryLineColor primaryLineColor: string readonlyprofileSelectionStore profileSelectionStore: SpectralProfileSelectionStore regionIdMap regionIdMap: Map&lt;number, number&gt; Inherited from RegionWidgetStore.regionIdMap secondaryAxisCursorInfoVisible secondaryAxisCursorInfoVisible: boolean selectedMoments selectedMoments: Moment[] selectingMode selectingMode: MomentSelectingMode settingsTabId settingsTabId: SpectralProfilerSettingsTabs readonlysmoothingStore smoothingStore: ProfileSmoothingStore type type: RegionsType Inherited from RegionWidgetStore.type publicstaticreadonlyPRIMARY_LINE_KEY PRIMARY_LINE_KEY: Primary = &quot;Primary&quot; Accessors effectiveFrame get effectiveFrame(): FrameStore Inherited from RegionWidgetStore.effectiveFrame Returns FrameStore effectiveRegion get effectiveRegion(): RegionStore Inherited from RegionWidgetStore.effectiveRegion Returns RegionStore effectiveRegionId get effectiveRegionId(): number Inherited from RegionWidgetStore.effectiveRegionId Returns number effectiveRegionInfo get effectiveRegionInfo(): string Inherited from RegionWidgetStore.effectiveRegionInfo Returns string frameOptions get frameOptions(): IOptionProps[] Inherited from RegionWidgetStore.frameOptions Returns IOptionProps[] intensityOptions get intensityOptions(): string[] Returns string[] isAutoScaledX get isAutoScaledX(): boolean Returns boolean isAutoScaledY get isAutoScaledY(): boolean Returns boolean isEffectiveFrameEqualToActiveFrame get isEffectiveFrameEqualToActiveFrame(): boolean Inherited from RegionWidgetStore.isEffectiveFrameEqualToActiveFrame Returns boolean isIntensityConvertible get isIntensityConvertible(): boolean Returns boolean isMomentRegionValid get isMomentRegionValid(): boolean Returns boolean isSelectingMomentChannelRange get isSelectingMomentChannelRange(): boolean Returns boolean isSelectingMomentMaskRange get isSelectingMomentMaskRange(): boolean Returns boolean matchesSelectedRegion get matchesSelectedRegion(): boolean Inherited from RegionWidgetStore.matchesSelectedRegion Returns boolean momentRegionInfo get momentRegionInfo(): string Returns string momentRegionOptions get momentRegionOptions(): IOptionProps[] Returns IOptionProps[] plotData get plotData(): MultiPlotData Returns MultiPlotData profileNum get profileNum(): number Returns number selectedRange get selectedRange(): { center: number; isHorizontal: boolean; width: number } Returns { center: number; isHorizontal: boolean; width: number } center: number isHorizontal: boolean width: number transformedSpectralLines get transformedSpectralLines(): SpectralLine[] Returns SpectralLine[] yUnit get yUnit(): string Returns string Methods addSpectralLines addSpectralLines(spectralLines: SpectralLine[]): void Parameters spectralLines: SpectralLine[] Returns void clearFrameEntry clearFrameEntry(fileId: number): void Inherited from RegionWidgetStore.clearFrameEntry Parameters fileId: number Returns void clearMomentRangeSelectingMode clearMomentRangeSelectingMode(): void Returns void clearProfileColors clearProfileColors(): void Returns void clearRegionMap clearRegionMap(): void Inherited from RegionWidgetStore.clearRegionMap Returns void clearSelectedMoments clearSelectedMoments(): void Returns void clearSpectralLines clearSpectralLines(): void Returns void clearXBounds clearXBounds(): void Returns void clearXYBounds clearXYBounds(): void Returns void clearYBounds clearYBounds(): void Returns void deselectMoment deselectMoment(deselected: Moment): void Parameters deselected: Moment Returns void getProfileColor getProfileColor(lineKey: LineKey): string Parameters lineKey: LineKey Returns string publicinit init(widgetSettings: any): void Parameters widgetSettings: any Returns void initXYBoundaries initXYBoundaries(minXVal: number, maxXVal: number, minYVal: number, maxYVal: number): void Parameters minXVal: number maxXVal: number minYVal: number maxYVal: number Returns void isMomentSelected isMomentSelected(momentType: Moment): boolean Parameters momentType: Moment Returns boolean removeMomentByIndex removeMomentByIndex(removeIndex: number): void Parameters removeIndex: number Returns void removeProfileColor removeProfileColor(lineKey: LineKey): void Parameters lineKey: LineKey Returns void requestMoment requestMoment(): void Returns void requestingMomentCancelled requestingMomentCancelled(): void Returns void publicselectFrame selectFrame(fileId: number): void Parameters fileId: number Returns void selectMoment selectMoment(selected: Moment): void Parameters selected: Moment Returns void selectMomentRegion selectMomentRegion(regionId: number): void Parameters regionId: number Returns void setChannel setChannel(channel: number): void Parameters channel: number Returns void setCursor setCursor(cursorVal: number): void Parameters cursorVal: number Returns void setFileId setFileId(fileId: number): void Inherited from RegionWidgetStore.setFileId Parameters fileId: number Returns void setHighlighted setHighlighted(isHighlighted: boolean): void Parameters isHighlighted: boolean Returns void setKeep setKeep(bool: boolean): void Parameters bool: boolean Returns void setLinePlotPointSize setLinePlotPointSize(val: number): void Parameters val: number Returns void setLineWidth setLineWidth(val: number): void Parameters val: number Returns void setMarkerTextVisible setMarkerTextVisible(val: boolean): void Parameters val: boolean Returns void setMeanRmsVisible setMeanRmsVisible(val: boolean): void Parameters val: boolean Returns void setMomentMask setMomentMask(momentMask: MomentMask): void Parameters momentMask: MomentMask Returns void setMomentRangeSelectingMode setMomentRangeSelectingMode(mode: MomentSelectingMode): void Parameters mode: MomentSelectingMode Returns void setMouseMoveIntoLinePlots setMouseMoveIntoLinePlots(val: boolean): void Parameters val: boolean Returns void setMultiProfileIntensityUnit setMultiProfileIntensityUnit(intensityUnitStr: string): void Parameters intensityUnitStr: string Returns void setPlotType setPlotType(val: PlotType): void Parameters val: PlotType Returns void setProfileColor setProfileColor(lineKey: LineKey, color: string): void Parameters lineKey: LineKey color: string Returns void setRegionId setRegionId(fileId: number, regionId: number): void Overrides RegionWidgetStore.setRegionId Parameters fileId: number regionId: number Returns void setSecondaryAxisCursorInfoVisible setSecondaryAxisCursorInfoVisible(val: boolean): void Parameters val: boolean Returns void setSelectedChannelRange setSelectedChannelRange(min: number, max: number): void Parameters min: number max: number Returns void setSelectedMaskRange setSelectedMaskRange(min: number, max: number): void Parameters min: number max: number Returns void setSettingsTabId setSettingsTabId(tabId: SpectralProfilerSettingsTabs): void Parameters tabId: SpectralProfilerSettingsTabs Returns void setSpectralCoordinate setSpectralCoordinate(coordStr: string): void Parameters coordStr: string Returns void setSpectralCoordinateSecondary setSpectralCoordinateSecondary(coordStr: string): void Parameters coordStr: string Returns void setSpectralSystem setSpectralSystem(specsys: SpectralSystem): void Parameters specsys: SpectralSystem Returns void setXBounds setXBounds(minVal: number, maxVal: number): void Parameters minVal: number maxVal: number Returns void setXYBounds setXYBounds(minX: number, maxX: number, minY: number, maxY: number): void Parameters minX: number maxX: number minY: number maxY: number Returns void setYBounds setYBounds(minVal: number, maxVal: number): void Parameters minVal: number maxVal: number Returns void publictoConfig toConfig(): { linePlotPointSize: number; lineWidth: number; maxXVal: number; maxYVal: number; meanRmsVisible: boolean; minXVal: number; minYVal: number; plotType: PlotType; primaryLineColor: string } Returns { linePlotPointSize: number; lineWidth: number; maxXVal: number; maxYVal: number; meanRmsVisible: boolean; minXVal: number; minYVal: number; plotType: PlotType; primaryLineColor: string } linePlotPointSize: number lineWidth: number maxXVal: number maxYVal: number meanRmsVisible: boolean minXVal: number minYVal: number plotType: PlotType primaryLineColor: string updateStreamingDataStatus updateStreamingDataStatus(val: boolean): void Parameters val: boolean Returns void publicstaticCalculateRequirementsArray CalculateRequirementsArray(widgetsMap: Map&lt;string, RegionWidgetStore&gt;): Map&lt;number, number[]&gt; Inherited from RegionWidgetStore.CalculateRequirementsArray Parameters widgetsMap: Map&lt;string, RegionWidgetStore&gt; Returns Map&lt;number, number[]&gt; publicstaticCalculateRequirementsMap CalculateRequirementsMap(widgetsMap: Map&lt;string, SpectralProfileWidgetStore&gt;): Map&lt;number, Map&lt;number, SetSpectralRequirements&gt;&gt; Parameters widgetsMap: Map&lt;string, SpectralProfileWidgetStore&gt; Returns Map&lt;number, Map&lt;number, SetSpectralRequirements&gt;&gt; publicstaticDiffSpectralRequirements DiffSpectralRequirements(originalRequirements: Map&lt;number, Map&lt;number, SetSpectralRequirements&gt;&gt;, updatedRequirements: Map&lt;number, Map&lt;number, SetSpectralRequirements&gt;&gt;): SetSpectralRequirements[] Parameters originalRequirements: Map&lt;number, Map&lt;number, SetSpectralRequirements&gt;&gt; updatedRequirements: Map&lt;number, Map&lt;number, SetSpectralRequirements&gt;&gt; Returns SetSpectralRequirements[]","keywords":""},{"title":"StokesAnalysisWidgetStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/StokesAnalysisWidgetStore","content":"StokesAnalysisWidgetStore Hierarchy RegionWidgetStore StokesAnalysisWidgetStore Index Constructors constructor Properties channelcolorMapcolorPixelequalAxesfileIdfractionalPolVisibleinvertedColorMapisMouseMoveIntoLinePlotsisMouseMoveIntoScatterPlotslinePlotPointSizelinePlotcursorXlineWidthplotTypepointTransparencypolAngleMaxYpolAngleMinYpolIntensityMaxYpolIntensityMinYprimaryLineColorquMaxYquMinYquScatterMaxXquScatterMaxYquScatterMinXquScatterMinYregionIdMapscatterChartAreascatterOutRangePointsZIndexscatterPlotCursorXscatterPlotCursorYscatterPlotPointSizesecondaryLineColorsettingsTabIdsharedMaxXsharedMinXsmoothingStorestatsTypetype Accessors effectiveFrameeffectiveRegioneffectiveRegionIdeffectiveRegionInfoframeOptionsisEffectiveFrameEqualToActiveFrameisLinePlotsAutoScaledXisPolAngleAutoScaledYisPolIntensityAutoScaledYisQULinePlotAutoScaledYisQUScatterPlotAutoScaledXisQUScatterPlotAutoScaledYmatchesSelectedRegion Methods clearFrameEntryclearLinePlotsXYBoundsclearPolIntensityYBoundsclearRegionMapclearScatterPlotXYBoundsclearSharedXBoundsclearXYBoundsinitsetChannelsetColormapsetEqualAxesValuesetFileIdsetFractionalPolVisiblesetInvertedColorMapsetLinePlotPointSizesetLineWidthsetMouseMoveIntoLinePlotssetMouseMoveIntoScatterPlotssetPlotTypesetPointTransparencysetPolAngleXYBoundssetPolAngleYBoundssetPolIntensityXYBoundssetPolIntensityYBoundssetPrimaryLineColorsetQULinePlotYBoundssetQULinePlotsXYBoundssetQUScatterPlotXBoundssetQUScatterPlotXYBoundssetQUScatterPlotYBoundssetRegionIdsetScatterChartAressetScatterPlotCursorsetScatterPlotPointSizesetSecondaryLineColorsetSettingsTabIdsetSharedXBoundssetSpectralCoordinatesetSpectralSystemsetStatsTypesetlinePlotCursorXtoConfigCalculateRequirementsArrayaddToRequirementsMap Constructors constructor new StokesAnalysisWidgetStore(): StokesAnalysisWidgetStore Overrides RegionWidgetStore.constructor Returns StokesAnalysisWidgetStore Properties channel channel: number colorMap colorMap: string colorPixel colorPixel: { color: Uint8ClampedArray; size: number } Type declaration color: Uint8ClampedArray size: number equalAxes equalAxes: boolean fileId fileId: number Inherited from RegionWidgetStore.fileId fractionalPolVisible fractionalPolVisible: boolean invertedColorMap invertedColorMap: boolean isMouseMoveIntoLinePlots isMouseMoveIntoLinePlots: boolean isMouseMoveIntoScatterPlots isMouseMoveIntoScatterPlots: boolean linePlotPointSize linePlotPointSize: number linePlotcursorX linePlotcursorX: number lineWidth lineWidth: number plotType plotType: PlotType pointTransparency pointTransparency: number polAngleMaxY polAngleMaxY: number polAngleMinY polAngleMinY: number polIntensityMaxY polIntensityMaxY: number polIntensityMinY polIntensityMinY: number primaryLineColor primaryLineColor: string quMaxY quMaxY: number quMinY quMinY: number quScatterMaxX quScatterMaxX: number quScatterMaxY quScatterMaxY: number quScatterMinX quScatterMinX: number quScatterMinY quScatterMinY: number regionIdMap regionIdMap: Map&lt;number, number&gt; Inherited from RegionWidgetStore.regionIdMap scatterChartArea scatterChartArea: ChartArea scatterOutRangePointsZIndex scatterOutRangePointsZIndex: number[] scatterPlotCursorX scatterPlotCursorX: number scatterPlotCursorY scatterPlotCursorY: number scatterPlotPointSize scatterPlotPointSize: number secondaryLineColor secondaryLineColor: string settingsTabId settingsTabId: StokesAnalysisSettingsTabs sharedMaxX sharedMaxX: number sharedMinX sharedMinX: number readonlysmoothingStore smoothingStore: ProfileSmoothingStore statsType statsType: StatsType type type: RegionsType Inherited from RegionWidgetStore.type Accessors effectiveFrame get effectiveFrame(): FrameStore Inherited from RegionWidgetStore.effectiveFrame Returns FrameStore effectiveRegion get effectiveRegion(): RegionStore Inherited from RegionWidgetStore.effectiveRegion Returns RegionStore effectiveRegionId get effectiveRegionId(): number Inherited from RegionWidgetStore.effectiveRegionId Returns number effectiveRegionInfo get effectiveRegionInfo(): string Inherited from RegionWidgetStore.effectiveRegionInfo Returns string frameOptions get frameOptions(): IOptionProps[] Inherited from RegionWidgetStore.frameOptions Returns IOptionProps[] isEffectiveFrameEqualToActiveFrame get isEffectiveFrameEqualToActiveFrame(): boolean Inherited from RegionWidgetStore.isEffectiveFrameEqualToActiveFrame Returns boolean isLinePlotsAutoScaledX get isLinePlotsAutoScaledX(): boolean Returns boolean isPolAngleAutoScaledY get isPolAngleAutoScaledY(): boolean Returns boolean isPolIntensityAutoScaledY get isPolIntensityAutoScaledY(): boolean Returns boolean isQULinePlotAutoScaledY get isQULinePlotAutoScaledY(): boolean Returns boolean isQUScatterPlotAutoScaledX get isQUScatterPlotAutoScaledX(): boolean Returns boolean isQUScatterPlotAutoScaledY get isQUScatterPlotAutoScaledY(): boolean Returns boolean matchesSelectedRegion get matchesSelectedRegion(): boolean Inherited from RegionWidgetStore.matchesSelectedRegion Returns boolean Methods clearFrameEntry clearFrameEntry(fileId: number): void Inherited from RegionWidgetStore.clearFrameEntry Parameters fileId: number Returns void clearLinePlotsXYBounds clearLinePlotsXYBounds(): void Returns void clearPolIntensityYBounds clearPolIntensityYBounds(): void Returns void clearRegionMap clearRegionMap(): void Inherited from RegionWidgetStore.clearRegionMap Returns void clearScatterPlotXYBounds clearScatterPlotXYBounds(): void Returns void clearSharedXBounds clearSharedXBounds(): void Returns void clearXYBounds clearXYBounds(): void Returns void publicinit init(widgetSettings: any): void Parameters widgetSettings: any Returns void setChannel setChannel(channel: number): void Parameters channel: number Returns void setColormap setColormap(colormap: string): void Parameters colormap: string Returns void setEqualAxesValue setEqualAxesValue(val: boolean): void Parameters val: boolean Returns void setFileId setFileId(fileId: number): void Inherited from RegionWidgetStore.setFileId Parameters fileId: number Returns void setFractionalPolVisible setFractionalPolVisible(val: boolean): void Parameters val: boolean Returns void setInvertedColorMap setInvertedColorMap(invertedColorMap: boolean): void Parameters invertedColorMap: boolean Returns void setLinePlotPointSize setLinePlotPointSize(val: number): void Parameters val: number Returns void setLineWidth setLineWidth(val: number): void Parameters val: number Returns void setMouseMoveIntoLinePlots setMouseMoveIntoLinePlots(val: boolean): void Parameters val: boolean Returns void setMouseMoveIntoScatterPlots setMouseMoveIntoScatterPlots(val: boolean): void Parameters val: boolean Returns void setPlotType setPlotType(val: PlotType): void Parameters val: PlotType Returns void setPointTransparency setPointTransparency(val: number): void Parameters val: number Returns void setPolAngleXYBounds setPolAngleXYBounds(minX: number, maxX: number, minY: number, maxY: number): void Parameters minX: number maxX: number minY: number maxY: number Returns void setPolAngleYBounds setPolAngleYBounds(minVal: number, maxVal: number): void Parameters minVal: number maxVal: number Returns void setPolIntensityXYBounds setPolIntensityXYBounds(minX: number, maxX: number, minY: number, maxY: number): void Parameters minX: number maxX: number minY: number maxY: number Returns void setPolIntensityYBounds setPolIntensityYBounds(minVal: number, maxVal: number): void Parameters minVal: number maxVal: number Returns void setPrimaryLineColor setPrimaryLineColor(color: string): void Parameters color: string Returns void setQULinePlotYBounds setQULinePlotYBounds(minVal: number, maxVal: number): void Parameters minVal: number maxVal: number Returns void setQULinePlotsXYBounds setQULinePlotsXYBounds(minX: number, maxX: number, minY: number, maxY: number): void Parameters minX: number maxX: number minY: number maxY: number Returns void setQUScatterPlotXBounds setQUScatterPlotXBounds(minVal: number, maxVal: number): void Parameters minVal: number maxVal: number Returns void setQUScatterPlotXYBounds setQUScatterPlotXYBounds(minX: number, maxX: number, minY: number, maxY: number): void Parameters minX: number maxX: number minY: number maxY: number Returns void setQUScatterPlotYBounds setQUScatterPlotYBounds(minVal: number, maxVal: number): void Parameters minVal: number maxVal: number Returns void setRegionId setRegionId(fileId: number, regionId: number): void Overrides RegionWidgetStore.setRegionId Parameters fileId: number regionId: number Returns void setScatterChartAres setScatterChartAres(chartArea: ChartArea): void Parameters chartArea: ChartArea Returns void setScatterPlotCursor setScatterPlotCursor(cursorVal: { x: number; y: number }): void Parameters cursorVal: { x: number; y: number } Returns void setScatterPlotPointSize setScatterPlotPointSize(val: number): void Parameters val: number Returns void setSecondaryLineColor setSecondaryLineColor(color: string): void Parameters color: string Returns void setSettingsTabId setSettingsTabId(tabId: StokesAnalysisSettingsTabs): void Parameters tabId: StokesAnalysisSettingsTabs Returns void setSharedXBounds setSharedXBounds(minVal: number, maxVal: number): void Parameters minVal: number maxVal: number Returns void setSpectralCoordinate setSpectralCoordinate(coordStr: string): void Parameters coordStr: string Returns void setSpectralSystem setSpectralSystem(specsys: SpectralSystem): void Parameters specsys: SpectralSystem Returns void setStatsType setStatsType(statsType: StatsType): void Parameters statsType: StatsType Returns void setlinePlotCursorX setlinePlotCursorX(cursorVal: number): void Parameters cursorVal: number Returns void publictoConfig toConfig(): { colorMap: string; equalAxes: boolean; linePlotPointSize: number; lineWidth: number; plotType: PlotType; pointTransparency: number; primaryLineColor: string; scatterPlotPointSize: number; secondaryLineColor: string } Returns { colorMap: string; equalAxes: boolean; linePlotPointSize: number; lineWidth: number; plotType: PlotType; pointTransparency: number; primaryLineColor: string; scatterPlotPointSize: number; secondaryLineColor: string } colorMap: string equalAxes: boolean linePlotPointSize: number lineWidth: number plotType: PlotType pointTransparency: number primaryLineColor: string scatterPlotPointSize: number secondaryLineColor: string publicstaticCalculateRequirementsArray CalculateRequirementsArray(widgetsMap: Map&lt;string, RegionWidgetStore&gt;): Map&lt;number, number[]&gt; Inherited from RegionWidgetStore.CalculateRequirementsArray Parameters widgetsMap: Map&lt;string, RegionWidgetStore&gt; Returns Map&lt;number, number[]&gt; publicstaticaddToRequirementsMap addToRequirementsMap(updatedRequirements: Map&lt;number, Map&lt;number, SetSpectralRequirements&gt;&gt;, widgetsMap: Map&lt;string, StokesAnalysisWidgetStore&gt;): Map&lt;number, Map&lt;number, SetSpectralRequirements&gt;&gt; Parameters updatedRequirements: Map&lt;number, Map&lt;number, SetSpectralRequirements&gt;&gt; widgetsMap: Map&lt;string, StokesAnalysisWidgetStore&gt; Returns Map&lt;number, Map&lt;number, SetSpectralRequirements&gt;&gt;","keywords":""},{"title":"TextAnnotationStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/TextAnnotationStore","content":"TextAnnotationStore Hierarchy RegionStore TextAnnotationStore Index Constructors constructor Properties activeFramecolorcontrolPointscoordinatecreatingdashLengtheditingfileIdfontfontSizefontStyleisSimplePolygonlineRegionSampleWidthlineWidthlockedmodifiedTimestampnamepositionregionIdregionTyperotationtextAVAILABLE_ANNOTATION_TYPESAVAILABLE_REGION_TYPESMAX_DASH_LENGTHMAX_LINE_WIDTHMIN_LINE_WIDTHTARGET_VERTEX_COUNT Accessors boundingBoxboundingBoxAreacenterisAnnotationisClosedRegionisPreviewCutisTemporaryisValidnameStringregionPropertiessizewcsSize Methods beginCreatingbeginEditingendCreatingendEditingfocusCentergetAnnotationStylesgetAnnotationStylesForExportgetRegionApproximationinitializeStylessetCentersetColorsetControlPointsetControlPointssetCoordinatesetDashLengthsetFontsetFontSizesetFontStylesetLineWidthsetLockedsetNamesetPositionsetRegionIdsetRotationsetSizesetTexttoggleLockGetRegionPropertiesIsRegionCustomIconIsRegionDashLengthValidIsRegionLineWidthValidIsRegionTypeValidRegionIconStringRegionTypeString Constructors constructor new TextAnnotationStore(backendService: BackendService, fileId: number, activeFrame: FrameStore, controlPoints: Point2D[], regionType: RegionType, regionId?: number, rotation?: number, name?: string, color?: string, lineWidth?: number, dashLength?: number): TextAnnotationStore Overrides RegionStore.constructor Parameters backendService: BackendService fileId: number activeFrame: FrameStore controlPoints: Point2D[] regionType: RegionType regionId: number = -1 rotation: number = 0 name: string = &quot;&quot; color: string = Colors.TURQUOISE5 lineWidth: number = 2 dashLength: number = 0 Returns TextAnnotationStore Properties activeFrame activeFrame: FrameStore Inherited from RegionStore.activeFrame color color: string Inherited from RegionStore.color controlPoints controlPoints: Point2D[] Inherited from RegionStore.controlPoints coordinate coordinate: CoordinateMode Inherited from RegionStore.coordinate creating creating: boolean Inherited from RegionStore.creating dashLength dashLength: number Inherited from RegionStore.dashLength editing editing: boolean Inherited from RegionStore.editing readonlyfileId fileId: number Inherited from RegionStore.fileId font font: Font = Font.HELVETICA fontSize fontSize: number = 20 fontStyle fontStyle: FontStyle = FontStyle.NORMAL isSimplePolygon isSimplePolygon: boolean Inherited from RegionStore.isSimplePolygon lineRegionSampleWidth lineRegionSampleWidth: number = 3 Inherited from RegionStore.lineRegionSampleWidth lineWidth lineWidth: number Inherited from RegionStore.lineWidth locked locked: boolean = false Inherited from RegionStore.locked publicmodifiedTimestamp modifiedTimestamp: number Inherited from RegionStore.modifiedTimestamp name name: string Inherited from RegionStore.name position position: TextAnnotationPosition = CARTA.TextAnnotationPosition.CENTER regionId regionId: number Inherited from RegionStore.regionId regionType regionType: RegionType Inherited from RegionStore.regionType rotation rotation: number Inherited from RegionStore.rotation text text: string = &quot;Double click to edit text&quot; staticreadonlyAVAILABLE_ANNOTATION_TYPES AVAILABLE_ANNOTATION_TYPES: Map&lt;RegionType, string&gt; = ... Inherited from RegionStore.AVAILABLE_ANNOTATION_TYPES staticreadonlyAVAILABLE_REGION_TYPES AVAILABLE_REGION_TYPES: Map&lt;RegionType, string&gt; = ... Inherited from RegionStore.AVAILABLE_REGION_TYPES staticreadonlyMAX_DASH_LENGTH MAX_DASH_LENGTH: 50 = 50 Inherited from RegionStore.MAX_DASH_LENGTH staticreadonlyMAX_LINE_WIDTH MAX_LINE_WIDTH: 10 = 10 Inherited from RegionStore.MAX_LINE_WIDTH staticreadonlyMIN_LINE_WIDTH MIN_LINE_WIDTH: 0.5 = 0.5 Inherited from RegionStore.MIN_LINE_WIDTH staticreadonlyTARGET_VERTEX_COUNT TARGET_VERTEX_COUNT: 200 = 200 Inherited from RegionStore.TARGET_VERTEX_COUNT Accessors boundingBox get boundingBox(): Point2D Inherited from RegionStore.boundingBox Returns Point2D boundingBoxArea get boundingBoxArea(): number Inherited from RegionStore.boundingBoxArea Returns number center get center(): Point2D Inherited from RegionStore.center Returns Point2D isAnnotation get isAnnotation(): boolean Inherited from RegionStore.isAnnotation Returns boolean isClosedRegion get isClosedRegion(): boolean Inherited from RegionStore.isClosedRegion Returns boolean isPreviewCut get isPreviewCut(): boolean Inherited from RegionStore.isPreviewCut Returns boolean isTemporary get isTemporary(): boolean Inherited from RegionStore.isTemporary Returns boolean isValid get isValid(): boolean Inherited from RegionStore.isValid Returns boolean nameString get nameString(): string Inherited from RegionStore.nameString Returns string regionProperties get regionProperties(): string Inherited from RegionStore.regionProperties Returns string size get size(): Point2D Inherited from RegionStore.size Returns Point2D wcsSize get wcsSize(): Point2D Inherited from RegionStore.wcsSize Returns Point2D Methods beginCreating beginCreating(): void Inherited from RegionStore.beginCreating Returns void beginEditing beginEditing(): void Inherited from RegionStore.beginEditing Returns void endCreating endCreating(): Generator&lt;Promise&lt;ISetRegionAck&gt;, void, unknown&gt; Inherited from RegionStore.endCreating Returns Generator&lt;Promise&lt;ISetRegionAck&gt;, void, unknown&gt; endEditing endEditing(): void Inherited from RegionStore.endEditing Returns void focusCenter focusCenter(): void Inherited from RegionStore.focusCenter Returns void publicgetAnnotationStyles getAnnotationStyles(): { font: Font; fontSize: number; fontStyle: FontStyle; textLabel0: string; textPosition: TextAnnotationPosition } Returns { font: Font; fontSize: number; fontStyle: FontStyle; textLabel0: string; textPosition: TextAnnotationPosition } font: Font fontSize: number fontStyle: FontStyle textLabel0: string textPosition: TextAnnotationPosition publicgetAnnotationStylesForExport getAnnotationStylesForExport(): { font: Font; fontSize: number; fontStyle: FontStyle; textLabel0: string; textPosition: TextAnnotationPosition } Returns { font: Font; fontSize: number; fontStyle: FontStyle; textLabel0: string; textPosition: TextAnnotationPosition } font: Font fontSize: number fontStyle: FontStyle textLabel0: string textPosition: TextAnnotationPosition publicgetRegionApproximation getRegionApproximation(astTransform: Mapping): Point2D[] | { eastApproximatePoints: number[]; northApproximatePoints: number[] } | { hypotenuseApproximatePoints: number[]; xApproximatePoints: number[]; yApproximatePoints: number[] } Inherited from RegionStore.getRegionApproximation Parameters astTransform: Mapping Returns Point2D[] | { eastApproximatePoints: number[]; northApproximatePoints: number[] } | { hypotenuseApproximatePoints: number[]; xApproximatePoints: number[]; yApproximatePoints: number[] } publicinitializeStyles initializeStyles(annotationStyles: { font: Font; fontSize: number; fontStyle: FontStyle; textLabel0: string; textPosition: TextAnnotationPosition }): void Parameters annotationStyles: { font: Font; fontSize: number; fontStyle: FontStyle; textLabel0: string; textPosition: TextAnnotationPosition } Returns void setCenter setCenter(p: Point2D, skipUpdate?: boolean): void Inherited from RegionStore.setCenter Parameters p: Point2D skipUpdate: boolean = false Returns void setColor setColor(color: string): void Inherited from RegionStore.setColor Parameters color: string Returns void setControlPoint setControlPoint(index: number, p: Point2D, skipUpdate?: boolean): void Inherited from RegionStore.setControlPoint Parameters index: number p: Point2D skipUpdate: boolean = false Returns void setControlPoints setControlPoints(points: Point2D[], skipUpdate?: boolean, shapeChanged?: boolean): void Inherited from RegionStore.setControlPoints Parameters points: Point2D[] skipUpdate: boolean = false shapeChanged: boolean = true Returns void setCoordinate setCoordinate(coordinate: CoordinateMode): void Inherited from RegionStore.setCoordinate Parameters coordinate: CoordinateMode Returns void setDashLength setDashLength(dashLength: number): void Inherited from RegionStore.setDashLength Parameters dashLength: number Returns void setFont setFont(font: Font): void Parameters font: Font Returns void setFontSize setFontSize(fontSize: number): void Parameters fontSize: number Returns void setFontStyle setFontStyle(fontStyle: string): void Parameters fontStyle: string Returns void setLineWidth setLineWidth(lineWidth: number): void Inherited from RegionStore.setLineWidth Parameters lineWidth: number Returns void setLocked setLocked(locked: boolean): void Inherited from RegionStore.setLocked Parameters locked: boolean Returns void setName setName(name: string): void Inherited from RegionStore.setName Parameters name: string Returns void setPosition setPosition(position: TextAnnotationPosition): void Parameters position: TextAnnotationPosition Returns void setRegionId setRegionId(id: number): void Inherited from RegionStore.setRegionId Parameters id: number Returns void setRotation setRotation(angle: number, skipUpdate?: boolean): void Inherited from RegionStore.setRotation Parameters angle: number skipUpdate: boolean = false Returns void setSize setSize(p: Point2D, skipUpdate?: boolean): void Inherited from RegionStore.setSize Parameters p: Point2D skipUpdate: boolean = false Returns void setText setText(text: string): void Parameters text: string Returns void toggleLock toggleLock(): void Inherited from RegionStore.toggleLock Returns void publicstaticGetRegionProperties GetRegionProperties(regionType: RegionType, controlPoints: Point2D[], rotation: number): string Inherited from RegionStore.GetRegionProperties Parameters regionType: RegionType controlPoints: Point2D[] rotation: number Returns string publicstaticIsRegionCustomIcon IsRegionCustomIcon(regionType: RegionType): boolean Inherited from RegionStore.IsRegionCustomIcon Parameters regionType: RegionType Returns boolean publicstaticIsRegionDashLengthValid IsRegionDashLengthValid(regionDashLength: number): boolean Inherited from RegionStore.IsRegionDashLengthValid Parameters regionDashLength: number Returns boolean publicstaticIsRegionLineWidthValid IsRegionLineWidthValid(regionLineWidth: number): boolean Inherited from RegionStore.IsRegionLineWidthValid Parameters regionLineWidth: number Returns boolean publicstaticIsRegionTypeValid IsRegionTypeValid(regionType: RegionType): boolean Inherited from RegionStore.IsRegionTypeValid Parameters regionType: RegionType Returns boolean publicstaticRegionIconString RegionIconString(regionType: RegionType): any Inherited from RegionStore.RegionIconString Parameters regionType: RegionType Returns any publicstaticRegionTypeString RegionTypeString(regionType: RegionType): string Inherited from RegionStore.RegionTypeString Parameters regionType: RegionType Returns string","keywords":""},{"title":"VectorOverlayConfigStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/VectorOverlayConfigStore","content":"VectorOverlayConfigStore Index Constructors constructor Properties angularSourcecolorcolormapcolormapBiascolormapContrastcolormapEnableddebiasingenabledfractionalIntensityintensityMaxintensityMinintensitySourcelengthMaxlengthMinpixelAveragingpixelAveragingEnabledqErrorrotationOffsetthicknessthresholdthresholdEnableduErrorvisibleDefaultLengthMaxDefaultLengthMin Methods setColorsetColormapsetColormapBiassetColormapContrastsetColormapEnabledsetEnabledsetIntensityRangesetLengthRangesetRotationOffsetsetThicknesssetThresholdEnabledsetVectorOverlayConfigurationsetVisibletoggleVisibilityupdateFromWorkspace Constructors constructor new VectorOverlayConfigStore(preferenceStore: PreferenceStore, frame: FrameStore): VectorOverlayConfigStore Parameters preferenceStore: PreferenceStore frame: FrameStore Returns VectorOverlayConfigStore Properties angularSource angularSource: VectorOverlaySource color color: RGBColor colormap colormap: string colormapBias colormapBias: number colormapContrast colormapContrast: number colormapEnabled colormapEnabled: boolean debiasing debiasing: boolean enabled enabled: boolean fractionalIntensity fractionalIntensity: boolean intensityMax intensityMax: number intensityMin intensityMin: number intensitySource intensitySource: VectorOverlaySource lengthMax lengthMax: number lengthMin lengthMin: number pixelAveraging pixelAveraging: number pixelAveragingEnabled pixelAveragingEnabled: boolean qError qError: number rotationOffset rotationOffset: number thickness thickness: number threshold threshold: number thresholdEnabled thresholdEnabled: boolean uError uError: number visible visible: boolean publicstaticDefaultLengthMax DefaultLengthMax: number = 20 publicstaticDefaultLengthMin DefaultLengthMin: number = 0 Methods setColor setColor(color: ColorInput): void Parameters color: ColorInput Returns void setColormap setColormap(colormap: string): void Parameters colormap: string Returns void setColormapBias setColormapBias(val: number): void Parameters val: number Returns void setColormapContrast setColormapContrast(val: number): void Parameters val: number Returns void setColormapEnabled setColormapEnabled(val: boolean): void Parameters val: boolean Returns void setEnabled setEnabled(val: boolean): void Parameters val: boolean Returns void setIntensityRange setIntensityRange(min: number, max: number): void Parameters min: number max: number Returns void setLengthRange setLengthRange(min: number, max: number): void Parameters min: number max: number Returns void setRotationOffset setRotationOffset(val: number): void Parameters val: number Returns void setThickness setThickness(val: number): void Parameters val: number Returns void setThresholdEnabled setThresholdEnabled(val: boolean): void Parameters val: boolean Returns void setVectorOverlayConfiguration setVectorOverlayConfiguration(angularSource: VectorOverlaySource, intensitySource: VectorOverlaySource, pixelAveragingEnabled: boolean, pixelAveraging: number, fractionalIntensity: boolean, thresholdEnabled: boolean, threshold: number, debiasing: boolean, qError: number, uError: number): void Parameters angularSource: VectorOverlaySource intensitySource: VectorOverlaySource pixelAveragingEnabled: boolean pixelAveraging: number fractionalIntensity: boolean thresholdEnabled: boolean threshold: number debiasing: boolean qError: number uError: number Returns void setVisible setVisible(visible: boolean): void Parameters visible: boolean Returns void toggleVisibility toggleVisibility(): void Returns void updateFromWorkspace updateFromWorkspace(config: WorkspaceVectorOverlayConfig): void Parameters config: WorkspaceVectorOverlayConfig Returns void","keywords":""},{"title":"VectorOverlayStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/VectorOverlayStore","content":"VectorOverlayStore Index Constructors constructor Properties intensityMaxintensityMinprogresstiles Accessors isComplete Methods addDataclearDatasetData Constructors constructor new VectorOverlayStore(frame: FrameStore): VectorOverlayStore Parameters frame: FrameStore Returns VectorOverlayStore Properties intensityMax intensityMax: number intensityMin intensityMin: number progress progress: number tiles tiles: VectorOverlayTile[] Accessors isComplete get isComplete(): boolean Returns boolean Methods addData addData(intensityTiles: ITileData[], angleTiles: ITileData[], progress: number): void Parameters intensityTiles: ITileData[] angleTiles: ITileData[] progress: number Returns void clearData clearData(): void Returns void setData setData(intensityTiles: ITileData[], angleTiles: ITileData[], progress: number): void Parameters intensityTiles: ITileData[] angleTiles: ITileData[] progress: number Returns void","keywords":""},{"title":"VectorAnnotationStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/VectorAnnotationStore","content":"VectorAnnotationStore Hierarchy RegionStore VectorAnnotationStore Index Constructors constructor Properties activeFramecolorcontrolPointscoordinatecreatingdashLengtheditingfileIdisSimplePolygonlineRegionSampleWidthlineWidthlockedmodifiedTimestampnamepointerLengthpointerWidthregionIdregionTyperotationAVAILABLE_ANNOTATION_TYPESAVAILABLE_REGION_TYPESMAX_DASH_LENGTHMAX_LINE_WIDTHMIN_LINE_WIDTHTARGET_VERTEX_COUNT Accessors boundingBoxboundingBoxAreacenterisAnnotationisClosedRegionisPreviewCutisTemporaryisValidnameStringregionPropertiessizewcsSize Methods beginCreatingbeginEditingendCreatingendEditingfocusCentergetAnnotationStylesgetRegionApproximationinitializeStylessetCentersetColorsetControlPointsetControlPointssetCoordinatesetDashLengthsetLineWidthsetLockedsetNamesetPointerLengthsetPointerWidthsetRegionIdsetRotationsetSizetoggleLockGetRegionPropertiesIsRegionCustomIconIsRegionDashLengthValidIsRegionLineWidthValidIsRegionTypeValidRegionIconStringRegionTypeString Constructors constructor new VectorAnnotationStore(backendService: BackendService, fileId: number, activeFrame: FrameStore, controlPoints: Point2D[], regionType: RegionType, regionId?: number, rotation?: number, name?: string, color?: string, lineWidth?: number, dashLength?: number): VectorAnnotationStore Overrides RegionStore.constructor Parameters backendService: BackendService fileId: number activeFrame: FrameStore controlPoints: Point2D[] regionType: RegionType regionId: number = -1 rotation: number = 0 name: string = &quot;&quot; color: string = Colors.TURQUOISE5 lineWidth: number = 2 dashLength: number = 0 Returns VectorAnnotationStore Properties activeFrame activeFrame: FrameStore Inherited from RegionStore.activeFrame color color: string Inherited from RegionStore.color controlPoints controlPoints: Point2D[] Inherited from RegionStore.controlPoints coordinate coordinate: CoordinateMode Inherited from RegionStore.coordinate creating creating: boolean Inherited from RegionStore.creating dashLength dashLength: number Inherited from RegionStore.dashLength editing editing: boolean Inherited from RegionStore.editing readonlyfileId fileId: number Inherited from RegionStore.fileId isSimplePolygon isSimplePolygon: boolean Inherited from RegionStore.isSimplePolygon lineRegionSampleWidth lineRegionSampleWidth: number = 3 Inherited from RegionStore.lineRegionSampleWidth lineWidth lineWidth: number Inherited from RegionStore.lineWidth locked locked: boolean = false Inherited from RegionStore.locked publicmodifiedTimestamp modifiedTimestamp: number Inherited from RegionStore.modifiedTimestamp name name: string Inherited from RegionStore.name pointerLength pointerLength: number = 10 pointerWidth pointerWidth: number = 10 regionId regionId: number Inherited from RegionStore.regionId regionType regionType: RegionType Inherited from RegionStore.regionType rotation rotation: number Inherited from RegionStore.rotation staticreadonlyAVAILABLE_ANNOTATION_TYPES AVAILABLE_ANNOTATION_TYPES: Map&lt;RegionType, string&gt; = ... Inherited from RegionStore.AVAILABLE_ANNOTATION_TYPES staticreadonlyAVAILABLE_REGION_TYPES AVAILABLE_REGION_TYPES: Map&lt;RegionType, string&gt; = ... Inherited from RegionStore.AVAILABLE_REGION_TYPES staticreadonlyMAX_DASH_LENGTH MAX_DASH_LENGTH: 50 = 50 Inherited from RegionStore.MAX_DASH_LENGTH staticreadonlyMAX_LINE_WIDTH MAX_LINE_WIDTH: 10 = 10 Inherited from RegionStore.MAX_LINE_WIDTH staticreadonlyMIN_LINE_WIDTH MIN_LINE_WIDTH: 0.5 = 0.5 Inherited from RegionStore.MIN_LINE_WIDTH staticreadonlyTARGET_VERTEX_COUNT TARGET_VERTEX_COUNT: 200 = 200 Inherited from RegionStore.TARGET_VERTEX_COUNT Accessors boundingBox get boundingBox(): Point2D Inherited from RegionStore.boundingBox Returns Point2D boundingBoxArea get boundingBoxArea(): number Inherited from RegionStore.boundingBoxArea Returns number center get center(): Point2D Inherited from RegionStore.center Returns Point2D isAnnotation get isAnnotation(): boolean Inherited from RegionStore.isAnnotation Returns boolean isClosedRegion get isClosedRegion(): boolean Inherited from RegionStore.isClosedRegion Returns boolean isPreviewCut get isPreviewCut(): boolean Inherited from RegionStore.isPreviewCut Returns boolean isTemporary get isTemporary(): boolean Inherited from RegionStore.isTemporary Returns boolean isValid get isValid(): boolean Inherited from RegionStore.isValid Returns boolean nameString get nameString(): string Inherited from RegionStore.nameString Returns string regionProperties get regionProperties(): string Inherited from RegionStore.regionProperties Returns string size get size(): Point2D Inherited from RegionStore.size Returns Point2D wcsSize get wcsSize(): Point2D Inherited from RegionStore.wcsSize Returns Point2D Methods beginCreating beginCreating(): void Inherited from RegionStore.beginCreating Returns void beginEditing beginEditing(): void Inherited from RegionStore.beginEditing Returns void endCreating endCreating(): Generator&lt;Promise&lt;ISetRegionAck&gt;, void, unknown&gt; Inherited from RegionStore.endCreating Returns Generator&lt;Promise&lt;ISetRegionAck&gt;, void, unknown&gt; endEditing endEditing(): void Inherited from RegionStore.endEditing Returns void focusCenter focusCenter(): void Inherited from RegionStore.focusCenter Returns void publicgetAnnotationStyles getAnnotationStyles(): { pointerLength: number; pointerWidth: number } Returns { pointerLength: number; pointerWidth: number } pointerLength: number pointerWidth: number publicgetRegionApproximation getRegionApproximation(astTransform: Mapping): Point2D[] | { eastApproximatePoints: number[]; northApproximatePoints: number[] } | { hypotenuseApproximatePoints: number[]; xApproximatePoints: number[]; yApproximatePoints: number[] } Inherited from RegionStore.getRegionApproximation Parameters astTransform: Mapping Returns Point2D[] | { eastApproximatePoints: number[]; northApproximatePoints: number[] } | { hypotenuseApproximatePoints: number[]; xApproximatePoints: number[]; yApproximatePoints: number[] } publicinitializeStyles initializeStyles(annotationStyles: { pointerLength: number; pointerWidth: number }): void Parameters annotationStyles: { pointerLength: number; pointerWidth: number } Returns void setCenter setCenter(p: Point2D, skipUpdate?: boolean): void Inherited from RegionStore.setCenter Parameters p: Point2D skipUpdate: boolean = false Returns void setColor setColor(color: string): void Inherited from RegionStore.setColor Parameters color: string Returns void setControlPoint setControlPoint(index: number, p: Point2D, skipUpdate?: boolean): void Inherited from RegionStore.setControlPoint Parameters index: number p: Point2D skipUpdate: boolean = false Returns void setControlPoints setControlPoints(points: Point2D[], skipUpdate?: boolean, shapeChanged?: boolean): void Inherited from RegionStore.setControlPoints Parameters points: Point2D[] skipUpdate: boolean = false shapeChanged: boolean = true Returns void setCoordinate setCoordinate(coordinate: CoordinateMode): void Inherited from RegionStore.setCoordinate Parameters coordinate: CoordinateMode Returns void setDashLength setDashLength(dashLength: number): void Inherited from RegionStore.setDashLength Parameters dashLength: number Returns void setLineWidth setLineWidth(lineWidth: number): void Inherited from RegionStore.setLineWidth Parameters lineWidth: number Returns void setLocked setLocked(locked: boolean): void Inherited from RegionStore.setLocked Parameters locked: boolean Returns void setName setName(name: string): void Inherited from RegionStore.setName Parameters name: string Returns void setPointerLength setPointerLength(pointerLength: number): void Parameters pointerLength: number Returns void setPointerWidth setPointerWidth(pointerWidth: number): void Parameters pointerWidth: number Returns void setRegionId setRegionId(id: number): void Inherited from RegionStore.setRegionId Parameters id: number Returns void setRotation setRotation(angle: number, skipUpdate?: boolean): void Inherited from RegionStore.setRotation Parameters angle: number skipUpdate: boolean = false Returns void setSize setSize(p: Point2D, skipUpdate?: boolean): void Inherited from RegionStore.setSize Parameters p: Point2D skipUpdate: boolean = false Returns void toggleLock toggleLock(): void Inherited from RegionStore.toggleLock Returns void publicstaticGetRegionProperties GetRegionProperties(regionType: RegionType, controlPoints: Point2D[], rotation: number): string Inherited from RegionStore.GetRegionProperties Parameters regionType: RegionType controlPoints: Point2D[] rotation: number Returns string publicstaticIsRegionCustomIcon IsRegionCustomIcon(regionType: RegionType): boolean Inherited from RegionStore.IsRegionCustomIcon Parameters regionType: RegionType Returns boolean publicstaticIsRegionDashLengthValid IsRegionDashLengthValid(regionDashLength: number): boolean Inherited from RegionStore.IsRegionDashLengthValid Parameters regionDashLength: number Returns boolean publicstaticIsRegionLineWidthValid IsRegionLineWidthValid(regionLineWidth: number): boolean Inherited from RegionStore.IsRegionLineWidthValid Parameters regionLineWidth: number Returns boolean publicstaticIsRegionTypeValid IsRegionTypeValid(regionType: RegionType): boolean Inherited from RegionStore.IsRegionTypeValid Parameters regionType: RegionType Returns boolean publicstaticRegionIconString RegionIconString(regionType: RegionType): any Inherited from RegionStore.RegionIconString Parameters regionType: RegionType Returns any publicstaticRegionTypeString RegionTypeString(regionType: RegionType): string Inherited from RegionStore.RegionTypeString Parameters regionType: RegionType Returns string","keywords":""},{"title":"WidgetConfig","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/WidgetConfig","content":"WidgetConfig Implements DefaultWidgetConfig Index Constructors constructor Properties componentIddefaultHeightdefaultWidthdefaultXdefaultYhelpTypeidisCloseableminHeightminWidthparentIdparentTypetitletypezIndex Methods setDefaultPositionsetDefaultSize Constructors constructor new WidgetConfig(id: string, defaultConfig: DefaultWidgetConfig): WidgetConfig Parameters id: string defaultConfig: DefaultWidgetConfig Returns WidgetConfig Properties optionalcomponentId componentId?: string Implementation of DefaultWidgetConfig.componentId defaultHeight defaultHeight: number Implementation of DefaultWidgetConfig.defaultHeight defaultWidth defaultWidth: number Implementation of DefaultWidgetConfig.defaultWidth optionaldefaultX defaultX?: number Implementation of DefaultWidgetConfig.defaultX optionaldefaultY defaultY?: number Implementation of DefaultWidgetConfig.defaultY optionalhelpType helpType?: HelpType | HelpType[] Implementation of DefaultWidgetConfig.helpType id id: string Implementation of DefaultWidgetConfig.id readonlyisCloseable isCloseable: boolean Implementation of DefaultWidgetConfig.isCloseable readonlyminHeight minHeight: number Implementation of DefaultWidgetConfig.minHeight readonlyminWidth minWidth: number Implementation of DefaultWidgetConfig.minWidth optionalparentId parentId?: string Implementation of DefaultWidgetConfig.parentId optionalparentType parentType?: string Implementation of DefaultWidgetConfig.parentType title title: string Implementation of DefaultWidgetConfig.title readonlytype type: string Implementation of DefaultWidgetConfig.type optionalzIndex zIndex?: number = 0 Methods setDefaultPosition setDefaultPosition(x: number, y: number): void Parameters x: number y: number Returns void setDefaultSize setDefaultSize(w: number, h: number): void Parameters w: number h: number Returns void","keywords":""},{"title":"WidgetProps","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/WidgetProps","content":"WidgetProps Index Constructors constructor Properties dockedfloatingSettingsIdid Constructors constructor new WidgetProps(): WidgetProps Returns WidgetProps Properties docked docked: boolean optionalfloatingSettingsId floatingSettingsId?: string id id: string","keywords":""},{"title":"AlertType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/AlertType","content":"AlertType Index Enumeration Members InfoInteractiveRetry Enumeration Members Info Info: 0 Interactive Interactive: 1 Retry Retry: 2","keywords":""},{"title":"AnimationMode","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/AnimationMode","content":"AnimationMode Index Enumeration Members CHANNELFRAMESTOKES Enumeration Members CHANNEL CHANNEL: 0 FRAME FRAME: 2 STOKES STOKES: 1","keywords":""},{"title":"AstColorsIndex","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/AstColorsIndex","content":"AstColorsIndex Index Enumeration Members AXISBORDERDISTANCE_MEASUREGLOBALGRIDLABELNUMBERTICKTITLE Enumeration Members AXIS AXIS: 5 BORDER BORDER: 3 DISTANCE_MEASURE DISTANCE_MEASURE: 8 GLOBAL GLOBAL: 0 GRID GRID: 2 LABEL LABEL: 7 NUMBER NUMBER: 6 TICK TICK: 4 TITLE TITLE: 1","keywords":""},{"title":"BeamType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/BeamType","content":"BeamType Index Enumeration Members OpenSolid Enumeration Members Open Open: open Solid Solid: solid","keywords":""},{"title":"BrowserMode","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/BrowserMode","content":"BrowserMode Index Enumeration Members CatalogFileRegionExportRegionImportSaveFile Enumeration Members Catalog Catalog: 4 File File: 0 RegionExport RegionExport: 3 RegionImport RegionImport: 2 SaveFile SaveFile: 1","keywords":""},{"title":"CatalogCoordinate","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/CatalogCoordinate","content":"CatalogCoordinate Index Enumeration Members NONEPlotShapePlotSizeXY Enumeration Members NONE NONE: None PlotShape PlotShape: Shape PlotSize PlotSize: Size X X: X Y Y: Y","keywords":""},{"title":"CatalogOverlayShape","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/CatalogOverlayShape","content":"CatalogOverlayShape Index Enumeration Members BOX_LINEDCIRCLE_FILLEDCIRCLE_LINEDCROSS_FILLEDCROSS_LINEDELLIPSE_LINEDHEXAGON_LINEDHEXAGON_LINED_2LineSegment_FILLEDRHOMB_LINEDTRIANGLE_LINED_DOWNTRIANGLE_LINED_UPX_FILLEDX_LINED Enumeration Members BOX_LINED BOX_LINED: 1 CIRCLE_FILLED CIRCLE_FILLED: 2 CIRCLE_LINED CIRCLE_LINED: 3 CROSS_FILLED CROSS_FILLED: 16 CROSS_LINED CROSS_LINED: 17 ELLIPSE_LINED ELLIPSE_LINED: 11 HEXAGON_LINED HEXAGON_LINED: 5 HEXAGON_LINED_2 HEXAGON_LINED_2: 15 LineSegment_FILLED LineSegment_FILLED: 20 RHOMB_LINED RHOMB_LINED: 7 TRIANGLE_LINED_DOWN TRIANGLE_LINED_DOWN: 13 TRIANGLE_LINED_UP TRIANGLE_LINED_UP: 9 X_FILLED X_FILLED: 18 X_LINED X_LINED: 19","keywords":""},{"title":"WidgetsStore","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/class/WidgetsStore","content":"WidgetsStore Index Properties CARTAWidgetsanimatorWidgetscatalogPlotWidgetscatalogWidgetscursorInfoWidgetsfloatingSettingsWidgetsfloatingWidgetshistogramWidgetslayerListWidgetslogWidgetspvGeneratorWidgetsregionListWidgetsrenderConfigWidgetsspatialProfileWidgetsspectralLineQueryWidgetsspectralProfileWidgetsstatsWidgetsstokesAnalysisWidgets Accessors hasSpectralProfilerisSpectralWidgetStreamingDataspectralProfilerListInstance Methods addAnimatorWidgetaddCatalogPlotWidgetaddCatalogWidgetaddCursorInfoWidgetaddFloatingSettingsWidgetaddFloatingWidgetaddHistogramWidgetaddLayerListWidgetaddLogWidgetaddPvGeneratorWidgetaddRegionListWidgetaddRenderConfigWidgetaddSpatialProfileWidgetaddSpectralLineQueryWidgetaddSpectralProfileWidgetaddStatsWidgetaddStokesWidgetchangeWidgetIdcreateFloatingAnimatorWidgetcreateFloatingCatalogPlotWidgetcreateFloatingCatalogWidgetcreateFloatingCursorInfoWidgetcreateFloatingHistogramWidgetcreateFloatingLayerListWidgetcreateFloatingLogWidgetcreateFloatingPvGeneratorWidgetcreateFloatingRegionListWidgetcreateFloatingRenderWidgetcreateFloatingSettingsWidgetcreateFloatingSpatialProfilerWidgetcreateFloatingSpectralLineQueryWidgetcreateFloatingSpectralProfilerWidgetcreateFloatingStatsWidgetcreateFloatingStokesWidgetcreateFloatingWidgetgetSpectralWidgetStoreByIDhandleItemCreationhandleItemRemovalhandleStateUpdatesinitLayoutWithWidgetsinitWidgetsonCogPinedClickonHelpPinedClickonImagePanelButtonClickonNextPageClickonPreviousPageClickreloadFloatingCatalogWidgetremoveFloatingWidgetremoveFloatingWidgetComponentremoveFloatingWidgetsremoveFrameFromRegionWidgetsremoveRegionFromRegionWidgetsremoveRegionsFromRegionWidgetsByFrameremoveWidgetselectFloatingWidgetsetImageMultiPanelEnabledsetWidgetComponentTitlesetWidgetTitletoWidgetSettingsConfigunpinWidgetupdateImagePanelPageButtonsupdateImageWidgetTitleupdateSelectFloatingWidgetzIndexResetWidgetPlotXYBounds Properties publicreadonlyCARTAWidgets CARTAWidgets: Map&lt;WidgetType, { icon: string; isCustomIcon: boolean; onClick: () =&gt; void; widgetConfig: DefaultWidgetConfig }&gt; = ... animatorWidgets animatorWidgets: Map&lt;string, EmptyWidgetStore&gt; catalogPlotWidgets catalogPlotWidgets: Map&lt;string, CatalogPlotWidgetStore&gt; catalogWidgets catalogWidgets: Map&lt;string, CatalogWidgetStore&gt; cursorInfoWidgets cursorInfoWidgets: Map&lt;string, EmptyWidgetStore&gt; floatingSettingsWidgets floatingSettingsWidgets: Map&lt;string, string&gt; floatingWidgets floatingWidgets: WidgetConfig[] histogramWidgets histogramWidgets: Map&lt;string, HistogramWidgetStore&gt; layerListWidgets layerListWidgets: Map&lt;string, LayerListWidgetStore&gt; logWidgets logWidgets: Map&lt;string, EmptyWidgetStore&gt; pvGeneratorWidgets pvGeneratorWidgets: Map&lt;string, PvGeneratorWidgetStore&gt; regionListWidgets regionListWidgets: Map&lt;string, EmptyWidgetStore&gt; renderConfigWidgets renderConfigWidgets: Map&lt;string, RenderConfigWidgetStore&gt; spatialProfileWidgets spatialProfileWidgets: Map&lt;string, SpatialProfileWidgetStore&gt; spectralLineQueryWidgets spectralLineQueryWidgets: Map&lt;string, SpectralLineQueryWidgetStore&gt; spectralProfileWidgets spectralProfileWidgets: Map&lt;string, SpectralProfileWidgetStore&gt; statsWidgets statsWidgets: Map&lt;string, StatsWidgetStore&gt; stokesAnalysisWidgets stokesAnalysisWidgets: Map&lt;string, StokesAnalysisWidgetStore&gt; Accessors hasSpectralProfiler get hasSpectralProfiler(): boolean Returns boolean isSpectralWidgetStreamingData get isSpectralWidgetStreamingData(): boolean Returns boolean spectralProfilerList get spectralProfilerList(): string[] Returns string[] staticInstance get Instance(): WidgetsStore Returns WidgetsStore Methods addAnimatorWidget addAnimatorWidget(id?: string): string Parameters id: string = null Returns string addCatalogPlotWidget addCatalogPlotWidget(props: CatalogPlotWidgetStoreProps, id?: string): string Parameters props: CatalogPlotWidgetStoreProps id: string = null Returns string addCatalogWidget addCatalogWidget(catalogFileId: number, id?: string, widgetSettings?: object): string Parameters catalogFileId: number id: string = null widgetSettings: object = null Returns string addCursorInfoWidget addCursorInfoWidget(id?: string): string Parameters id: string = null Returns string addFloatingSettingsWidget addFloatingSettingsWidget(id?: string, parentId: string, type: string): string Parameters id: string = null parentId: string type: string Returns string addFloatingWidget addFloatingWidget(widget: WidgetConfig): void Parameters widget: WidgetConfig Returns void addHistogramWidget addHistogramWidget(id?: string, widgetSettings?: object): string Parameters id: string = null widgetSettings: object = null Returns string addLayerListWidget addLayerListWidget(id?: string): string Parameters id: string = null Returns string addLogWidget addLogWidget(id?: string): string Parameters id: string = null Returns string addPvGeneratorWidget addPvGeneratorWidget(id?: string): string Parameters id: string = null Returns string addRegionListWidget addRegionListWidget(id?: string): string Parameters id: string = null Returns string addRenderConfigWidget addRenderConfigWidget(id?: string, widgetSettings?: object): string Parameters id: string = null widgetSettings: object = null Returns string addSpatialProfileWidget addSpatialProfileWidget(id?: string, widgetSettings?: object): string Parameters id: string = null widgetSettings: object = null Returns string addSpectralLineQueryWidget addSpectralLineQueryWidget(id?: string): string Parameters id: string = null Returns string addSpectralProfileWidget addSpectralProfileWidget(id?: string, widgetSettings?: object): string Parameters id: string = null widgetSettings: object = null Returns string addStatsWidget addStatsWidget(id?: string): string Parameters id: string = null Returns string addStokesWidget addStokesWidget(id?: string, widgetSettings?: object): string Parameters id: string = null widgetSettings: object = null Returns string changeWidgetId changeWidgetId(id: string, newId: string): void Parameters id: string newId: string Returns void createFloatingAnimatorWidget createFloatingAnimatorWidget(): void Returns void createFloatingCatalogPlotWidget createFloatingCatalogPlotWidget(props: CatalogPlotWidgetStoreProps): { widgetComponentId: string; widgetStoreId: string } Parameters props: CatalogPlotWidgetStoreProps Returns { widgetComponentId: string; widgetStoreId: string } widgetComponentId: string widgetStoreId: string createFloatingCatalogWidget createFloatingCatalogWidget(catalogFileId: number): { widgetComponentId: string; widgetStoreId: string } Parameters catalogFileId: number Returns { widgetComponentId: string; widgetStoreId: string } widgetComponentId: string widgetStoreId: string createFloatingCursorInfoWidget createFloatingCursorInfoWidget(): void Returns void createFloatingHistogramWidget createFloatingHistogramWidget(): void Returns void createFloatingLayerListWidget createFloatingLayerListWidget(): void Returns void createFloatingLogWidget createFloatingLogWidget(): void Returns void createFloatingPvGeneratorWidget createFloatingPvGeneratorWidget(): void Returns void createFloatingRegionListWidget createFloatingRegionListWidget(): void Returns void createFloatingRenderWidget createFloatingRenderWidget(): void Returns void createFloatingSettingsWidget createFloatingSettingsWidget(title: string, parentId: string, parentType: string): void Parameters title: string parentId: string parentType: string Returns void createFloatingSpatialProfilerWidget createFloatingSpatialProfilerWidget(): void Returns void createFloatingSpectralLineQueryWidget createFloatingSpectralLineQueryWidget(): void Returns void createFloatingSpectralProfilerWidget createFloatingSpectralProfilerWidget(): void Returns void createFloatingStatsWidget createFloatingStatsWidget(): void Returns void createFloatingStokesWidget createFloatingStokesWidget(): void Returns void createFloatingWidget createFloatingWidget(savedConfig: any): void Parameters savedConfig: any Returns void publicgetSpectralWidgetStoreByID getSpectralWidgetStoreByID(id: string): SpectralProfileWidgetStore Parameters id: string Returns SpectralProfileWidgetStore handleItemCreation handleItemCreation(item: ContentItem): void Parameters item: ContentItem Returns void handleItemRemoval handleItemRemoval(item: ContentItem): void Parameters item: ContentItem Returns void handleStateUpdates handleStateUpdates(event: any): void Parameters event: any Returns void publicinitLayoutWithWidgets initLayoutWithWidgets(layout: GoldenLayout): void Parameters layout: GoldenLayout Returns void publicinitWidgets initWidgets(componentConfigs: any[], floating: any[]): void Parameters componentConfigs: any[] floating: any[] Returns void onCogPinedClick onCogPinedClick(item: ContentItem): void Parameters item: ContentItem Returns void onHelpPinedClick onHelpPinedClick(ev: ClickEvent&lt;HTMLElement&gt;, item: ContentItem): void Parameters ev: ClickEvent&lt;HTMLElement&gt; item: ContentItem Returns void onImagePanelButtonClick onImagePanelButtonClick(): void Returns void onNextPageClick onNextPageClick(): void Returns void onPreviousPageClick onPreviousPageClick(): void Returns void reloadFloatingCatalogWidget reloadFloatingCatalogWidget(): void Returns void removeFloatingWidget removeFloatingWidget(id: string, preserveStore?: boolean): void Parameters id: string preserveStore: boolean = false Returns void removeFloatingWidgetComponent removeFloatingWidgetComponent(componentId: string): void Parameters componentId: string Returns void publicremoveFloatingWidgets removeFloatingWidgets(): void Returns void publicremoveFrameFromRegionWidgets removeFrameFromRegionWidgets(fileId?: number): void Parameters fileId: number = ACTIVE_FILE_ID Returns void publicremoveRegionFromRegionWidgets removeRegionFromRegionWidgets(fileId: number, regionId: number): void Parameters fileId: number regionId: number Returns void publicremoveRegionsFromRegionWidgetsByFrame removeRegionsFromRegionWidgetsByFrame(fileId: number): void Parameters fileId: number Returns void publicremoveWidget removeWidget(widgetId: string, widgetType: string): void Parameters widgetId: string widgetType: string Returns void selectFloatingWidget selectFloatingWidget(id: string): void Parameters id: string Returns void setImageMultiPanelEnabled setImageMultiPanelEnabled(multiPanelEnabled: boolean): void Parameters multiPanelEnabled: boolean Returns void setWidgetComponentTitle setWidgetComponentTitle(componentId: string, title: string): void Parameters componentId: string title: string Returns void setWidgetTitle setWidgetTitle(id: string, title: string): void Parameters id: string title: string Returns void publictoWidgetSettingsConfig toWidgetSettingsConfig(widgetType: string, widgetID: string): any Parameters widgetType: string widgetID: string Returns any unpinWidget unpinWidget(item: ContentItem): void Parameters item: ContentItem Returns void updateImagePanelPageButtons updateImagePanelPageButtons(): void Returns void updateImageWidgetTitle updateImageWidgetTitle(layout: GoldenLayout): void Parameters layout: GoldenLayout Returns void updateSelectFloatingWidgetzIndex updateSelectFloatingWidgetzIndex(id: string): void Parameters id: string Returns void publicstaticResetWidgetPlotXYBounds ResetWidgetPlotXYBounds(storeMap: Map&lt;string, HistogramWidgetStore | SpatialProfileWidgetStore | SpectralProfileWidgetStore | StokesAnalysisWidgetStore&gt;, fileId?: number): void Parameters storeMap: Map&lt;string, HistogramWidgetStore | SpatialProfileWidgetStore | SpectralProfileWidgetStore | StokesAnalysisWidgetStore&gt; fileId: number = ACTIVE_FILE_ID Returns void","keywords":""},{"title":"CatalogPlotType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/CatalogPlotType","content":"CatalogPlotType Index Enumeration Members D2ScatterHistogramImageOverlay Enumeration Members D2Scatter D2Scatter: 2D scatter Histogram Histogram: Histogram ImageOverlay ImageOverlay: Image overlay","keywords":""},{"title":"CatalogUpdateMode","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/CatalogUpdateMode","content":"CatalogUpdateMode Index Enumeration Members PlotsUpdateTableUpdateViewUpdate Enumeration Members PlotsUpdate PlotsUpdate: PlotsUpdate TableUpdate TableUpdate: TableUpdate ViewUpdate ViewUpdate: ViewUpdate","keywords":""},{"title":"CatalogSettingsTabs","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/CatalogSettingsTabs","content":"CatalogSettingsTabs Index Enumeration Members COLORGLOBALORIENTATIONSIZESIZE_MAJORSIZE_MINORSTYLING Enumeration Members COLOR COLOR: 2 GLOBAL GLOBAL: 0 ORIENTATION ORIENTATION: 4 SIZE SIZE: 3 SIZE_MAJOR SIZE_MAJOR: 5 SIZE_MINOR SIZE_MINOR: 6 STYLING STYLING: 1","keywords":""},{"title":"ContourDashMode","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/ContourDashMode","content":"ContourDashMode Index Enumeration Members DashedNegativeOnlyNone Enumeration Members Dashed Dashed: Dashed NegativeOnly NegativeOnly: Negative only None None: None","keywords":""},{"title":"ContourGeneratorType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/ContourGeneratorType","content":"ContourGeneratorType Index Enumeration Members MeanSigmaListMinMaxNScalingPercentagesRefValueStartStepMultiplier Enumeration Members MeanSigmaList MeanSigmaList: mean-sigma-list MinMaxNScaling MinMaxNScaling: min-max-scaling PercentagesRefValue PercentagesRefValue: percentages-ref.value StartStepMultiplier StartStepMultiplier: start-step-multiplier","keywords":""},{"title":"CoordinateMode","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/CoordinateMode","content":"CoordinateMode Index Enumeration Members ImageWorld Enumeration Members Image Image: Image World World: World","keywords":""},{"title":"FileFilteringType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/FileFilteringType","content":"FileFilteringType Index Enumeration Members FuzzyRegexUnix Enumeration Members Fuzzy Fuzzy: fuzzy Regex Regex: regex Unix Unix: unix","keywords":""},{"title":"FittingContinuum","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/FittingContinuum","content":"FittingContinuum Index Enumeration Members FIRST_ORDERNONEZEROTH_ORDER Enumeration Members FIRST_ORDER FIRST_ORDER: 1 NONE NONE: -1 ZEROTH_ORDER ZEROTH_ORDER: 0","keywords":""},{"title":"FittingFunction","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/FittingFunction","content":"FittingFunction Index Enumeration Members GAUSSIANLORENTZIAN Enumeration Members GAUSSIAN GAUSSIAN: 0 LORENTZIAN LORENTZIAN: 1","keywords":""},{"title":"FontStyle","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/FontStyle","content":"FontStyle Index Enumeration Members BOLDBOLD_ITALICITALICNORMAL Enumeration Members BOLD BOLD: Bold BOLD_ITALIC BOLD_ITALIC: Italic Bold ITALIC ITALIC: Italic NORMAL NORMAL: Normal","keywords":""},{"title":"Font","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/Font","content":"Font Index Enumeration Members COURIERHELVETICATIMES Enumeration Members COURIER COURIER: Courier HELVETICA HELVETICA: Helvetica TIMES TIMES: Times","keywords":""},{"title":"FrameScaling","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/FrameScaling","content":"FrameScaling Index Enumeration Members CUSTOMEXPGAMMALINEARLOGPOWERSQRTSQUARE Enumeration Members CUSTOM CUSTOM: 7 EXP EXP: 6 GAMMA GAMMA: 5 LINEAR LINEAR: 0 LOG LOG: 1 POWER POWER: 4 SQRT SQRT: 2 SQUARE SQUARE: 3","keywords":""},{"title":"LabelType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/LabelType","content":"LabelType Index Enumeration Members ExteriorInterior Enumeration Members Exterior Exterior: Exterior Interior Interior: Interior","keywords":""},{"title":"LayerListSettingsTabs","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/LayerListSettingsTabs","content":"LayerListSettingsTabs Index Enumeration Members MATCHINGREST_FREQ Enumeration Members MATCHING MATCHING: 0 REST_FREQ REST_FREQ: 1","keywords":""},{"title":"HelpType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/HelpType","content":"HelpType Index Enumeration Members ANIMATORCATALOG_HISTOGRAM_PLOTCATALOG_OVERLAYCATALOG_SCATTER_PLOTCATALOG_SETTINGS_COLORCATALOG_SETTINGS_GOLBALCATALOG_SETTINGS_ORIENTATIONCATALOG_SETTINGS_OVERLAYCATALOG_SETTINGS_SIZECONTOURCURSOR_INFODISTANCE_MEASUREMENTFILE_BROWSERFILE_INFOHISTOGRAMHISTOGRAM_SETTINGSIMAGE_FITTINGIMAGE_VIEWIMAGE_VIEW_SETTINGSLAYER_LISTLAYER_LIST_SETTINGSLOGONLINE_CATALOG_QUERYPLACEHOLDERPREFERENCESPV_GENERATORREGION_DIALOGREGION_LISTRENDER_CONFIGRENDER_CONFIG_SETTINGSSAVE_LAYOUTSPATIAL_PROFILERSPATIAL_PROFILER_SETTINGS_COMPUTATIONSPATIAL_PROFILER_SETTINGS_SMOOTHINGSPATIAL_PROFILER_SETTINGS_STYLINGSPECTRAL_LINE_QUERYSPECTRAL_PROFILERSPECTRAL_PROFILER_SETTINGS_CONVERSIONSPECTRAL_PROFILER_SETTINGS_FITTINGSPECTRAL_PROFILER_SETTINGS_MOMENTSSPECTRAL_PROFILER_SETTINGS_SMOOTHINGSPECTRAL_PROFILER_SETTINGS_STYLINGSTATSSTOKESSTOKES_ANALYSISSTOKES_ANALYSIS_SETTINGS_CONVERSIONSTOKES_ANALYSIS_SETTINGS_LINE_PLOT_STYLINGSTOKES_ANALYSIS_SETTINGS_SCATTER_PLOT_STYLINGSTOKES_ANALYSIS_SETTINGS_SMOOTHINGVECTOR_OVERLAYWORKSPACE Enumeration Members ANIMATOR ANIMATOR: Animator CATALOG_HISTOGRAM_PLOT CATALOG_HISTOGRAM_PLOT: Catalog Histogram Plot CATALOG_OVERLAY CATALOG_OVERLAY: Catalog Overlay CATALOG_SCATTER_PLOT CATALOG_SCATTER_PLOT: Catalog Scatter Plot CATALOG_SETTINGS_COLOR CATALOG_SETTINGS_COLOR: Catalog Color Settings CATALOG_SETTINGS_GOLBAL CATALOG_SETTINGS_GOLBAL: Catalog Global Settings CATALOG_SETTINGS_ORIENTATION CATALOG_SETTINGS_ORIENTATION: Catalog Orientation Settings CATALOG_SETTINGS_OVERLAY CATALOG_SETTINGS_OVERLAY: Catalog Overlay Settings CATALOG_SETTINGS_SIZE CATALOG_SETTINGS_SIZE: Catalog Size Settings CONTOUR CONTOUR: Contour Configuration CURSOR_INFO CURSOR_INFO: Cursor Information DISTANCE_MEASUREMENT DISTANCE_MEASUREMENT: Distance Measurement FILE_BROWSER FILE_BROWSER: File Browser FILE_INFO FILE_INFO: File Header HISTOGRAM HISTOGRAM: Histogram HISTOGRAM_SETTINGS HISTOGRAM_SETTINGS: Histogram Settings IMAGE_FITTING IMAGE_FITTING: Image Fitting IMAGE_VIEW IMAGE_VIEW: Image View IMAGE_VIEW_SETTINGS IMAGE_VIEW_SETTINGS: Image View Settings LAYER_LIST LAYER_LIST: Image List LAYER_LIST_SETTINGS LAYER_LIST_SETTINGS: Image List Settings LOG LOG: Log ONLINE_CATALOG_QUERY ONLINE_CATALOG_QUERY: Online Catalog Query PLACEHOLDER PLACEHOLDER: Placeholder PREFERENCES PREFERENCES: Preferences PV_GENERATOR PV_GENERATOR: PV Generator REGION_DIALOG REGION_DIALOG: Region Dialog REGION_LIST REGION_LIST: Region List RENDER_CONFIG RENDER_CONFIG: Render Configuration RENDER_CONFIG_SETTINGS RENDER_CONFIG_SETTINGS: Render Configuration Settings SAVE_LAYOUT SAVE_LAYOUT: Save Layout SPATIAL_PROFILER SPATIAL_PROFILER: Spatial Profiler SPATIAL_PROFILER_SETTINGS_COMPUTATION SPATIAL_PROFILER_SETTINGS_COMPUTATION: Spatial Profiler Computation Settings SPATIAL_PROFILER_SETTINGS_SMOOTHING SPATIAL_PROFILER_SETTINGS_SMOOTHING: Spatial Profiler Smoothing Settings SPATIAL_PROFILER_SETTINGS_STYLING SPATIAL_PROFILER_SETTINGS_STYLING: Spatial Profiler Style Settings SPECTRAL_LINE_QUERY SPECTRAL_LINE_QUERY: Spectral Line Query SPECTRAL_PROFILER SPECTRAL_PROFILER: Spectral Profiler SPECTRAL_PROFILER_SETTINGS_CONVERSION SPECTRAL_PROFILER_SETTINGS_CONVERSION: Spectral Profiler Conversion Settings SPECTRAL_PROFILER_SETTINGS_FITTING SPECTRAL_PROFILER_SETTINGS_FITTING: Spectral Profiler Fitting Settings SPECTRAL_PROFILER_SETTINGS_MOMENTS SPECTRAL_PROFILER_SETTINGS_MOMENTS: Spectral Profiler Moments Settings SPECTRAL_PROFILER_SETTINGS_SMOOTHING SPECTRAL_PROFILER_SETTINGS_SMOOTHING: Spectral Profiler Smoothing Settings SPECTRAL_PROFILER_SETTINGS_STYLING SPECTRAL_PROFILER_SETTINGS_STYLING: Spectral Profiler Style Settings STATS STATS: Statistics STOKES STOKES: Stokes Hypercube Dialog STOKES_ANALYSIS STOKES_ANALYSIS: Stokes Analysis STOKES_ANALYSIS_SETTINGS_CONVERSION STOKES_ANALYSIS_SETTINGS_CONVERSION: Stokes Conversion Settings STOKES_ANALYSIS_SETTINGS_LINE_PLOT_STYLING STOKES_ANALYSIS_SETTINGS_LINE_PLOT_STYLING: Stokes Line Plot Settings STOKES_ANALYSIS_SETTINGS_SCATTER_PLOT_STYLING STOKES_ANALYSIS_SETTINGS_SCATTER_PLOT_STYLING: Stokes Scatter Plot Settings STOKES_ANALYSIS_SETTINGS_SMOOTHING STOKES_ANALYSIS_SETTINGS_SMOOTHING: Stokes Smoothing Settings VECTOR_OVERLAY VECTOR_OVERLAY: Vector Overlay Configuration WORKSPACE WORKSPACE: Workspace Management","keywords":""},{"title":"MomentSelectingMode","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/MomentSelectingMode","content":"MomentSelectingMode Index Enumeration Members CHANNELMASKNONE Enumeration Members CHANNEL CHANNEL: 2 MASK MASK: 3 NONE NONE: 1","keywords":""},{"title":"MultiProfileCategory","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/MultiProfileCategory","content":"MultiProfileCategory Index Enumeration Members IMAGENONEREGIONSTATISTICSTOKES Enumeration Members IMAGE IMAGE: Image NONE NONE: None REGION REGION: Region STATISTIC STATISTIC: Statistic STOKES STOKES: Polarization","keywords":""},{"title":"NumberFormatType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/NumberFormatType","content":"NumberFormatType Index Enumeration Members DMSDegreesHMS Enumeration Members DMS DMS: dms Degrees Degrees: d HMS HMS: hms","keywords":""},{"title":"PlayMode","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/PlayMode","content":"PlayMode Index Enumeration Members BACKWARDBLINKBOUNCINGFORWARD Enumeration Members BACKWARD BACKWARD: 1 BLINK BLINK: 3 BOUNCING BOUNCING: 2 FORWARD FORWARD: 0","keywords":""},{"title":"PVAxis","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/PVAxis","content":"PVAxis Index Enumeration Members SPATIALSPECTRAL Enumeration Members SPATIAL SPATIAL: Spatial SPECTRAL SPECTRAL: Spectral","keywords":""},{"title":"RadiusUnits","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/RadiusUnits","content":"RadiusUnits Index Enumeration Members ARCMINUTESARCSECONDSDEGREES Enumeration Members ARCMINUTES ARCMINUTES: arcmin ARCSECONDS ARCSECONDS: arcsec DEGREES DEGREES: deg","keywords":""},{"title":"RedshiftType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/RedshiftType","content":"RedshiftType Index Enumeration Members VZ Enumeration Members V V: Velocity (km/s) Z Z: Redshift","keywords":""},{"title":"RegionId","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/RegionId","content":"RegionId Index Enumeration Members ACTIVECURSORIMAGENONE Enumeration Members ACTIVE ACTIVE: -3 CURSOR CURSOR: 0 IMAGE IMAGE: -1 NONE NONE: -4","keywords":""},{"title":"RegionMode","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/RegionMode","content":"RegionMode Index Enumeration Members CREATINGMOVING Enumeration Members CREATING CREATING: 1 MOVING MOVING: 0","keywords":""},{"title":"RegionsOpacity","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/RegionsOpacity","content":"RegionsOpacity Index Enumeration Members InvisibleSemiTransparentVisible Enumeration Members Invisible Invisible: 0 SemiTransparent SemiTransparent: 0.5 Visible Visible: 1","keywords":""},{"title":"RegionsType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/RegionsType","content":"RegionsType Index Enumeration Members CLOSEDCLOSED_AND_POINTLINEPOINT_AND_LINES Enumeration Members CLOSED CLOSED: 0 CLOSED_AND_POINT CLOSED_AND_POINT: 1 LINE LINE: 3 POINT_AND_LINES POINT_AND_LINES: 2","keywords":""},{"title":"PreferenceKeys","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/PreferenceKeys","content":"PreferenceKeys Index Enumeration Members ANNOTATION_COLORANNOTATION_DASH_LENGTHANNOTATION_LINE_WIDTHCATALOG_DISPLAYED_COLUMN_SIZECATALOG_TABLE_SEPARATOR_POSITIONCHECK_NEW_RELEASECOMPATIBILITY_AIPS_BEAM_SUPPORTCONTOUR_CONFIG_COLORCONTOUR_CONFIG_COLORMAPCONTOUR_CONFIG_COLORMAP_ENABLEDCONTOUR_CONFIG_GENERATOR_TYPECONTOUR_CONFIG_NUM_LEVELSCONTOUR_CONFIG_SMOOTHING_FACTORCONTOUR_CONFIG_SMOOTHING_MODECONTOUR_CONFIG_THICKNESSGLOBAL_AUTOLAUNCHGLOBAL_AUTO_WCS_MATCHINGGLOBAL_CODE_SNIPPETS_ENABLEDGLOBAL_CURSOR_POSITIONGLOBAL_DRAG_PANNINGGLOBAL_FILE_FILTER_MODEGLOBAL_KEEP_LAST_USED_FOLDERGLOBAL_LAYOUTGLOBAL_SAVED_LAST_FOLDERGLOBAL_SPECTRAL_MATCHING_TYPEGLOBAL_THEMEGLOBAL_TRANSPARENT_IMAGE_BACKGROUNDGLOBAL_ZOOM_MODEGLOBAL_ZOOM_POINTIMAGE_MULTI_PANEL_ENABLEDIMAGE_PANEL_COLUMNSIMAGE_PANEL_MODEIMAGE_PANEL_ROWSLATEST_RELEASELOG_EVENTPERFORMANCE_ANIMATION_COMPRESSION_QUALITYPERFORMANCE_CONTOUR_CHUNK_SIZEPERFORMANCE_CONTOUR_COMPRESSION_LEVELPERFORMANCE_CONTOUR_CONTROL_MAP_WIDTHPERFORMANCE_CONTOUR_DECIMATIONPERFORMANCE_GPU_TILE_CACHEPERFORMANCE_IMAGE_COMPRESSION_QUALITYPERFORMANCE_LIMIT_OVERLAY_REDRAWPERFORMANCE_LOW_BAND_WIDTH_MODEPERFORMANCE_PV_PREVIEW_CUBE_SIZE_LIMITPERFORMANCE_PV_PREVIEW_CUBE_SIZE_LIMIT_UNITPERFORMANCE_STOP_ANIMATION_PLAYBACK_MINUTESPERFORMANCE_STREAM_CONTOURS_WHILE_ZOOMINGPERFORMANCE_SYSTEM_TILE_CACHEPIXEL_GRID_COLORPIXEL_GRID_VISIBLEPOINT_ANNOTATION_SHAPEPOINT_ANNOTATION_WIDTHREGION_COLORREGION_CREATION_MODEREGION_DASH_LENGTHREGION_LINE_WIDTHREGION_SIZEREGION_TYPERENDER_CONFIG_COLORMAPRENDER_CONFIG_NAN_ALPHARENDER_CONFIG_NAN_COLOR_HEXRENDER_CONFIG_PERCENTILERENDER_CONFIG_SCALINGRENDER_CONFIG_SCALING_ALPHARENDER_CONFIG_SCALING_GAMMARENDER_CONFIG_USE_SMOOTHED_BIAS_CONTRASTSILENT_FILE_FILTERING_TYPESILENT_FILE_SORTING_STRINGSTATS_PANEL_ENABLEDSTATS_PANEL_MODETELEMETRY_CONSENT_SHOWNTELEMETRY_LOGGINGTELEMETRY_MODETELEMETRY_UUIDTEXT_ANNOTATION_LINE_WIDTHVECTOR_OVERLAY_COLORVECTOR_OVERLAY_COLORMAPVECTOR_OVERLAY_COLORMAP_ENABLEDVECTOR_OVERLAY_FRACTIONAL_INTENSITYVECTOR_OVERLAY_PIXEL_AVERAGINGVECTOR_OVERLAY_THICKNESSWCS_OVERLAY_AST_COLORWCS_OVERLAY_AST_GRID_VISIBLEWCS_OVERLAY_AST_LABELS_VISIBLEWCS_OVERLAY_BEAM_COLORWCS_OVERLAY_BEAM_TYPEWCS_OVERLAY_BEAM_VISIBLEWCS_OVERLAY_BEAM_WIDTHWCS_OVERLAY_COLORBAR_INTERACTIVEWCS_OVERLAY_COLORBAR_LABEL_VISIBLEWCS_OVERLAY_COLORBAR_POSITIONWCS_OVERLAY_COLORBAR_TICKS_DENSITYWCS_OVERLAY_COLORBAR_VISIBLEWCS_OVERLAY_COLORBAR_WIDTHWCS_OVERLAY_CURSOR_INFOWCS_OVERLAY_WCS_TYPE Enumeration Members ANNOTATION_COLOR ANNOTATION_COLOR: annotationColor ANNOTATION_DASH_LENGTH ANNOTATION_DASH_LENGTH: annotationDashLength ANNOTATION_LINE_WIDTH ANNOTATION_LINE_WIDTH: annotationLineWidth CATALOG_DISPLAYED_COLUMN_SIZE CATALOG_DISPLAYED_COLUMN_SIZE: catalogDisplayedColumnSize CATALOG_TABLE_SEPARATOR_POSITION CATALOG_TABLE_SEPARATOR_POSITION: catalogTableSeparatorPosition CHECK_NEW_RELEASE CHECK_NEW_RELEASE: checkNewRelease COMPATIBILITY_AIPS_BEAM_SUPPORT COMPATIBILITY_AIPS_BEAM_SUPPORT: compatibilityAipsBeamSupport CONTOUR_CONFIG_COLOR CONTOUR_CONFIG_COLOR: contourColor CONTOUR_CONFIG_COLORMAP CONTOUR_CONFIG_COLORMAP: contourColormap CONTOUR_CONFIG_COLORMAP_ENABLED CONTOUR_CONFIG_COLORMAP_ENABLED: contourColormapEnabled CONTOUR_CONFIG_GENERATOR_TYPE CONTOUR_CONFIG_GENERATOR_TYPE: contourGeneratorType CONTOUR_CONFIG_NUM_LEVELS CONTOUR_CONFIG_NUM_LEVELS: contourNumLevels CONTOUR_CONFIG_SMOOTHING_FACTOR CONTOUR_CONFIG_SMOOTHING_FACTOR: contourSmoothingFactor CONTOUR_CONFIG_SMOOTHING_MODE CONTOUR_CONFIG_SMOOTHING_MODE: contourSmoothingMode CONTOUR_CONFIG_THICKNESS CONTOUR_CONFIG_THICKNESS: contourThickness GLOBAL_AUTOLAUNCH GLOBAL_AUTOLAUNCH: autoLaunch GLOBAL_AUTO_WCS_MATCHING GLOBAL_AUTO_WCS_MATCHING: autoWCSMatching GLOBAL_CODE_SNIPPETS_ENABLED GLOBAL_CODE_SNIPPETS_ENABLED: codeSnippetsEnabled GLOBAL_CURSOR_POSITION GLOBAL_CURSOR_POSITION: cursorPosition GLOBAL_DRAG_PANNING GLOBAL_DRAG_PANNING: dragPanning GLOBAL_FILE_FILTER_MODE GLOBAL_FILE_FILTER_MODE: fileFilterMode GLOBAL_KEEP_LAST_USED_FOLDER GLOBAL_KEEP_LAST_USED_FOLDER: keepLastUsedFolder GLOBAL_LAYOUT GLOBAL_LAYOUT: layout GLOBAL_SAVED_LAST_FOLDER GLOBAL_SAVED_LAST_FOLDER: lastUsedFolder GLOBAL_SPECTRAL_MATCHING_TYPE GLOBAL_SPECTRAL_MATCHING_TYPE: spectralMatchingType GLOBAL_THEME GLOBAL_THEME: theme GLOBAL_TRANSPARENT_IMAGE_BACKGROUND GLOBAL_TRANSPARENT_IMAGE_BACKGROUND: transparentImageBackground GLOBAL_ZOOM_MODE GLOBAL_ZOOM_MODE: zoomMode GLOBAL_ZOOM_POINT GLOBAL_ZOOM_POINT: zoomPoint IMAGE_MULTI_PANEL_ENABLED IMAGE_MULTI_PANEL_ENABLED: imageMultiPanelEnabled IMAGE_PANEL_COLUMNS IMAGE_PANEL_COLUMNS: imagePanelColumns IMAGE_PANEL_MODE IMAGE_PANEL_MODE: imagePanelMode IMAGE_PANEL_ROWS IMAGE_PANEL_ROWS: imagePanelRows LATEST_RELEASE LATEST_RELEASE: latestRelease LOG_EVENT LOG_EVENT: logEventList PERFORMANCE_ANIMATION_COMPRESSION_QUALITY PERFORMANCE_ANIMATION_COMPRESSION_QUALITY: animationCompressionQuality PERFORMANCE_CONTOUR_CHUNK_SIZE PERFORMANCE_CONTOUR_CHUNK_SIZE: contourChunkSize PERFORMANCE_CONTOUR_COMPRESSION_LEVEL PERFORMANCE_CONTOUR_COMPRESSION_LEVEL: contourCompressionLevel PERFORMANCE_CONTOUR_CONTROL_MAP_WIDTH PERFORMANCE_CONTOUR_CONTROL_MAP_WIDTH: contourControlMapWidth PERFORMANCE_CONTOUR_DECIMATION PERFORMANCE_CONTOUR_DECIMATION: contourDecimation PERFORMANCE_GPU_TILE_CACHE PERFORMANCE_GPU_TILE_CACHE: GPUTileCache PERFORMANCE_IMAGE_COMPRESSION_QUALITY PERFORMANCE_IMAGE_COMPRESSION_QUALITY: imageCompressionQuality PERFORMANCE_LIMIT_OVERLAY_REDRAW PERFORMANCE_LIMIT_OVERLAY_REDRAW: limitOverlayRedraw PERFORMANCE_LOW_BAND_WIDTH_MODE PERFORMANCE_LOW_BAND_WIDTH_MODE: lowBandwidthMode PERFORMANCE_PV_PREVIEW_CUBE_SIZE_LIMIT PERFORMANCE_PV_PREVIEW_CUBE_SIZE_LIMIT: pvPreviewCubeSizeLimit PERFORMANCE_PV_PREVIEW_CUBE_SIZE_LIMIT_UNIT PERFORMANCE_PV_PREVIEW_CUBE_SIZE_LIMIT_UNIT: pvPreviewCubeSizeLimitUnit PERFORMANCE_STOP_ANIMATION_PLAYBACK_MINUTES PERFORMANCE_STOP_ANIMATION_PLAYBACK_MINUTES: stopAnimationPlaybackMinutes PERFORMANCE_STREAM_CONTOURS_WHILE_ZOOMING PERFORMANCE_STREAM_CONTOURS_WHILE_ZOOMING: streamContoursWhileZooming PERFORMANCE_SYSTEM_TILE_CACHE PERFORMANCE_SYSTEM_TILE_CACHE: systemTileCache PIXEL_GRID_COLOR PIXEL_GRID_COLOR: pixelGridColor PIXEL_GRID_VISIBLE PIXEL_GRID_VISIBLE: pixelGridVisible POINT_ANNOTATION_SHAPE POINT_ANNOTATION_SHAPE: pointAnnotationShape POINT_ANNOTATION_WIDTH POINT_ANNOTATION_WIDTH: pointAnnotationWidth REGION_COLOR REGION_COLOR: regionColor REGION_CREATION_MODE REGION_CREATION_MODE: regionCreationMode REGION_DASH_LENGTH REGION_DASH_LENGTH: regionDashLength REGION_LINE_WIDTH REGION_LINE_WIDTH: regionLineWidth REGION_SIZE REGION_SIZE: regionSize REGION_TYPE REGION_TYPE: regionType RENDER_CONFIG_COLORMAP RENDER_CONFIG_COLORMAP: colormap RENDER_CONFIG_NAN_ALPHA RENDER_CONFIG_NAN_ALPHA: nanAlpha RENDER_CONFIG_NAN_COLOR_HEX RENDER_CONFIG_NAN_COLOR_HEX: nanColorHex RENDER_CONFIG_PERCENTILE RENDER_CONFIG_PERCENTILE: percentile RENDER_CONFIG_SCALING RENDER_CONFIG_SCALING: scaling RENDER_CONFIG_SCALING_ALPHA RENDER_CONFIG_SCALING_ALPHA: scalingAlpha RENDER_CONFIG_SCALING_GAMMA RENDER_CONFIG_SCALING_GAMMA: scalingGamma RENDER_CONFIG_USE_SMOOTHED_BIAS_CONTRAST RENDER_CONFIG_USE_SMOOTHED_BIAS_CONTRAST: useSmoothedBiasContrast SILENT_FILE_FILTERING_TYPE SILENT_FILE_FILTERING_TYPE: fileFilteringType SILENT_FILE_SORTING_STRING SILENT_FILE_SORTING_STRING: fileSortingString STATS_PANEL_ENABLED STATS_PANEL_ENABLED: statsPanelEnabled STATS_PANEL_MODE STATS_PANEL_MODE: statsPanelMode TELEMETRY_CONSENT_SHOWN TELEMETRY_CONSENT_SHOWN: telemetryConsentShown TELEMETRY_LOGGING TELEMETRY_LOGGING: telemetryLogging TELEMETRY_MODE TELEMETRY_MODE: telemetryMode TELEMETRY_UUID TELEMETRY_UUID: telemetryUuid TEXT_ANNOTATION_LINE_WIDTH TEXT_ANNOTATION_LINE_WIDTH: textAnnotationLineWidth VECTOR_OVERLAY_COLOR VECTOR_OVERLAY_COLOR: vectorOverlayColor VECTOR_OVERLAY_COLORMAP VECTOR_OVERLAY_COLORMAP: vectorOverlayColormap VECTOR_OVERLAY_COLORMAP_ENABLED VECTOR_OVERLAY_COLORMAP_ENABLED: vectorOverlayColormapEnabled VECTOR_OVERLAY_FRACTIONAL_INTENSITY VECTOR_OVERLAY_FRACTIONAL_INTENSITY: vectorOverlayFractionalIntensity VECTOR_OVERLAY_PIXEL_AVERAGING VECTOR_OVERLAY_PIXEL_AVERAGING: vectorOverlayPixelAveraging VECTOR_OVERLAY_THICKNESS VECTOR_OVERLAY_THICKNESS: vectorOverlayThickness WCS_OVERLAY_AST_COLOR WCS_OVERLAY_AST_COLOR: astColor WCS_OVERLAY_AST_GRID_VISIBLE WCS_OVERLAY_AST_GRID_VISIBLE: astGridVisible WCS_OVERLAY_AST_LABELS_VISIBLE WCS_OVERLAY_AST_LABELS_VISIBLE: astLabelsVisible WCS_OVERLAY_BEAM_COLOR WCS_OVERLAY_BEAM_COLOR: beamColor WCS_OVERLAY_BEAM_TYPE WCS_OVERLAY_BEAM_TYPE: beamType WCS_OVERLAY_BEAM_VISIBLE WCS_OVERLAY_BEAM_VISIBLE: beamVisible WCS_OVERLAY_BEAM_WIDTH WCS_OVERLAY_BEAM_WIDTH: beamWidth WCS_OVERLAY_COLORBAR_INTERACTIVE WCS_OVERLAY_COLORBAR_INTERACTIVE: colorbarInteractive WCS_OVERLAY_COLORBAR_LABEL_VISIBLE WCS_OVERLAY_COLORBAR_LABEL_VISIBLE: colorbarLabelVisible WCS_OVERLAY_COLORBAR_POSITION WCS_OVERLAY_COLORBAR_POSITION: colorbarPosition WCS_OVERLAY_COLORBAR_TICKS_DENSITY WCS_OVERLAY_COLORBAR_TICKS_DENSITY: colorbarTicksDensity WCS_OVERLAY_COLORBAR_VISIBLE WCS_OVERLAY_COLORBAR_VISIBLE: colorbarVisible WCS_OVERLAY_COLORBAR_WIDTH WCS_OVERLAY_COLORBAR_WIDTH: colorbarWidth WCS_OVERLAY_CURSOR_INFO WCS_OVERLAY_CURSOR_INFO: cursorInfoVisible WCS_OVERLAY_WCS_TYPE WCS_OVERLAY_WCS_TYPE: wcsType","keywords":""},{"title":"SelectionMode","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/SelectionMode","content":"SelectionMode Index Enumeration Members AllAnnotationRegion Enumeration Members All All: 0 Annotation Annotation: 1 Region Region: 2","keywords":""},{"title":"SpectralLineQueryRangeType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/SpectralLineQueryRangeType","content":"SpectralLineQueryRangeType Index Enumeration Members CenterRange Enumeration Members Center Center: Center Range Range: Range","keywords":""},{"title":"SpectralLineHeaders","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/SpectralLineHeaders","content":"SpectralLineHeaders Index Enumeration Members ChemicalNameEnergyLowerCMEnergyLowerKEnergyUpperCMEnergyUpperKIntensityAijIntensityCDMSIntensityLovasIntensitySijIntensitySijm2LineListLineSelectionMeasuredFrequencyMeasuredFrequencyErrResolvedQNRestFrequencyRestFrequencyErrShiftedFrequencySpeciesUnresolvedQN Enumeration Members ChemicalName ChemicalName: Chemical Name EnergyLowerCM EnergyLowerCM: E_L (cm^-1) EnergyLowerK EnergyLowerK: E_L (K) EnergyUpperCM EnergyUpperCM: E_U (cm^-1) EnergyUpperK EnergyUpperK: E_U (K) IntensityAij IntensityAij: Log10(Aij) IntensityCDMS IntensityCDMS: CDMS/JPL Intensity IntensityLovas IntensityLovas: Lovas/AST Intensity IntensitySij IntensitySij: Sij IntensitySijm2 IntensitySijm2: Sij μ^2 LineList LineList: Linelist LineSelection LineSelection: Line selection MeasuredFrequency MeasuredFrequency: Measured Frequency MeasuredFrequencyErr MeasuredFrequencyErr: Measured Frequency Error ResolvedQN ResolvedQN: Resolved QNs RestFrequency RestFrequency: Rest Frequency RestFrequencyErr RestFrequencyErr: Rest Frequency Error ShiftedFrequency ShiftedFrequency: Shifted Frequency Species Species: Species UnresolvedQN UnresolvedQN: Unresolved QNs","keywords":""},{"title":"SpectralLineQueryUnit","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/SpectralLineQueryUnit","content":"SpectralLineQueryUnit Index Enumeration Members CMGHzMHzMM Enumeration Members CM CM: cm GHz GHz: GHz MHz MHz: MHz MM MM: mm","keywords":""},{"title":"StokesCoordinate","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/StokesCoordinate","content":"StokesCoordinate Index Enumeration Members CircularPolarizationCurrentZLinearPolarizationQLinearPolarizationUPolarizationAnglePolarizationQUPolarizedIntensityTotalIntensity Enumeration Members CircularPolarization CircularPolarization: Vz CurrentZ CurrentZ: z LinearPolarizationQ LinearPolarizationQ: Qz LinearPolarizationU LinearPolarizationU: Uz PolarizationAngle PolarizationAngle: PAz PolarizationQU PolarizationQU: QvsU PolarizedIntensity PolarizedIntensity: PIz TotalIntensity TotalIntensity: Iz","keywords":""},{"title":"SystemType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/SystemType","content":"SystemType Index Enumeration Members AutoEclipticFK4FK5GalacticICRS Enumeration Members Auto Auto: AUTO Ecliptic Ecliptic: ECLIPTIC FK4 FK4: FK4 FK5 FK5: FK5 Galactic Galactic: GALACTIC ICRS ICRS: ICRS","keywords":""},{"title":"VectorOverlaySource","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/VectorOverlaySource","content":"VectorOverlaySource Index Enumeration Members ComputedCurrentNone Enumeration Members Computed Computed: 1 Current Current: 0 None None: -1","keywords":""},{"title":"WidgetType","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/enum/WidgetType","content":"WidgetType Index Enumeration Members AnimatorCatalogCursorInfoHistogramImageListLogPvGeneratorRegionRenderConfigSpatialProfilerSpectralLineQuerySpectralProfilerStatisticsStokesAnalysis Enumeration Members Animator Animator: Animator Widget Catalog Catalog: Catalog Widget CursorInfo CursorInfo: Cursor Info Widget Histogram Histogram: Histogram Widget ImageList ImageList: Image List Widget Log Log: Log Widget PvGenerator PvGenerator: PV Generator Region Region: Region List Widget RenderConfig RenderConfig: Render Configuration Widget SpatialProfiler SpatialProfiler: Spatial Profiler SpectralLineQuery SpectralLineQuery: Spectral Line Query Widget SpectralProfiler SpectralProfiler: Spectral Profiler Statistics Statistics: Statistics Widget StokesAnalysis StokesAnalysis: Stokes Analysis Widget","keywords":""},{"title":"CatalogPlotWidgetStoreProps","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/interface/CatalogPlotWidgetStoreProps","content":"CatalogPlotWidgetStoreProps Index Properties plotTypexColumnNameyColumnName Properties plotType plotType: CatalogPlotType xColumnName xColumnName: string optionalyColumnName yColumnName?: string","keywords":""},{"title":"DefaultWidgetConfig","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/interface/DefaultWidgetConfig","content":"DefaultWidgetConfig Implemented by WidgetConfig Index Properties componentIddefaultHeightdefaultWidthdefaultXdefaultYhelpTypeidisCloseableminHeightminWidthparentIdparentTypetitletype Properties optionalcomponentId componentId?: string defaultHeight defaultHeight: number defaultWidth defaultWidth: number optionaldefaultX defaultX?: number optionaldefaultY defaultY?: number optionalhelpType helpType?: HelpType | HelpType[] id id: string isCloseable isCloseable: boolean minHeight minHeight: number minWidth minWidth: number optionalparentId parentId?: string optionalparentType parentType?: string title title: string type type: string","keywords":""},{"title":"FrameInfo","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/interface/FrameInfo","content":"FrameInfo Index Properties beamTabledirectoryfileFeatureFlagsfileIdfileInfofileInfoExtendedhdulelExprrenderMode Properties beamTable beamTable: IBeam[] directory directory: string fileFeatureFlags fileFeatureFlags: number fileId fileId: number fileInfo fileInfo: FileInfo fileInfoExtended fileInfoExtended: FileInfoExtended hdu hdu: string lelExpr lelExpr: boolean renderMode renderMode: RenderMode","keywords":""},{"title":"ISelectedFile","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/interface/ISelectedFile","content":"ISelectedFile Index Properties fileInfohdu Properties optionalfileInfo fileInfo?: any optionalhdu hdu?: string","keywords":""},{"title":"SpectralLine","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/interface/SpectralLine","content":"SpectralLine Index Properties qnspeciesvalue Properties qn qn: string species species: string value value: number","keywords":""},{"title":"VectorOverlayTile","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-stores/interface/VectorOverlayTile","content":"VectorOverlayTile Index Properties numVerticestexture Properties numVertices numVertices: number texture texture: WebGLTexture","keywords":""},{"title":"CatalogApiProcessing","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/class/CatalogApiProcessing","content":"CatalogApiProcessing Index Constructors constructor Methods ProcessSimbadDataProcessSimbadMetaDataProcessVizierDataProcessVizierTableDatamatchDataType Constructors constructor new CatalogApiProcessing(): CatalogApiProcessing Returns CatalogApiProcessing Methods staticProcessSimbadData ProcessSimbadData(data: [], headers: ICatalogHeader[]): Map&lt;number, ProcessedColumnData&gt; Parameters data: [] headers: ICatalogHeader[] Returns Map&lt;number, ProcessedColumnData&gt; staticProcessSimbadMetaData ProcessSimbadMetaData(metaData: []): ICatalogHeader[] Parameters metaData: [] Returns ICatalogHeader[] staticProcessVizierData ProcessVizierData(data: string): Map&lt;string, VizierResource&gt; Parameters data: string Returns Map&lt;string, VizierResource&gt; staticProcessVizierTableData ProcessVizierTableData(table: Element): { dataMap: Map&lt;number, ProcessedColumnData&gt;; headers: ICatalogHeader[]; size: number } Parameters table: Element Returns { dataMap: Map&lt;number, ProcessedColumnData&gt;; headers: ICatalogHeader[]; size: number } dataMap: Map&lt;number, ProcessedColumnData&gt; headers: ICatalogHeader[] size: number staticmatchDataType matchDataType(dataType: string): ColumnType Parameters dataType: string Returns ColumnType","keywords":""},{"title":"carta-frontend/utilities","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities","content":"carta-frontend/utilities Index Classes CatalogApiProcessingProtobufProcessing Enumerations ComparisonOperator Functions GetRequiredTilesLayerToMipMipToLayerTileSortTileSortEncodedadd2Dangle2DautoDetectingaverage2DbinarySearchByXbinningbooleanFilteringceilToPowerclampcloseToclosestCatalogIndexToCursorclosestPointIndexToCursorclosestPointOnLinecopyToClipboardcopyToFP32TexturecreateFP32TexturecreateTextureFromArraycross2Ddistinctdivide2Ddot2DequalIfBothFiniteexportScreenshotexportTsvFileexportTxtFilefilterProcessedColumnDatafindDeepfloorToPowerformattedArcsecformattedExponentialformattedFrequencyformattedNotationfrequencyFromVelocityfrequencyStringFromVelocitygaussiangenColorFromIndexgetAngleInRadgetApproximateEllipsePointsgetApproximatePolygonPointsgetColorForThemegetColorsForValuesgetComparisonOperatorAndValuegetDataTypeStringgetEstimatedPointsgetFormattedWCSPointgetHeaderNumericValuegetIndexByValuegetPercentilesgetPixelSizegetPixelValueFromWCSgetReferencePixelgetShaderFromStringgetShaderProgramgetTimestampgetTransformedChannelgetTransformedChannelListgetUnixTimestampgetValueFromArcsecStringgetVariablePrecisionhanningSmoothinghistogramhistogramGaussianFitinitWebGLinitWebGL2isAstBadisAstBadPointisAutoColorisWCSStringFormatValidlength2DloadImageTexturelorentzianmagDir2DmapToObjectmidpoint2DminMax2DminMaxArrayminMaxPointArrayXminMaxPointArrayYminMaxPointArrayZmultiply2Dnormal2Dnormalisingnormalize2DnumericFilteringparseBooleanparseNumberperpVector2DpointDistancepointDistanceSquaredpolarizationAnglepolarizedIntensitypolygonPerimeterprofilePreprocessingrotate2DrotateAboutPoint2Dround2DroundToPowerscale2DscaleAboutPoint2DscaleAndRotateAboutPoint2DscaleValuescaleValueInversesimplePolygonPointTestsimplePolygonTestsmoothStepsmoothStepOffsetstringFilteringsubtract2DtoExponentialtoFixedtoFormattedNotationByDifftransformPointtrimFitsCommenttrimTrailingDecimalsvelocityFromFrequencyvelocityStringFromFrequencywavelengthToFrequency Interfaces ProcessedColumnDataProcessedContourDataProcessedContourSetProcessedSpatialProfileProcessedSpectralProfile Type Aliases ColumnArrayTypedArrayVizierResource Variables AUTO_COLOR_OPTIONSDEFAULT_COLORGL2SPEED_OF_LIGHTSWATCH_COLORSTemplateNodes Type Aliases ColumnArray ColumnArray: string[] | boolean[] | number[] TypedArray TypedArray: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array | Float32Array | Float64Array VizierResource VizierResource: { coosys: VizierCoosys; description: string; id: string; name: string; table: VizierTable } Type declaration coosys: VizierCoosys description: string id: string name: string table: VizierTable Variables constAUTO_COLOR_OPTIONS AUTO_COLOR_OPTIONS: string[] = ... constDEFAULT_COLOR DEFAULT_COLOR: any = ... constGL2 GL2: new () =&gt; WebGL2RenderingContext = WebGL2RenderingContext Type declaration new (): WebGL2RenderingContext Returns WebGL2RenderingContext constSPEED_OF_LIGHT SPEED_OF_LIGHT: 299792458 = 299792458 constSWATCH_COLORS SWATCH_COLORS: any[] = ... constTemplateNodes TemplateNodes: { WebGL2ErrorMessage: any; WebGLErrorMessage: any } = ... Type declaration WebGL2ErrorMessage: any WebGLErrorMessage: any","keywords":""},{"title":"ProtobufProcessing","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/class/ProtobufProcessing","content":"ProtobufProcessing Index Constructors constructor Methods GetProcessedDataProcessCatalogDataProcessContourDataProcessContourSetProcessSpatialProfileProcessSpectralProfile Constructors constructor new ProtobufProcessing(): ProtobufProcessing Returns ProtobufProcessing Methods staticGetProcessedData GetProcessedData(column: IColumnData): ProcessedColumnData Parameters column: IColumnData Returns ProcessedColumnData staticProcessCatalogData ProcessCatalogData(catalogData: {}): Map&lt;number, ProcessedColumnData&gt; Parameters catalogData: {} Returns Map&lt;number, ProcessedColumnData&gt; staticProcessContourData ProcessContourData(contourData: IContourImageData): ProcessedContourData Parameters contourData: IContourImageData Returns ProcessedContourData staticProcessContourSet ProcessContourSet(contourSet: IContourSet): ProcessedContourSet Parameters contourSet: IContourSet Returns ProcessedContourSet staticProcessSpatialProfile ProcessSpatialProfile(profile: ISpatialProfile): ProcessedSpatialProfile Parameters profile: ISpatialProfile Returns ProcessedSpatialProfile staticProcessSpectralProfile ProcessSpectralProfile(profile: ISpectralProfile, progress: number): ProcessedSpectralProfile Parameters profile: ISpectralProfile progress: number Returns ProcessedSpectralProfile","keywords":""},{"title":"ComparisonOperator","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/enum/ComparisonOperator","content":"ComparisonOperator Index Enumeration Members EqualGreaterGreaterOrEqualLesserLessorOrEqualNotEqualRangeClosedRangeOpen Enumeration Members Equal Equal: == Greater Greater: &gt; GreaterOrEqual GreaterOrEqual: &gt;= Lesser Lesser: &lt; LessorOrEqual LessorOrEqual: &lt;= NotEqual NotEqual: != RangeClosed RangeClosed: ... RangeOpen RangeOpen: ..","keywords":""},{"title":"add2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/add2D","content":"add2D Callable add2D(a: Point2D, b: Point2D): Point2D Parameters a: Point2D b: Point2D Returns Point2D","keywords":""},{"title":"angle2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/angle2D","content":"angle2D Callable angle2D(a: Point2D, b: Point2D): number Parameters a: Point2D b: Point2D Returns number","keywords":""},{"title":"autoDetecting","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/autoDetecting","content":"autoDetecting Callable autoDetecting(xInput: number[], yInput: number[], orderInputs?: { order: number; slope: number; yIntercept: number }): { components: ProfileFittingIndividualStore[]; order: number; slope: number; yIntercept: number } Parameters xInput: number[] yInput: number[] optionalorderInputs: { order: number; slope: number; yIntercept: number } Returns { components: ProfileFittingIndividualStore[]; order: number; slope: number; yIntercept: number } components: ProfileFittingIndividualStore[] order: number slope: number yIntercept: number","keywords":""},{"title":"average2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/average2D","content":"average2D Callable average2D(points: Point2D[]): Point2D Parameters points: Point2D[] Returns Point2D","keywords":""},{"title":"binarySearchByX","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/binarySearchByX","content":"binarySearchByX Callable binarySearchByX(sortedArray: readonly Point2D[], x: number): { index: number; point: Point2D } Parameters sortedArray: readonly Point2D[] x: number Returns { index: number; point: Point2D } index: number point: Point2D","keywords":""},{"title":"binning","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/binning","content":"binning Callable binning(data: number[], binWidth: number): number[] Parameters data: number[] binWidth: number Returns number[]","keywords":""},{"title":"booleanFiltering","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/booleanFiltering","content":"booleanFiltering Callable booleanFiltering(columnData: boolean[], dataIndexes: number[], filterString: string): number[] Parameters columnData: boolean[] dataIndexes: number[] filterString: string Returns number[]","keywords":""},{"title":"ceilToPower","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/ceilToPower","content":"ceilToPower Callable ceilToPower(val: number, power: number): number Parameters val: number power: number Returns number","keywords":""},{"title":"clamp","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/clamp","content":"clamp Callable clamp(val: number, minVal: number, maxVal: number): number Parameters val: number minVal: number maxVal: number Returns number","keywords":""},{"title":"closestCatalogIndexToCursor","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/closestCatalogIndexToCursor","content":"closestCatalogIndexToCursor Callable closestCatalogIndexToCursor(cursor: Point2D, xArray: Float32Array, yArray: Float32Array): { minDistanceSquared: number; minIndex: number } Parameters cursor: Point2D xArray: Float32Array yArray: Float32Array Returns { minDistanceSquared: number; minIndex: number } minDistanceSquared: number minIndex: number","keywords":""},{"title":"closestPointIndexToCursor","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/closestPointIndexToCursor","content":"closestPointIndexToCursor Callable closestPointIndexToCursor(cursor: Point2D, points: readonly Point2D[]): number Parameters cursor: Point2D points: readonly Point2D[] Returns number","keywords":""},{"title":"closestPointOnLine","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/closestPointOnLine","content":"closestPointOnLine Callable closestPointOnLine(p0: Point2D, p1: Point2D, p2: Point2D): { bounded: boolean; distance: number; point: Point2D } Parameters p0: Point2D p1: Point2D p2: Point2D Returns { bounded: boolean; distance: number; point: Point2D } bounded: boolean distance: number point: Point2D","keywords":""},{"title":"closeTo","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/closeTo","content":"closeTo Callable closeTo(a: number, b: number, limit?: number): boolean Parameters a: number b: number limit: number = 1.0e-6 Returns boolean","keywords":""},{"title":"copyToClipboard","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/copyToClipboard","content":"copyToClipboard Callable copyToClipboard(value: string): Promise&lt;void&gt; Parameters value: string Returns Promise&lt;void&gt;","keywords":""},{"title":"copyToFP32Texture","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/copyToFP32Texture","content":"copyToFP32Texture Callable copyToFP32Texture(gl: WebGL2RenderingContext, texture: WebGLTexture, data: Float32Array, texIndex: number, dataWidth: number, dataHeight: number, xOffset: number, yOffset: number): void Parameters gl: WebGL2RenderingContext texture: WebGLTexture data: Float32Array texIndex: number dataWidth: number dataHeight: number xOffset: number yOffset: number Returns void","keywords":""},{"title":"createFP32Texture","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/createFP32Texture","content":"createFP32Texture Callable createFP32Texture(gl: WebGL2RenderingContext, width: number, height: number, texIndex: number, filtering?: number): WebGLTexture Parameters gl: WebGL2RenderingContext width: number height: number texIndex: number filtering: number = GL2.NEAREST Returns WebGLTexture","keywords":""},{"title":"createTextureFromArray","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/createTextureFromArray","content":"createTextureFromArray Callable createTextureFromArray(gl: WebGL2RenderingContext, data: Uint8Array | Float32Array, texIndex?: number, components?: number): WebGLTexture Parameters gl: WebGL2RenderingContext data: Uint8Array | Float32Array texIndex: number = WebGL2RenderingContext.TEXTURE0 components: number = 1 Returns WebGLTexture","keywords":""},{"title":"distinct","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/distinct","content":"distinct Callable distinct(value: any, index: number, self: any[]): boolean Parameters value: any index: number self: any[] Returns boolean","keywords":""},{"title":"cross2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/cross2D","content":"cross2D Callable cross2D(a: Point2D, b: Point2D): number Parameters a: Point2D b: Point2D Returns number","keywords":""},{"title":"dot2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/dot2D","content":"dot2D Callable dot2D(a: Point2D, b: Point2D): number Parameters a: Point2D b: Point2D Returns number","keywords":""},{"title":"divide2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/divide2D","content":"divide2D Callable divide2D(a: Point2D, b: Point2D): Point2D Parameters a: Point2D b: Point2D Returns Point2D","keywords":""},{"title":"equalIfBothFinite","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/equalIfBothFinite","content":"equalIfBothFinite Callable equalIfBothFinite(a: number, b: number): boolean Parameters a: number b: number Returns boolean","keywords":""},{"title":"exportScreenshot","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/exportScreenshot","content":"exportScreenshot Callable exportScreenshot(imageOnly?: boolean, maxWidth?: number, format?: string, quality?: number): Promise&lt;string | false&gt; Parameters imageOnly: boolean = true maxWidth: number = 512 format: string = &quot;image/jpeg&quot; quality: number = 0.85 Returns Promise&lt;string | false&gt;","keywords":""},{"title":"exportTsvFile","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/exportTsvFile","content":"exportTsvFile Callable exportTsvFile(imageName: string, plotName: string, content: string): any Parameters imageName: string plotName: string content: string Returns any","keywords":""},{"title":"exportTxtFile","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/exportTxtFile","content":"exportTxtFile Callable exportTxtFile(fileName: string, content: string): any Parameters fileName: string content: string Returns any","keywords":""},{"title":"findDeep","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/findDeep","content":"findDeep Callable findDeep(obj: any, pred: (obj: any) =&gt; boolean): any Parameters obj: any pred: (obj: any) =&gt; boolean Returns any","keywords":""},{"title":"filterProcessedColumnData","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/filterProcessedColumnData","content":"filterProcessedColumnData Callable filterProcessedColumnData(columnData: ProcessedColumnData, selectedIndices: number[]): ProcessedColumnData Parameters columnData: ProcessedColumnData selectedIndices: number[] Returns ProcessedColumnData","keywords":""},{"title":"formattedArcsec","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/formattedArcsec","content":"formattedArcsec Callable formattedArcsec(arcsec: number, decimals?: number): string Parameters arcsec: number decimals: number = -1 Returns string","keywords":""},{"title":"floorToPower","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/floorToPower","content":"floorToPower Callable floorToPower(val: number, power: number): number Parameters val: number power: number Returns number","keywords":""},{"title":"formattedExponential","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/formattedExponential","content":"formattedExponential Callable formattedExponential(val: number, digits: number, unit?: string, trim?: boolean, pad?: boolean): string Parameters val: number digits: number unit: string = &quot;&quot; trim: boolean = true pad: boolean = false Returns string","keywords":""},{"title":"formattedFrequency","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/formattedFrequency","content":"formattedFrequency Callable formattedFrequency(freqGHz: number): string Parameters freqGHz: number Returns string","keywords":""},{"title":"formattedNotation","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/formattedNotation","content":"formattedNotation Callable formattedNotation(value: number): string Parameters value: number Returns string","keywords":""},{"title":"frequencyFromVelocity","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/frequencyFromVelocity","content":"frequencyFromVelocity Callable frequencyFromVelocity(velocity: number, refFreq: number): number Parameters velocity: number refFreq: number Returns number","keywords":""},{"title":"gaussian","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/gaussian","content":"gaussian Callable gaussian(x: number, amp: number, center: number, fwhm: number): number Parameters x: number amp: number center: number fwhm: number Returns number","keywords":""},{"title":"frequencyStringFromVelocity","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/frequencyStringFromVelocity","content":"frequencyStringFromVelocity Callable frequencyStringFromVelocity(velocity: number, refFreq: number): string Parameters velocity: number refFreq: number Returns string","keywords":""},{"title":"genColorFromIndex","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/genColorFromIndex","content":"genColorFromIndex Callable genColorFromIndex(index: number): any Parameters index: number Returns any","keywords":""},{"title":"getAngleInRad","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getAngleInRad","content":"getAngleInRad Callable getAngleInRad(arcsec: number): number Parameters arcsec: number Returns number","keywords":""},{"title":"getApproximateEllipsePoints","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getApproximateEllipsePoints","content":"getApproximateEllipsePoints Callable getApproximateEllipsePoints(astTransform: FrameSet, centerReferenceImage: Point2D, radA: number, radB: number, rotation: number, targetVertexCount: number): Point2D[] Parameters astTransform: FrameSet centerReferenceImage: Point2D radA: number radB: number rotation: number targetVertexCount: number Returns Point2D[]","keywords":""},{"title":"getApproximatePolygonPoints","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getApproximatePolygonPoints","content":"getApproximatePolygonPoints Callable getApproximatePolygonPoints(astTransform: FrameSet, controlPoints: Point2D[], targetVertexCount: number, closed?: boolean): Point2D[] Parameters astTransform: FrameSet controlPoints: Point2D[] targetVertexCount: number closed: boolean = true Returns Point2D[]","keywords":""},{"title":"getColorForTheme","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getColorForTheme","content":"getColorForTheme Callable getColorForTheme(color: string): any Parameters color: string Returns any","keywords":""},{"title":"getColorsForValues","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getColorsForValues","content":"getColorsForValues Callable getColorsForValues(colorMap: string): { color: Uint8ClampedArray; size: number } Parameters colorMap: string Returns { color: Uint8ClampedArray; size: number } color: Uint8ClampedArray size: number","keywords":""},{"title":"getComparisonOperatorAndValue","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getComparisonOperatorAndValue","content":"getComparisonOperatorAndValue Callable getComparisonOperatorAndValue(filterString: string): { operator: CARTA.ComparisonOperator; values: number[] } Parameters filterString: string Returns { operator: CARTA.ComparisonOperator; values: number[] } operator: CARTA.ComparisonOperator values: number[]","keywords":""},{"title":"getDataTypeString","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getDataTypeString","content":"getDataTypeString Callable getDataTypeString(dataType: ColumnType): string Parameters dataType: ColumnType Returns string","keywords":""},{"title":"getEstimatedPoints","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getEstimatedPoints","content":"getEstimatedPoints Callable getEstimatedPoints(xInput: number[], yInput: number[]): { x: number; y: number }[] Parameters xInput: number[] yInput: number[] Returns { x: number; y: number }[]","keywords":""},{"title":"getFormattedWCSPoint","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getFormattedWCSPoint","content":"getFormattedWCSPoint Callable getFormattedWCSPoint(astTransform: FrameSet, pixelCoords: Point2D): any Parameters astTransform: FrameSet pixelCoords: Point2D Returns any","keywords":""},{"title":"getIndexByValue","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getIndexByValue","content":"getIndexByValue Callable getIndexByValue(values: number[], targetValue: number): number Parameters values: number[] targetValue: number Returns number","keywords":""},{"title":"getPercentiles","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getPercentiles","content":"getPercentiles Callable getPercentiles(histogram: IHistogram, ranks: number[]): number[] Parameters histogram: IHistogram ranks: number[] Returns number[]","keywords":""},{"title":"getHeaderNumericValue","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getHeaderNumericValue","content":"getHeaderNumericValue Callable getHeaderNumericValue(headerEntry: IHeaderEntry): number Parameters headerEntry: IHeaderEntry Returns number","keywords":""},{"title":"getPixelSize","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getPixelSize","content":"getPixelSize Callable getPixelSize(frame: FrameStore, axis: number): number Parameters frame: FrameStore axis: number Returns number","keywords":""},{"title":"getPixelValueFromWCS","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getPixelValueFromWCS","content":"getPixelValueFromWCS Callable getPixelValueFromWCS(astTransform: FrameSet, formattedWCSPoint: WCSPoint2D): Point2D Parameters astTransform: FrameSet formattedWCSPoint: WCSPoint2D Returns Point2D","keywords":""},{"title":"getReferencePixel","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getReferencePixel","content":"getReferencePixel Callable getReferencePixel(frame: FrameStore): Point2D Parameters frame: FrameStore Returns Point2D","keywords":""},{"title":"GetRequiredTiles","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/GetRequiredTiles","content":"GetRequiredTiles Callable GetRequiredTiles(frameView: FrameView, imageSize: Point2D, tileSize: Point2D): TileCoordinate[] Parameters frameView: FrameView imageSize: Point2D tileSize: Point2D Returns TileCoordinate[]","keywords":""},{"title":"getShaderFromString","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getShaderFromString","content":"getShaderFromString Callable getShaderFromString(gl: WebGL2RenderingContext, shaderScript: string, type: number): WebGLShader Parameters gl: WebGL2RenderingContext shaderScript: string type: number Returns WebGLShader","keywords":""},{"title":"getShaderProgram","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getShaderProgram","content":"getShaderProgram Callable getShaderProgram(gl: WebGL2RenderingContext, vertexShaderString: string, pixelShaderString: string): WebGLProgram Parameters gl: WebGL2RenderingContext vertexShaderString: string pixelShaderString: string Returns WebGLProgram","keywords":""},{"title":"getTimestamp","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getTimestamp","content":"getTimestamp Callable getTimestamp(format?: string): any Parameters format: string = &quot;YYYY-MM-DD-HH-mm-ss&quot; Returns any","keywords":""},{"title":"getTransformedChannel","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getTransformedChannel","content":"getTransformedChannel Callable getTransformedChannel(srcTransform: FrameSet, destTransform: FrameSet, matchingType: SpectralType, srcChannel: number): any Parameters srcTransform: FrameSet destTransform: FrameSet matchingType: SpectralType srcChannel: number Returns any","keywords":""},{"title":"getTransformedChannelList","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getTransformedChannelList","content":"getTransformedChannelList Callable getTransformedChannelList(srcTransform: FrameSet, destTransform: FrameSet, matchingType: SpectralType, firstChannel: number, lastChannel: number): number[] Parameters srcTransform: FrameSet destTransform: FrameSet matchingType: SpectralType firstChannel: number lastChannel: number Returns number[]","keywords":""},{"title":"getUnixTimestamp","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getUnixTimestamp","content":"getUnixTimestamp Callable getUnixTimestamp(): number Returns number","keywords":""},{"title":"getValueFromArcsecString","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getValueFromArcsecString","content":"getValueFromArcsecString Callable getValueFromArcsecString(formattedString: string): number Parameters formattedString: string Returns number","keywords":""},{"title":"hanningSmoothing","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/hanningSmoothing","content":"hanningSmoothing Callable hanningSmoothing(data: number[]): number[] Parameters data: number[] Returns number[]","keywords":""},{"title":"getVariablePrecision","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/getVariablePrecision","content":"getVariablePrecision Callable getVariablePrecision(value: number): number Parameters value: number Returns number","keywords":""},{"title":"histogram","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/histogram","content":"histogram Callable histogram(data: number[], binN: number): { binEdges: number[]; hist: number[] } Compute the histogram of a set of data. Parameters data: number[] Input data. binN: number Defines the number of equal-width bins in the given range. Returns { binEdges: number[]; hist: number[] } The values of the histogram and the bin edges. binEdges: number[] hist: number[]","keywords":""},{"title":"histogramGaussianFit","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/histogramGaussianFit","content":"histogramGaussianFit Callable histogramGaussianFit(y: number[], bins: number): { center: any; stddev: number } Parameters y: number[] bins: number Returns { center: any; stddev: number } center: any stddev: number","keywords":""},{"title":"initWebGL","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/initWebGL","content":"initWebGL Callable initWebGL(): WebGLRenderingContext Returns WebGLRenderingContext","keywords":""},{"title":"initWebGL2","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/initWebGL2","content":"initWebGL2 Callable initWebGL2(): WebGL2RenderingContext Returns WebGL2RenderingContext","keywords":""},{"title":"isAstBadPoint","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/isAstBadPoint","content":"isAstBadPoint Callable isAstBadPoint(point: Point2D): boolean Parameters point: Point2D Returns boolean","keywords":""},{"title":"isAstBad","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/isAstBad","content":"isAstBad Callable isAstBad(value: number): boolean Parameters value: number Returns boolean","keywords":""},{"title":"isWCSStringFormatValid","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/isWCSStringFormatValid","content":"isWCSStringFormatValid Callable isWCSStringFormatValid(wcsString: string, format: NumberFormatType): boolean Parameters wcsString: string format: NumberFormatType Returns boolean","keywords":""},{"title":"isAutoColor","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/isAutoColor","content":"isAutoColor Callable isAutoColor(color: string): boolean Parameters color: string Returns boolean","keywords":""},{"title":"LayerToMip","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/LayerToMip","content":"LayerToMip Callable LayerToMip(layer: number, imageSize: Point2D, tileSize: Point2D): number Parameters layer: number imageSize: Point2D tileSize: Point2D Returns number","keywords":""},{"title":"length2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/length2D","content":"length2D Callable length2D(a: Point2D): number Parameters a: Point2D Returns number","keywords":""},{"title":"lorentzian","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/lorentzian","content":"lorentzian Callable lorentzian(x: number, amp: number, center: number, fwhm: number): number Parameters x: number amp: number center: number fwhm: number Returns number","keywords":""},{"title":"loadImageTexture","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/loadImageTexture","content":"loadImageTexture Callable loadImageTexture(gl: WebGL2RenderingContext, url: string, texIndex: number): Promise&lt;WebGLTexture&gt; Parameters gl: WebGL2RenderingContext url: string texIndex: number Returns Promise&lt;WebGLTexture&gt;","keywords":""},{"title":"magDir2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/magDir2D","content":"magDir2D Callable magDir2D(a: Point2D): { dir: { x: number; y: number }; mag: number } Parameters a: Point2D Returns { dir: { x: number; y: number }; mag: number } dir: { x: number; y: number } x: number y: number mag: number","keywords":""},{"title":"mapToObject","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/mapToObject","content":"mapToObject Callable mapToObject&lt;K, T&gt;(map: Map&lt;K, T&gt;): {} Type parameters KT Parameters map: Map&lt;K, T&gt; Returns {} [k string]: T","keywords":""},{"title":"midpoint2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/midpoint2D","content":"midpoint2D Callable midpoint2D(a: Point2D, b: Point2D): Point2D Parameters a: Point2D b: Point2D Returns Point2D","keywords":""},{"title":"minMax2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/minMax2D","content":"minMax2D Callable minMax2D(points: Point2D[]): { maxPoint: Point2D; minPoint: Point2D } Parameters points: Point2D[] Returns { maxPoint: Point2D; minPoint: Point2D } maxPoint: Point2D minPoint: Point2D","keywords":""},{"title":"minMaxArray","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/minMaxArray","content":"minMaxArray Callable minMaxArray(data: number[] | TypedArray): { maxVal: number; minVal: number } Parameters data: number[] | TypedArray Returns { maxVal: number; minVal: number } maxVal: number minVal: number","keywords":""},{"title":"minMaxPointArrayX","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/minMaxPointArrayX","content":"minMaxPointArrayX Callable minMaxPointArrayX(points: Point2D[]): { maxVal: number; minVal: number } Parameters points: Point2D[] Returns { maxVal: number; minVal: number } maxVal: number minVal: number","keywords":""},{"title":"minMaxPointArrayY","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/minMaxPointArrayY","content":"minMaxPointArrayY Callable minMaxPointArrayY(points: Point2D[]): { maxVal: number; minVal: number } Parameters points: Point2D[] Returns { maxVal: number; minVal: number } maxVal: number minVal: number","keywords":""},{"title":"minMaxPointArrayZ","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/minMaxPointArrayZ","content":"minMaxPointArrayZ Callable minMaxPointArrayZ(points: Point3D[]): { maxVal: number; minVal: number } Parameters points: Point3D[] Returns { maxVal: number; minVal: number } maxVal: number minVal: number","keywords":""},{"title":"MipToLayer","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/MipToLayer","content":"MipToLayer Callable MipToLayer(mip: number, imageSize: Point2D, tileSize: Point2D): number Parameters mip: number imageSize: Point2D tileSize: Point2D Returns number","keywords":""},{"title":"multiply2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/multiply2D","content":"multiply2D Callable multiply2D(a: Point2D, b: Point2D): Point2D Parameters a: Point2D b: Point2D Returns Point2D","keywords":""},{"title":"normal2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/normal2D","content":"normal2D Callable normal2D(a: Point2D, b: Point2D): Point2D Parameters a: Point2D b: Point2D Returns Point2D","keywords":""},{"title":"normalising","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/normalising","content":"normalising Callable normalising(a: number, b: number): number Parameters a: number b: number Returns number","keywords":""},{"title":"normalize2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/normalize2D","content":"normalize2D Callable normalize2D(a: Point2D): Point2D Parameters a: Point2D Returns Point2D","keywords":""},{"title":"numericFiltering","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/numericFiltering","content":"numericFiltering Callable numericFiltering(columnData: number[], dataIndexes: number[], filterString: string): number[] Parameters columnData: number[] dataIndexes: number[] filterString: string Returns number[]","keywords":""},{"title":"parseBoolean","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/parseBoolean","content":"parseBoolean Callable parseBoolean(value: string, defaultValue: boolean): boolean Parameters value: string defaultValue: boolean Returns boolean","keywords":""},{"title":"perpVector2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/perpVector2D","content":"perpVector2D Callable perpVector2D(dir: Point2D): Point2D Parameters dir: Point2D Returns Point2D","keywords":""},{"title":"parseNumber","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/parseNumber","content":"parseNumber Callable parseNumber(val: number, initVal: number): number Parameters val: number initVal: number Returns number","keywords":""},{"title":"pointDistance","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/pointDistance","content":"pointDistance Callable pointDistance(p1: Point2D, p2: Point2D): number Parameters p1: Point2D p2: Point2D Returns number","keywords":""},{"title":"pointDistanceSquared","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/pointDistanceSquared","content":"pointDistanceSquared Callable pointDistanceSquared(p1: Point2D, p2: Point2D): number Parameters p1: Point2D p2: Point2D Returns number","keywords":""},{"title":"polarizationAngle","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/polarizationAngle","content":"polarizationAngle Callable polarizationAngle(q: number, u: number): number Parameters q: number u: number Returns number","keywords":""},{"title":"polarizedIntensity","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/polarizedIntensity","content":"polarizedIntensity Callable polarizedIntensity(q: number, u: number): number Parameters q: number u: number Returns number","keywords":""},{"title":"polygonPerimeter","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/polygonPerimeter","content":"polygonPerimeter Callable polygonPerimeter(points: Point2D[], closed?: boolean): number Parameters points: Point2D[] closed: boolean = true Returns number","keywords":""},{"title":"profilePreprocessing","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/profilePreprocessing","content":"profilePreprocessing Callable profilePreprocessing(data: number[]): number[] Parameters data: number[] Returns number[]","keywords":""},{"title":"rotate2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/rotate2D","content":"rotate2D Callable rotate2D(point: Point2D, theta: number): { x: number; y: number } Parameters point: Point2D theta: number Returns { x: number; y: number } x: number y: number","keywords":""},{"title":"rotateAboutPoint2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/rotateAboutPoint2D","content":"rotateAboutPoint2D Callable rotateAboutPoint2D(point: Point2D, origin: Point2D, theta: number): Point2D Parameters point: Point2D origin: Point2D theta: number Returns Point2D","keywords":""},{"title":"round2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/round2D","content":"round2D Callable round2D(a: Point2D): { x: number; y: number } Parameters a: Point2D Returns { x: number; y: number } x: number y: number","keywords":""},{"title":"roundToPower","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/roundToPower","content":"roundToPower Callable roundToPower(val: number, power: number): number Parameters val: number power: number Returns number","keywords":""},{"title":"scaleAboutPoint2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/scaleAboutPoint2D","content":"scaleAboutPoint2D Callable scaleAboutPoint2D(point: Point2D, origin: Point2D, scale: number): Point2D Parameters point: Point2D origin: Point2D scale: number Returns Point2D","keywords":""},{"title":"scale2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/scale2D","content":"scale2D Callable scale2D(a: Point2D, s: number): Point2D Parameters a: Point2D s: number Returns Point2D","keywords":""},{"title":"scaleAndRotateAboutPoint2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/scaleAndRotateAboutPoint2D","content":"scaleAndRotateAboutPoint2D Callable scaleAndRotateAboutPoint2D(point: Point2D, origin: Point2D, scale: number, theta: number): Point2D Parameters point: Point2D origin: Point2D scale: number theta: number Returns Point2D","keywords":""},{"title":"scaleValue","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/scaleValue","content":"scaleValue Callable scaleValue(x: number, scaling: FrameScaling, alpha?: number, gamma?: number, bias?: number, contrast?: number, useSmoothedBiasContrast?: boolean): any Parameters x: number scaling: FrameScaling alpha: number = 1000 gamma: number = 1.5 bias: number = 0 contrast: number = 1 useSmoothedBiasContrast: boolean = true Returns any","keywords":""},{"title":"scaleValueInverse","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/scaleValueInverse","content":"scaleValueInverse Callable scaleValueInverse(x: number, scaling: FrameScaling, alpha?: number, gamma?: number, bias?: number, contrast?: number, useSmoothedBiasContrast?: boolean): any Parameters x: number scaling: FrameScaling alpha: number = 1000 gamma: number = 1.5 bias: number = 0 contrast: number = 1 useSmoothedBiasContrast: boolean = true Returns any","keywords":""},{"title":"simplePolygonPointTest","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/simplePolygonPointTest","content":"simplePolygonPointTest Callable simplePolygonPointTest(points: Point2D[], pointIndex: number): boolean Parameters points: Point2D[] pointIndex: number Returns boolean","keywords":""},{"title":"simplePolygonTest","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/simplePolygonTest","content":"simplePolygonTest Callable simplePolygonTest(points: Point2D[]): boolean Parameters points: Point2D[] Returns boolean","keywords":""},{"title":"smoothStep","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/smoothStep","content":"smoothStep Callable smoothStep(val: number, edge0: number, edge1: number): number Parameters val: number edge0: number edge1: number Returns number","keywords":""},{"title":"smoothStepOffset","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/smoothStepOffset","content":"smoothStepOffset Callable smoothStepOffset(val: number, edge0: number, edge1: number, level0: number, level1: number): number Parameters val: number edge0: number edge1: number level0: number level1: number Returns number","keywords":""},{"title":"stringFiltering","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/stringFiltering","content":"stringFiltering Callable stringFiltering(columnData: string[], dataIndexes: number[], filterString: string): number[] Parameters columnData: string[] dataIndexes: number[] filterString: string Returns number[]","keywords":""},{"title":"subtract2D","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/subtract2D","content":"subtract2D Callable subtract2D(a: Point2D, b: Point2D): Point2D Parameters a: Point2D b: Point2D Returns Point2D","keywords":""},{"title":"TileSort","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/TileSort","content":"TileSort Callable TileSort(a: TileCoordinate, b: TileCoordinate): number Parameters a: TileCoordinate b: TileCoordinate Returns number","keywords":""},{"title":"TileSortEncoded","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/TileSortEncoded","content":"TileSortEncoded Callable TileSortEncoded(a: TileCoordinate, b: TileCoordinate): number Parameters a: TileCoordinate b: TileCoordinate Returns number","keywords":""},{"title":"toExponential","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/toExponential","content":"toExponential Callable toExponential(val: number, decimals?: number): string Parameters val: number decimals: number = 0 Returns string","keywords":""},{"title":"toFormattedNotationByDiff","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/toFormattedNotationByDiff","content":"toFormattedNotationByDiff Callable toFormattedNotationByDiff(value: number, delta: number): string Parameters value: number delta: number Returns string","keywords":""},{"title":"toFixed","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/toFixed","content":"toFixed Callable toFixed(val: number, decimals?: number): string Parameters val: number decimals: number = 0 Returns string","keywords":""},{"title":"transformPoint","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/transformPoint","content":"transformPoint Callable transformPoint(astTransform: any, point: Point2D, forward?: boolean): any Parameters astTransform: any point: Point2D forward: boolean = true Returns any","keywords":""},{"title":"trimFitsComment","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/trimFitsComment","content":"trimFitsComment Callable trimFitsComment(val: string): string Parameters val: string Returns string","keywords":""},{"title":"trimTrailingDecimals","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/trimTrailingDecimals","content":"trimTrailingDecimals Callable trimTrailingDecimals(value: string): string Parameters value: string Returns string","keywords":""},{"title":"velocityFromFrequency","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/velocityFromFrequency","content":"velocityFromFrequency Callable velocityFromFrequency(freq: number, refFreq: number): number Parameters freq: number refFreq: number Returns number","keywords":""},{"title":"velocityStringFromFrequency","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/velocityStringFromFrequency","content":"velocityStringFromFrequency Callable velocityStringFromFrequency(freq: number, refFreq: number): string Parameters freq: number refFreq: number Returns string","keywords":""},{"title":"wavelengthToFrequency","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/function/wavelengthToFrequency","content":"wavelengthToFrequency Callable wavelengthToFrequency(meter: number): number Parameters meter: number Returns number","keywords":""},{"title":"ProcessedContourData","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/interface/ProcessedContourData","content":"ProcessedContourData Index Properties channelcontourSetsfileIdimageBoundsprogressstokes Properties channel channel: number contourSets contourSets: ProcessedContourSet[] fileId fileId: number optionalimageBounds imageBounds?: IImageBounds progress progress: number stokes stokes: number","keywords":""},{"title":"ProcessedColumnData","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/interface/ProcessedColumnData","content":"ProcessedColumnData Index Properties datadataType Properties data data: TypedArray | ColumnArray dataType dataType: ColumnType","keywords":""},{"title":"ProcessedSpatialProfile","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/interface/ProcessedSpatialProfile","content":"ProcessedSpatialProfile Hierarchy unknown ProcessedSpatialProfile Index Properties values Properties values values: Float32Array","keywords":""},{"title":"ProcessedContourSet","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/interface/ProcessedContourSet","content":"ProcessedContourSet Index Properties coordinatesindexOffsetslevel Properties coordinates coordinates: Float32Array indexOffsets indexOffsets: Int32Array level level: number","keywords":""},{"title":"ProcessedSpectralProfile","type":0,"sectionRef":"#","url":"/carta-frontend/api/.-utilities/interface/ProcessedSpectralProfile","content":"ProcessedSpectralProfile Hierarchy unknown ProcessedSpectralProfile Index Properties progressvalues Properties progress progress: number values values: Float32Array | Float64Array","keywords":""},{"title":"Changelog","type":0,"sectionRef":"#","url":"/carta-frontend/api/changelog","content":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog, and this project adheres to Semantic Versioning. [4.0.0]​ Added​ Added a shortcut button for image annotation (#2167).Added support for AIPS beam images (#2164).Added telemetry data for spectral profile, PV, moment, and catalog creation. (#2208).Added an increase to the default compression ratio to 32 when the header unit of the image is km/s (#1223).Added a toggle in the moment generator to match generated image(s) (#2121).Added automatically generated documentation website.Added the ability to share a workspace via URL when using the frontend via the controller. Changed​ Changed the default title string in the image viewer (#2168).Modified text annotation textbox to stay the same dimension as user zoom the image (#2162).Disabled spell check in text input (#2138).Support animation playback with matched images in multi-panel view (#1860).Modified spectral matching type selector in Image List Settings won't affect global preferences (#2098).Enabled enter key to trigger filtering in the filter fields, and modified the buttons in the spectral line query widget and catalog widget (#2046).Switched the Splatalogue URL from test to production (#2238).Changed image fitting center position error unit from arcsecond to second when the format is H:M:S; added integrated flux information in the fitting result. Fixed​ Fixed bug where line region computation width cannot be changed in spatial profile setting widget (#2000).Fixed when multiple images are open, PV generator can only produce PV preview with live update for one of the images (#2171).Fixed incorrect beam-related and frequency-related intensity unit conversions in the spectral profiler (#2033).Fixed line region anchor rotation degree when the image has non-square pixels (#1732).Fixed the blank screen when using layout with histogram widget (#2178).Fixed the problem of resuming LEL images (#1226).Fixed tsv and txt file export naming (#1987).Fixed the spectral line offset by correcting the redshift factor calculation (#1327).Fixed the alignment in workspace dialog (#2155).Fixed the spectral axis for images with headers in CDi_j format (#2144).Fixed spatial matching error in sub-milliarcsecond scale (#1734).Fixed inconsistent region coordinate format when images are spatially matched (#2189).Fixed the right ascension label in the image view (#2192).Fixed the multi-spectral-profile intensity unit conversion (#1758).Fixed the Jy/beam to K intensity unit conversion (#1907).Fixed the blinking toolbar in the image view during animating images (#2163).Fixed image arithmetic bug when there are square brackets in the expression (#2220).Fixed missing tiles and distorted tiles during and after animation. (#1988).Fixed the stuck of stokes animation at low frame rates (#1293). [4.0.0-beta.1]​ Added​ Added two entries in Service sub-menu to copy the session ID and the session URL to clipboard (#1930).Added a button for NaN pixel color selection in render config widget (#1946).Added a setting dialog for the angular distance measurement (#1201).Added the functionality to show/hide and lock all regions (#1796).Added a method to auto-scrolling the selected region into the region list view (#1797).Added the functionality to mirror cursor position on spatially matched frame via hotkey &quot;G&quot; (#1947).Added support for fitting images with regions, fixed parameters, a background offset, and different solvers; added support for setting initial values in world coordinates; added support for generating model and residual images, exporting fitting result and full log, and creating regions from the results; added support for estimating progress and cancelling tasks (#1397).Added tooltip to the Image column for the image list and cursor info widget (#1948).Added additional cursor info option to spectral profile widget (#1837).Added a selection option in the PV generator widget to swap x and y axis, an input for spectral axis limit, and a toggle button to let users decide whether or not to keep the previously generated PV images (#1950, #1951, #1952).Added a toggle button to let users decide whether or not to keep the previously generated moment images (#2054).Added settings in the image view settings widget for panning and zooming the images (#1176).Added layout renaming dialog (#458).Added supports for swapped-axes image cubes (#1953).Added supports for image annotations (#267).Added the ability of changing to a new directory by entering a path (#609).Added supports for customizing histogram calculations (#1488).Added pv image preview feature (#1561).Added support for saving and restoring workspaces (#1272). Initial support is limited to restoring open images, render/contour/overlay configs and regions. Fixed​ Fixed the issue of annoying text input fields (#1906).Fixed the issues of copying the Session URL in the macOS Electron and Linux AppImage versions (#2102, #2108).Fixed the issue of contour levels not deleted as intended (#2091).Fixed issue of only enabling catalog selection button when there is a layer of catalog overlay (#1826).Fixed the issue of the corrupted spatial profile when cursor is moving (#1602).Fixed NaN pixel value in the cursor info bar of the image viewer when the image is 1x1 pixel (#1879).Fixed issue to show cursor info of smoothed profiles in the spatial and spectral profilers (#1880, #1938).Fixed mean and RMS not updating when smoothing in the spatial and spectral profilers (#1838).Fixed limitations of the point size for catalog overlay rendering (#1662 and #1802).Fixed the issue of updating image view mode when catalog selection button is disabled (#1967).Fixed the issue of stuck image viewer after changing single/multi panel mode after catalog selection (#1989).Fixed empty tsv file export for xy profiler (#2021).Fixed missing catalog overlay for single source catalog files (#2034).Fixed the region position offset mismatch problem after zooming to fit for spatially matched images. (#2028).Improved the performance of loading regions in batches (#2040).Fixed offset between cusorInfo and upper wcs axis in the spatial profilers (#1319).Fixed mismatch between cursor and image during PV image panning (#1790).Fixed the hanging problem for computed stokes animation (#1238).Fixed the AST grid rendering issues in different reference systems due to missing explicit equinox in the setup (#2106).Fixed crash when sending spectral line queries without network connection (#2119). Changed​ Re-arranged the order of File menu (#2092).Increased the upper limit of averaging width for line/polyline spatial profiles or PV images calculations (#1949).Set white color or black color, based on the theme, as the background for the image view PNG export (#2029).Spectral line queries are migrated to Splatalogue advanced backend queries due to the upcoming deprecation of the current Splatalogue frontend queries (#2114). [3.0.1]​ Fixed​ Fixed issue with dashboard address (#1991). [3.0.0]​ Added​ Added support for image fitting with field of view (#1397).Size conversion in the image fitting results (#1397).Show a notification when there is a new CARTA release (#1852).Added links to the CARTA Dashboard to the splashscreen and alert dialog where appropriate (#1874). Changed​ Splatalogue queries are now made directly with the server, rather than proxied through the backend (#1755). Fixed​ Added missing vector overlay and image fitting options in the View menu (#1848).Hide code snippet option in the View menu when code snippet is disabled in the preferences (#1856).Fixed the rotation anchor offset of line regions (#1739).Fixed issue with exporting decimated data instead of full resolution data in spatial profiler (#1546).Fixed larger position errors of projected contours, catalog overlays, and vector overlays near the border (#1843).Fixed no updating of spatial profile after region deleting (#1831, #1855).Fixed unable to switch channel by clicking scatter plot in stokes analysis widgets (#1313).Fixed issues of crowded Frame idices in the animator and misalignment of channel slider indices (#940, #1892).Fixed gaps in projected unclosed regions (#1740).Fixed projection of polygon regions created on spatially matched images (#1887).Fixed incorrect channels of matched images requested for animation (#569).Fixed issue of showing last index of animator sliders ([#1893] (https://github.com/CARTAvis/carta-frontend/issues/1893)).Fixed tooltip blocking issue of the toolbar in the image viewer (#1897).Fixed persisent tooltip after exporting a png image (#1742).Fixed high CPU/GPU usage when CARTA is idle or attempting to reconnect to server (#153 and #1808).Fixed incorrect region positions when importing regions on a spatially matched image (#1899).Fixed issue in the spatial profile setting where the &quot;Show WCS Axis&quot; should be disabled for steps and lines plot styles (#1905).Fixed issue when the active frame changes while the region is being imported.Fixed the imprecised catalog plot axis. (#1884).Fixed the displayed values in the cursor info of the histogram widget by adopting binary-searched data x and y values (#1917).Fixed missing regions when the image is matched or unmatched to the reference (#1780).Fixed inconsistent vector line width on spatially matched images (#1854).Fixed QU profile rendering black at the first channel in the stokes widget (#1786). [3.0.0-beta.3]​ Added​ Added cursor information to the histogram widget (#1762).The ability to load files with LEL (lattice expression language) expressions (#1264).The ability to set a custom rest frequency for saving subimages (#1653).The ability to load complex images with a dropdown menu in the file browser dialog (#1492).Added image fitting widget for multiple 2D Gaussian component fitting (#1397).Added computed polarizations (Polarized intensity, Polarized angle ...) in polarization selectors (#714).Vector field rendering is supported in the image view widget. Data configuration and stlying can be set in the vector overlay dialog (#1155). Changed​ Optimization to the region list widget with a large number of regions (#1252).Optimization to loading images with a million channels (#1774).Limited the filename length of downloaded png files to around 200 characters (#1501).Enabled text selection for region info and catalog info when loading/saving regions and loading catalogs (#1795). Fixed​ Corrected hard reload shortcut suggestions for macOS (#1623).Fixed region re-rendering with click to pan method (#1751).Fixed the initial spectral range of the moment generator (#1749).Fixed crash when loading file with fewer axes than CDELT entries (#1769).Fixed crash with empty line plots (#1772).Fixed issue with PV image rendering (#1708).Tab title of image viewer is reset when all images are closed (#1686).Fixed issue with multiple-panel switch of the image viewer (#1676).Fixed issue with the reset button in the spectral line query widget (#1741).Fixed issue with catalog SIMBAD query after cancelling (#1750).Fixed extra catalog overlay sources at the origin (#1823). [3.0.0-beta.2]​ Added​ Added optional usage collection / telemetry (#637).Added ability to list files filtered by extension (rather than content) or list all files (#1).Added two spectral matching types &quot;Vacuum wavelength&quot; and &quot;Air wavelength.&quot;Circular/linear polarizations are supported in polarization dropdowns for saving subimages and generating hypercubes.The ability to export high resolution png images for publication quality in journals.The ability to use a custom rest frequency for spectral matching, spectral axis display, and PV image x/y axis display.Added new feature: ability to generate a position-velocity (PV) image from a line region on images with a supported coordinate system. The generated images are loaded as separate images, similar to generated moment maps. Changed​ Applied a new approach to calculate the sizes and lengths of a region (#1572). Fixed​ Fixed crash when opening the image view configuration dialog before opening an image (#1705).Fixed panning and zooming when opening a new image in distance measuring mode (#1665).Fixed incorrect color gradient of the colorbar (#1717 and #1718). [3.0.0-beta.1b]​ Fixed​ Fixed crash caused by missing region length calculation. [3.0.0-beta.1]​ Added​ The image view toolbar can be minimized to prevent it from hiding the image view.The last used directory can now be preserved across CARTA sessions.The ability to view multiple images at once in a multi-panel view has been added.Boolean columns are now supported in FITS and VOTable catalogs.Line and poly-line regions can be created. They currently do not have any associated analytic features, but will be used for upcoming PV image features.Additional preferences added: smooth updates of the overlay and adjusting the visibility of the cursor overlay.The image, region and Stokes value can now be changed on the spatial profiler.Multiple images can now be loaded via query parameters, using ?files=[a,b,c].The Stokes value can be changed on statistics and histogram widgets.A cursor widget has been added, which displays the cursor position and value for all open images.An experimental JavaScript-based code snippets feature has been added, for scripting CARTA from the frontend. Snippets can be saved, edited and re-executed. The feature can be enabled in the preferences dialog.Added a customizable colorbar to the image view widget, with an interactive mode that highlights pixels above a threshold.A pixel grid is now displayed at high zoom levels. This can be disabled in the image view settings. Changed​ The image overlay title can now be customised on a per-image basis.The polarization string (e.g. &quot;Stokes I&quot;) is shown instead of the index (e.g. 0).The spectral line query widget now checks the Splatalogue server before displaying.Optimizations to catalog rendering with a large number of data points.Directories displayed in the file browser now have item count and modified date entries. Fixed​ Fixed issue with spectral-matched images not being refreshed (#1571).Fixed issue with image tiles smaller than 4x4 pixels (#1365 and #1485).Fixed crash when region list is initially too small (#1598).Fixed region offset errors when matching and unmatching images (#1293).Fixes progress indicator when displaying multiple spectral profiles (#1429)Fixed minor input issues with the catalog widget (#1505 and #1544).Fixed minor rendering issues on image edges (#666).Fixed anchor rendering issue with rotated regions (#1208).","keywords":""},{"title":"Basics","type":0,"sectionRef":"#","url":"/carta-frontend/docs/code-snippet-tutorial/basics","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Basics","url":"/carta-frontend/docs/code-snippet-tutorial/basics#functions","content":"Functions can be defined in a number of ways. function squared(x) { return x * x; } // This is an arrow function const cubed = x =&gt; x * x * x; // This is an arrow function with a block of codes const sqrt = x =&gt; { // You can use builtin JS library functions return Math.sqrt(x); };  Functions can also be asynchronous. Any functions that wait for user input or interact with the backend will be asynchronous. function delay(time) { return new Promise((resolve, reject) =&gt; { if (time &lt; 0) { reject(&quot;Invalid delay duration&quot;); } else { setTimeout(resolve, time); } }); }  You can await asynchronous functions within another async function, or at the top level. async function pauseForOneSecond() { await delay(1000); return true; }  Awaiting is necessary to ensure that return values can be used correctly. Compare the following outputs: console.log(&quot;Awaiting properly:&quot;); const resultWithAwait = await pauseForOneSecond(); console.log(resultWithAwait); console.log(); console.log(&quot;No await:&quot;); const resultWithoutAwait = pauseForOneSecond(); console.log(resultWithoutAwait); console.log();  Asynchronous functions can also be used with promise syntax. delay(100).then(() =&gt; console.log(&quot;Looks promising&quot;)); delay(-100).catch(err =&gt; console.log(err));  Note that the response to the first &quot;delay&quot; call is printed after the second one, because execution is non-blocking. For more usages of ES6-based JavaScript, please refer to the features of the language. "},{"title":"Image fitting","type":0,"sectionRef":"#","url":"/carta-frontend/docs/code-snippet-tutorial/image-fitting","content":"Image fitting The process of fitting images with multiple Gaussians can be done using code snippets. The configuration for the fitting is accessible via ImageFittingStore. Example code: // Open an image const file = await app.openFile(&quot;[filename]&quot;); // Display the fitting widget app.dialogStore.showFittingDialog(); // Clear previous inputs of initial values app.imageFittingStore.clearComponents(); // Set initial values app.imageFittingStore.setComponents(2); const component1 = app.imageFittingStore.components[0]; component1.setCenterX(128); component1.setCenterY(129); component1.setAmplitude(0.01); component1.setFwhmX(10); component1.setFwhmY(6); component1.setPa(36); const component2 = app.imageFittingStore.components[1]; component2.setCenterX(135); component2.setCenterY(135); component2.setAmplitude(0.01); component2.setFwhmX(4); component2.setFwhmY(9); component2.setPa(40); // Fit the image app.imageFittingStore.fitImage(); ","keywords":""},{"title":"Image properties","type":0,"sectionRef":"#","url":"/carta-frontend/docs/code-snippet-tutorial/image-properties","content":"","keywords":""},{"title":"Changing field of view​","type":1,"pageTitle":"Image properties","url":"/carta-frontend/docs/code-snippet-tutorial/image-properties#changing-field-of-view","content":"The field of view can be adjusted using various functions within FrameStore. setCenter and setCenterWcs set the center of the image. // image coordinate file.setCenter([x position], [y position]); // world coordinate file.setCenterWcs(&quot;[x position, ex: 0:00:00.0615838925]&quot;, &quot;[y position, ex: 29:59:59.1999990820]&quot;);  fitZoom zooms the image to fit the widget size. file.fitZoom();  zoomToSize... functions zoom the image to a specific scale. // image coordinate file.zoomToSizeX([size in x direction]); file.zoomToSizeY([size in y direction]); // world coordinate file.zoomToSizeXWcs('[size in x direction, ex: 2.56&quot;]'); file.zoomToSizeYWcs('[size in y direction, ex: 2.56&quot;]');  "},{"title":"Changing the channel and Stokes​","type":1,"pageTitle":"Image properties","url":"/carta-frontend/docs/code-snippet-tutorial/image-properties#changing-the-channel-and-stokes","content":"setChannel changes the channel of the image. file.setChannel([channel]);  setStokes and setStokesByIndex change the stokes of the image using POLARIZATIONS enum or the index. file.setStokes(2); // Stokes Q file.setStokesByIndex(2); // The third polarization shown in the animator widget  "},{"title":"Changing render configuration​","type":1,"pageTitle":"Image properties","url":"/carta-frontend/docs/code-snippet-tutorial/image-properties#changing-render-configuration","content":"Render configuration can be modified using renderConfig within FrameStore. setCustomScale and setPercentileRank change the rendering range. file.renderConfig.setCustomScale([clip min], [clip max]); file.renderConfig.setPercentileRank(90); // Change to 90%  setScaling changes the scaling functions using FrameScaling enum. file.renderConfig.setScaling(1); // Log  setColorMap changes the color map using options in COLOR_MAPS_ALL list, and setInverted inverts the color map. file.renderConfig.setColorMap(&quot;gray&quot;); file.renderConfig.setInverted(true);  "},{"title":"Moment images","type":0,"sectionRef":"#","url":"/carta-frontend/docs/code-snippet-tutorial/moment-images","content":"Moment images The process of generating moment images can be done using code snippets. The configuration for the generator is accessible via SpectralProfileWidgetStore. Available moment types (as enum) can be found here. Example code: // Open an image const file = await app.openFile(&quot;[filename]&quot;); // Create a spectral profile settings widget app.widgetsStore.createFloatingSpectralProfilerWidget(); app.widgetsStore.createFloatingSettingsWidget(&quot;&quot;, &quot;spectral-profiler-0&quot;, &quot;spectral-profiler&quot;); // Get the SpectralProfileWidgetStore object const spectralProfileWidget = app.widgetsStore.spectralProfileWidgets.get(&quot;spectral-profiler-0&quot;); // Navigate to the moments tab spectralProfileWidget.setSettingsTabId(3); // Modify the configuration using SpectralProfileWidgetStore spectralProfileWidget.clearSelectedMoments(); // remove default: integrated value of the spectrum spectralProfileWidget.selectMoment(0); // mean value of the spectrum // Generate a moment image spectralProfileWidget.requestMoment(); ","keywords":""},{"title":"PV images","type":0,"sectionRef":"#","url":"/carta-frontend/docs/code-snippet-tutorial/pv-images","content":"PV images The process of generating PV images can be done using code snippets. The configuration for the generator is accessible via PvGeneratorWidgetStore. Example code: // Open an image const file = await app.openFile(&quot;[filename]&quot;); // Create a line region const region = await file.regionSet.addRegionAsync(1, [{x: [start x], y: [start y]}, {x: [end x], y: [end y]}]); // Create a pv generator widget app.widgetsStore.createFloatingPvGeneratorWidget(); // Get the PvGeneratorWidgetStore object const pvGeneratorWidget = app.widgetsStore.pvGeneratorWidgets.get(&quot;pv-generator-0&quot;); // Generate a pv image pvGeneratorWidget.setFileId(file.frameInfo.fileId); pvGeneratorWidget.setRegionId(file.frameInfo.fileId, region.regionId); pvGeneratorWidget.requestPV(); ","keywords":""},{"title":"Quick start","type":0,"sectionRef":"#","url":"/carta-frontend/docs/code-snippet-tutorial/quick-start","content":"","keywords":""},{"title":"Enabling code snippets​","type":1,"pageTitle":"Quick start","url":"/carta-frontend/docs/code-snippet-tutorial/quick-start#enabling-code-snippets","content":"The code snippet feature can be enabled via the preferences dialog:  Once the code snippet feature is enabled, the &quot;Snippets&quot; option appears in the menu. This allows you to create and run code snippets, providing additional functionality to CARTA. "},{"title":"Loading images​","type":1,"pageTitle":"Quick start","url":"/carta-frontend/docs/code-snippet-tutorial/quick-start#loading-images","content":"CARTA functions and objects can be accessed via the top-level app object (or the carta alias). In the following example, we display the welcome splash screen for 1000 ms and then close it. carta.showSplashScreen(); await carta.delay(1000); app.hideSplashScreen();  Images loaded in the frontend are referred as and registered in the frames array which contains each frame (i.e., image) as a FrameStore object. The currently active frame is accessible with activeFrame. In the following example, we firstly list the frames array, then list the 0th frame, and finally list the current active frame in the console. console.log(app.frames); console.log(app.frames[0]); console.log(app.activeFrame);  openFile takes up to three arguments: directory, filename and HDU. If no HDU is provided, the first HDU (&quot;0&quot;) is adopted. The directory and filename can also be combined into a single argument. openFile must be called with await, as it is an asynchronous function that requires communicating with the backend. In the following example, in the end we will see that only the last image is loaded as each openFile will close all loaded image first before loading the target image. await app.openFile(&quot;test_directory&quot;, &quot;testfile.fits&quot;, &quot;0&quot;); await app.openFile(&quot;test_directory&quot;, &quot;testfile.fits&quot;); await app.openFile(&quot;test_directory/testfile.fits&quot;);  Additional images can be appended using appendFile. The arguments are the same as openFile. In the following example, in the end there will be three images loaded. const file1 = await app.openFile(&quot;testfile1.fits&quot;); const file2 = await app.appendFile(&quot;testfile2.fits&quot;); const file3 = await app.appendFile(&quot;testfile3.fits&quot;);  The active image can be changed with setActiveFrame, as well as the wrapper functions setActiveFrameById and setActiveFrameByIndex. app.setActiveFrameByIndex(0); app.setActiveFrameById(file2.frameInfo.fileId); app.setActiveFrame(file3);  "},{"title":"Closing images​","type":1,"pageTitle":"Quick start","url":"/carta-frontend/docs/code-snippet-tutorial/quick-start#closing-images","content":"closeCurrentFile closes the active image. There will be no user confirmation if the active image serves as the spatial reference image and there are other images matched to it. app.closeCurrentFile();  closeFile takes an optional boolean argument to control whether user confirmation is required if other images are matched to the given file. This defaults to true. await is required to delay execution until the user confirms. await app.closeFile(file1); app.closeFile(file1, false); // No user confirmation  closeOtherFiles closes all images other than the given file. app.closeOtherFiles(file2);  For all functions and objects availble in the app object, please refer to the API documentation. "},{"title":"Regions","type":0,"sectionRef":"#","url":"/carta-frontend/docs/code-snippet-tutorial/regions","content":"","keywords":""},{"title":"Creating regions​","type":1,"pageTitle":"Regions","url":"/carta-frontend/docs/code-snippet-tutorial/regions#creating-regions","content":"Regions on a specific image is accessible via RegionSetStore under each image. Each region is represented by a RegionStore object. console.log(file.regionSet.regions); // View all regions console.log(file.regionSet.selectedRegion); // View the selected region  addRegionAsync creates regions on the loaded image with available region types. const regionSet = file.regionSet; const region = await regionSet.addRegionAsync(3, [{x: [center x], y: [center y]}, {x: [width], y: [height]}]); // Add a rectangle region const region2 = await regionSet.addRegionAsync(1, [{x: [start x], y: [start y]}, {x: [end x], y: [end y]}]); // Add a line region  "},{"title":"Changing region properties​","type":1,"pageTitle":"Regions","url":"/carta-frontend/docs/code-snippet-tutorial/regions#changing-region-properties","content":"Properties of a region can be modified using the RegionStore object. // ex: a rectangle region region.setCenter({x: 0, y: 0}); // Move the region to position (0, 0) region.setSize({x: 100, y: 100}); // Resize to 100 x 100 pixels region.setColor(&quot;#ffffff&quot;); // Change the color to white  "},{"title":"Importing regions​","type":1,"pageTitle":"Regions","url":"/carta-frontend/docs/code-snippet-tutorial/regions#importing-regions","content":"importRegion imports regions to the active image with the provided path, filename, and file type enum. await app.importRegion(&quot;[path]&quot;, &quot;[filename]&quot;, 1); // File type: CRTF  "},{"title":"Developer tips","type":0,"sectionRef":"#","url":"/carta-frontend/docs/contributing/developer-tips","content":"","keywords":""},{"title":"Checking and fixing code format​","type":1,"pageTitle":"Developer tips","url":"/carta-frontend/docs/contributing/developer-tips#checking-and-fixing-code-format","content":"To check the code format: npm run checkformat  To automatically fix the code format: npm run reformat  "},{"title":"Code linting​","type":1,"pageTitle":"Developer tips","url":"/carta-frontend/docs/contributing/developer-tips#code-linting","content":"ESLint is applied to identify program errors and to check for the format of imported packages and TSDoc documentation. To run the lint checks: npm run check-eslint  To automatically fix the identified errors, particularly those related to import package formats: npm run fix-eslint  "},{"title":"Documentation guidelines","type":0,"sectionRef":"#","url":"/carta-frontend/docs/contributing/documentation-guidelines","content":"","keywords":""},{"title":"Building documentaiton​","type":1,"pageTitle":"Documentation guidelines","url":"/carta-frontend/docs/contributing/documentation-guidelines#building-documentaiton","content":"The website is hosted on Github Pages, and whenever the dev branch is updated, the website is automatically updated using Github Actions. To build and test the website locally, navigate to the docs_website/ directory and install package dependencies: cd docs_website npm install  and run the development server: npm start  If you make changes to the files in the docs/ and api/ folders, the site will automatically reload and display the changes. To create a local production build: npm run build  To test the local production build: npm run serve  Please note that the search feature is only available in production builds. "},{"title":"Writing documentation pages​","type":1,"pageTitle":"Documentation guidelines","url":"/carta-frontend/docs/contributing/documentation-guidelines#writing-documentation-pages","content":"The &quot;Docs&quot; pages and the &quot;API/Overview&quot; page are generated from markdown files in the docs/ and api/ directories. Simply edit these directories to modify the content or add new pages. To check the format of the changes, run (from the docs_website/ folder): npm run checkformat  To automatically fix the format: npm run reformat  This maintains consistent markdown styling, including indentation, maximum line length, and list numbering. Please refer to the Prettier documentation for more information. "},{"title":"Writing API documentation​","type":1,"pageTitle":"Documentation guidelines","url":"/carta-frontend/docs/contributing/documentation-guidelines#writing-api-documentation","content":"The &quot;API&quot; subpages are generated from TSDoc documentation in the codebase. Catalogs are created based on the index.ts files, and elements need to be exported in the respective index.ts file to appear on the catalog subpages. Private and projected elements are not displayed. For TSDoc format, please refer to the TSDoc documentation. ESLint is applied to check for the required format. To run the lint checks (from the repository root): npm run check-eslint  Please note that the development server does not automatically re-parse TSDoc. Therefore, if you modify TSDoc in the codebase, you will need to rebuild it to display the changes. "},{"title":"Github workflow","type":0,"sectionRef":"#","url":"/carta-frontend/docs/contributing/github-workflow","content":"","keywords":""},{"title":"Creating new issues​","type":1,"pageTitle":"Github workflow","url":"/carta-frontend/docs/contributing/github-workflow#creating-new-issues","content":"When creating new issues, please refer to this page for the available labels that can be added. If the issue is related to bug fixing, please use the bug report template. Please make sure to fill in the template with all the necessary information, including the description, reproduction steps, and platform information. Providing reproduction steps is particularly helpful for resloving issues. Additionally, including testing images can be helpful for reproducing the issue. "},{"title":"Contributing to the codebase​","type":1,"pageTitle":"Github workflow","url":"/carta-frontend/docs/contributing/github-workflow#contributing-to-the-codebase","content":""},{"title":"Cloning and building the codebase​","type":1,"pageTitle":"Github workflow","url":"/carta-frontend/docs/contributing/github-workflow#cloning-and-building-the-codebase","content":"To clone the codebase to your computer: git clone git@github.com:CARTAvis/carta-frontend.git  For detailed instructions on building the codebase from source, please refer to the README file. "},{"title":"Creating a branch​","type":1,"pageTitle":"Github workflow","url":"/carta-frontend/docs/contributing/github-workflow#creating-a-branch","content":"Before making any changes to the codebase, create and check out to a new branch. It's recommended to use the following format for branch names: git checkout -b &quot;[author]/[issue id]_[description_with_underscores]&quot;  If the issue doesn't exist yet, please create a new issue. When you start working on the issue, update the ZenHub status of the issue to &quot;In Progress&quot;. "},{"title":"Pushing changes​","type":1,"pageTitle":"Github workflow","url":"/carta-frontend/docs/contributing/github-workflow#pushing-changes","content":"To stage and commit your changes: git add . git commit -m &quot;a short description of the change&quot;  To push the branch to the remote repository: git push  "},{"title":"Making a pull request​","type":1,"pageTitle":"Github workflow","url":"/carta-frontend/docs/contributing/github-workflow#making-a-pull-request","content":"Pull request template​ When making a pull request from you branch, please use the pull request template. In the description section, please provide details about your changes, including linked issues and companion PRs (if there are), what is implemented or fixed, and how to test it. Each check item in the checklist section is explained below: For linked issues (if there are): assignee and label added: Assign yourself to the issue you are working on. Add labels to the issue. ZenHub issue connection, board status, and estimate updated: Connect the issue to the pull request in ZenHub. ZenHub automatically updates the issue status from &quot;In Progress&quot; to &quot;Review/QA&quot; by default. Also, provide an estimate for the time required to complete the issue. This estimation is useful for future development planning. For the pull request: reviewers and assignee added: Assign reviewers and an assignee to the pull request. The assignee will be responsible for merging the pull request. ZenHub estimate, milestone, and release (if needed) added: Provide an estimate for the time required to review the pull request. e2e test passing / corresponding fix added: Check if the end-to-end tests are passing. This will be checked during the review. changelog updated / no changelog update needed: Updating the changelog is required when the issue exists in the latest release and the changes have an impact on users. It can be updated when the pull request is ready for merge to prevent frequent merge conflicts. protobuf updated to the latest dev commit / no protobuf update needed: Updating the protobuf is required when there are changes in the carta-protobuf submodule. This can be done when the pull request is ready for merge. BackendService unchanged / BackendService changed and corresponding ICD test fix added: Updating ICD tests is required when there are changes in BackendService. CI checks​ Please ensure that the CI passes successfully when making the pull request. The CI checks various items: Codebase formatting: Check here for automatic codebase formatting.Production builds with different Node versions: The build will not be successful if the lint check fails. Check here for details.Documentation page formatting: Check here for automatic formatting.Production build of the documentation website: Details of building the website locally can be found here. "},{"title":"Merging a pull request​","type":1,"pageTitle":"Github workflow","url":"/carta-frontend/docs/contributing/github-workflow#merging-a-pull-request","content":"The assignee of the pull request is responsible for merging the pull request. When merging the pull request, ensure the following: Sufficient reviewers have approved the pull request.All items in the checklist are completed.All CI checks have passed successfully. After merging the pull request, make sure to close the linked issue if necessary. GitHub automatically closes issues when they are linked properly. Remember to delete the branch after the merge. Merging a pull request with protobuf changes required​ If the pull request requires changes in the carta-protobuf submodule and is ready for merge, follow these steps: Merge the carta-protobuf branch in the repository. Check out the frontend branch: git checkout &quot;[the frontend branch]&quot; Check out the dev branch of the protobuf submodule and pull the latest version: cd protobuf git checkout dev git pull cd .. Commit and push the changes: git merge -a -m &quot;update protobuf&quot; git push Finally, you can check the item &quot;protobuf updated to the latest dev commit&quot; in the check list. The pull request is ready for merge if all the other checklist items are completed and the CI checks have passed. For the carta-backend repository, follow similar steps for the corresponding backend branch as in steps 2 to 5. Merge the frontend and backend pull requests simultaneously. "},{"title":"Documents","type":0,"sectionRef":"#","url":"/carta-frontend/docs/documents","content":"","keywords":""},{"title":"Table of Contents​","type":1,"pageTitle":"Documents","url":"/carta-frontend/docs/documents#table-of-contents","content":"Code snippet tutorial Contributing "},{"title":"Unit test guidelines","type":0,"sectionRef":"#","url":"/carta-frontend/docs/contributing/unit-test-guidelines","content":"","keywords":""},{"title":"Running unit tests​","type":1,"pageTitle":"Unit test guidelines","url":"/carta-frontend/docs/contributing/unit-test-guidelines#running-unit-tests","content":"Install package dependencies: npm install Build carta-protobuf and WebAssembly libraries: npm run build-protobuf npm run build-libs npm run build-wrappers Run unit tests: npm test By default, Jest runs tests related to changed files. To display individual test results, use the --verbose flag: npm test --verbose For more options available in Jest, please refer to the Jest documentation. "},{"title":"Writing unit tests​","type":1,"pageTitle":"Unit test guidelines","url":"/carta-frontend/docs/contributing/unit-test-guidelines#writing-unit-tests","content":""},{"title":"Structures​","type":1,"pageTitle":"Unit test guidelines","url":"/carta-frontend/docs/contributing/unit-test-guidelines#structures","content":"Directory structure: colocate the test file in the same directory and name with .test.ts/tsx suffix. For example, . └── src └── components └── AComponent ├── AComponent.tsx ├── AComponent.scss └── AComponent.test.tsx └── utilities └── math ├── math.ts └── math.test.ts Test code structure: use describe to structure the tests. For example, describe(&quot;[unit]&quot;, () =&gt; { test(&quot;[expected behavior]&quot;, () =&gt; {}); describe(&quot;[sub unit]&quot;, () =&gt; { test(&quot;[expected behavior]&quot;, () =&gt; {}); } } Make sure to implement low-level tests that focus on a certain class or function. Mock imported classes and functions with Jest when necessary. TypeScript enum: import TypeScript enum without index files to avoid compile failure. "},{"title":"Testing React components​","type":1,"pageTitle":"Unit test guidelines","url":"/carta-frontend/docs/contributing/unit-test-guidelines#testing-react-components","content":"Avoid mocking blueprint.js objects to prevent having complex setups.Avoid testing snapshots to prevent having large files in the codebase.Follow the order of priority suggested by React Testing Library when querying elements. "}]
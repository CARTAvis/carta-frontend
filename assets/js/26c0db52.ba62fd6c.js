"use strict";(self.webpackChunkcarta_frontend_docs=self.webpackChunkcarta_frontend_docs||[]).push([[8538],{5207:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>g,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var t=i(5893),o=i(1151);i(9960);const r={sidebar_position:4},s="Regions",a={id:"code-snippet-tutorial/regions",title:"Regions",description:"Actions related to regions. In the following examples, we assume that an image is loaded as",source:"@site/versioned_docs/version-4.1.0/code-snippet-tutorial/regions.mdx",sourceDirName:"code-snippet-tutorial",slug:"/code-snippet-tutorial/regions",permalink:"/carta-frontend/docs/code-snippet-tutorial/regions",draft:!1,unlisted:!1,tags:[],version:"4.1.0",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Image properties",permalink:"/carta-frontend/docs/code-snippet-tutorial/image-properties"},next:{title:"Moment images",permalink:"/carta-frontend/docs/code-snippet-tutorial/moment-images"}},c={},d=[{value:"Creating regions",id:"creating-regions",level:2},{value:"Changing region properties",id:"changing-region-properties",level:2},{value:"Importing regions",id:"importing-regions",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components},{ApiLink:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ApiLink",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"regions",children:"Regions"}),"\n",(0,t.jsx)(n.p,{children:"Actions related to regions. In the following examples, we assume that an image is loaded as"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'const file = await app.openFile("my_image.fits");\n'})}),"\n",(0,t.jsx)(n.h2,{id:"creating-regions",children:"Creating regions"}),"\n",(0,t.jsxs)(n.p,{children:["Regions on a specific image is accessible via ",(0,t.jsx)(i,{path:"/.-stores/class/RegionSetStore",children:(0,t.jsx)(n.code,{children:"RegionSetStore"})})," under each image. Each region is represented by a ",(0,t.jsx)(i,{path:"/.-stores/class/RegionStore",children:(0,t.jsx)(n.code,{children:"RegionStore"})})," object."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"console.log(file.regionSet.regions); // View all regions\nconsole.log(file.regionSet.selectedRegion); // View the selected region\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(i,{path:"/.-stores/class/RegionSetStore/#addRegionAsync",children:(0,t.jsx)(n.code,{children:"addRegionAsync"})})," creates regions on the loaded image with available ",(0,t.jsx)(n.a,{href:"https://carta-protobuf.readthedocs.io/en/latest/enums.html#regiontype",children:"region types"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const regionSet = file.regionSet;\nconst region = await regionSet.addRegionAsync(3, [{x: [center x], y: [center y]}, {x: [width], y: [height]}]); // Add a rectangle region\nconst region2 = await regionSet.addRegionAsync(1, [{x: [start x], y: [start y]}, {x: [end x], y: [end y]}]); // Add a line region\n"})}),"\n",(0,t.jsx)(n.h2,{id:"changing-region-properties",children:"Changing region properties"}),"\n",(0,t.jsxs)(n.p,{children:["Properties of a region can be modified using the ",(0,t.jsx)(i,{path:"/.-stores/class/RegionStore",children:(0,t.jsx)(n.code,{children:"RegionStore"})})," object."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'// ex: a rectangle region\nregion.setCenter({x: 0, y: 0}); // Move the region to position (0, 0)\nregion.setSize({x: 100, y: 100}); // Resize to 100 x 100 pixels\nregion.setColor("#ffffff"); // Change the color to white\n'})}),"\n",(0,t.jsx)(n.h2,{id:"importing-regions",children:"Importing regions"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(i,{path:"/.-stores/class/AppStore/#importRegion",children:(0,t.jsx)(n.code,{children:"importRegion"})})," imports regions to the active image with the provided path, filename, and ",(0,t.jsx)(n.a,{href:"https://carta-protobuf.readthedocs.io/en/latest/enums.html#filetype",children:"file type"})," enum."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'await app.importRegion("[path]", "[filename]", 1); // File type: CRTF\n'})})]})}function g(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>s});var t=i(7294);const o={},r=t.createContext(o);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);
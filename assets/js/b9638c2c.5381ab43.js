"use strict";(self.webpackChunkcarta_frontend_docs=self.webpackChunkcarta_frontend_docs||[]).push([[8413],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},g="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),g=l(n),m=o,u=g["".concat(p,".").concat(m)]||g[m]||d[m]||i;return n?r.createElement(u,a(a({ref:t},c),{},{components:n})):r.createElement(u,a({ref:t},c))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[g]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3534:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));n(9960);const i={sidebar_position:4},a="Regions",s={unversionedId:"code-snippet-tutorial/regions",id:"code-snippet-tutorial/regions",title:"Regions",description:"Actions related to regions. In the following examples, we assume that an image is loaded as",source:"@site/docs/code-snippet-tutorial/regions.mdx",sourceDirName:"code-snippet-tutorial",slug:"/code-snippet-tutorial/regions",permalink:"/carta-frontend/docs/next/code-snippet-tutorial/regions",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Image properties",permalink:"/carta-frontend/docs/next/code-snippet-tutorial/image-properties"},next:{title:"Moment images",permalink:"/carta-frontend/docs/next/code-snippet-tutorial/moment-images"}},p={},l=[{value:"Creating regions",id:"creating-regions",level:2},{value:"Changing region properties",id:"changing-region-properties",level:2},{value:"Importing regions",id:"importing-regions",level:2}],c=(g="ApiLink",function(e){return console.warn("Component "+g+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var g;const d={toc:l},m="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"regions"},"Regions"),(0,o.kt)("p",null,"Actions related to regions. In the following examples, we assume that an image is loaded as"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const file = await app.openFile("my_image.fits");\n')),(0,o.kt)("h2",{id:"creating-regions"},"Creating regions"),(0,o.kt)("p",null,"Regions on a specific image is accessible via ",(0,o.kt)(c,{path:"/.-stores/class/RegionSetStore",mdxType:"ApiLink"},(0,o.kt)("inlineCode",{parentName:"p"},"RegionSetStore"))," under each image. Each region is represented by a ",(0,o.kt)(c,{path:"/.-stores/class/RegionStore",mdxType:"ApiLink"},(0,o.kt)("inlineCode",{parentName:"p"},"RegionStore"))," object."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"console.log(file.regionSet.regions); // View all regions\nconsole.log(file.regionSet.selectedRegion); // View the selected region\n")),(0,o.kt)("p",null,"\u200b",(0,o.kt)(c,{path:"/.-stores/class/RegionSetStore/#addRegionAsync",mdxType:"ApiLink"},(0,o.kt)("inlineCode",{parentName:"p"},"addRegionAsync"))," creates regions on the loaded image with available ",(0,o.kt)("a",{parentName:"p",href:"https://carta-protobuf.readthedocs.io/en/latest/enums.html#regiontype"},"region types"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const regionSet = file.regionSet;\nconst region = await regionSet.addRegionAsync(3, [{x: [center x], y: [center y]}, {x: [width], y: [height]}]); // Add a rectangle region\nconst region2 = await regionSet.addRegionAsync(1, [{x: [start x], y: [start y]}, {x: [end x], y: [end y]}]); // Add a line region\n")),(0,o.kt)("h2",{id:"changing-region-properties"},"Changing region properties"),(0,o.kt)("p",null,"Properties of a region can be modified using the ",(0,o.kt)(c,{path:"/.-stores/class/RegionStore",mdxType:"ApiLink"},(0,o.kt)("inlineCode",{parentName:"p"},"RegionStore"))," object."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'// ex: a rectangle region\nregion.setCenter({x: 0, y: 0}); // Move the region to position (0, 0)\nregion.setSize({x: 100, y: 100}); // Resize to 100 x 100 pixels\nregion.setColor("#ffffff"); // Change the color to white\n')),(0,o.kt)("h2",{id:"importing-regions"},"Importing regions"),(0,o.kt)("p",null,"\u200b",(0,o.kt)(c,{path:"/.-stores/class/AppStore/#importRegion",mdxType:"ApiLink"},(0,o.kt)("inlineCode",{parentName:"p"},"importRegion"))," imports regions to the active image with the provided path, filename, and ",(0,o.kt)("a",{parentName:"p",href:"https://carta-protobuf.readthedocs.io/en/latest/enums.html#filetype"},"file type")," enum."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'await app.importRegion("[path]", "[filename]", 1); // File type: CRTF\n')))}u.isMDXComponent=!0}}]);
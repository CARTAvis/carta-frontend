"use strict";(self.webpackChunkcarta_frontend_docs=self.webpackChunkcarta_frontend_docs||[]).push([[8301],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>f});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var o=n.createContext({}),l=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},c=function(e){var t=l(e.components);return n.createElement(o.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(a),u=i,f=d["".concat(o,".").concat(u)]||d[u]||m[u]||r;return a?n.createElement(f,p(p({ref:t},c),{},{components:a})):n.createElement(f,p({ref:t},c))}));function f(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,p=new Array(r);p[0]=u;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[d]="string"==typeof e?e:i,p[1]=s;for(var l=2;l<r;l++)p[l]=a[l];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},291:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>p,default:()=>f,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var n=a(7462),i=(a(7294),a(3905));const r={sidebar_position:1},p="Quick start",s={unversionedId:"code-snippet-tutorial/quick-start",id:"version-4.0.0/code-snippet-tutorial/quick-start",title:"Quick start",description:"Enabling code snippets",source:"@site/versioned_docs/version-4.0.0/code-snippet-tutorial/quick-start.mdx",sourceDirName:"code-snippet-tutorial",slug:"/code-snippet-tutorial/quick-start",permalink:"/carta-frontend/docs/code-snippet-tutorial/quick-start",draft:!1,tags:[],version:"4.0.0",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Code snippet tutorial",permalink:"/carta-frontend/docs/category/code-snippet-tutorial"},next:{title:"Basics",permalink:"/carta-frontend/docs/code-snippet-tutorial/basics"}},o={},l=[{value:"Enabling code snippets",id:"enabling-code-snippets",level:2},{value:"Loading images",id:"loading-images",level:2},{value:"Closing images",id:"closing-images",level:2}],c=(d="ApiLink",function(e){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)});var d;const m={toc:l},u="wrapper";function f(e){let{components:t,...r}=e;return(0,i.kt)(u,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"quick-start"},"Quick start"),(0,i.kt)("h2",{id:"enabling-code-snippets"},"Enabling code snippets"),(0,i.kt)("p",null,"The code snippet feature can be enabled via the preferences dialog:"),(0,i.kt)("img",{src:a(3952).Z,alt:"Enable code snippets",width:"500"}),(0,i.kt)("p",null,'Once the code snippet feature is enabled, the "Snippets" option appears in the menu. This allows you to create and run code snippets, providing additional functionality to CARTA.'),(0,i.kt)("h2",{id:"loading-images"},"Loading images"),(0,i.kt)("p",null,"CARTA functions and objects can be accessed via the top-level ",(0,i.kt)(c,{path:"/.-stores/class/AppStore",mdxType:"ApiLink"},(0,i.kt)("inlineCode",{parentName:"p"},"app"))," object (or the ",(0,i.kt)(c,{path:"/.-stores/class/AppStore",mdxType:"ApiLink"},(0,i.kt)("inlineCode",{parentName:"p"},"carta"))," alias). In the following example, we display the welcome splash screen for 1000 ms and then close it."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"carta.showSplashScreen();\nawait carta.delay(1000);\napp.hideSplashScreen();\n")),(0,i.kt)("p",null,"Images loaded in the frontend are referred as and registered in the ",(0,i.kt)(c,{path:"/.-stores/class/AppStore/#frames",mdxType:"ApiLink"},(0,i.kt)("inlineCode",{parentName:"p"},"frames"))," array which contains each frame (i.e., image) as a ",(0,i.kt)(c,{path:"/.-stores/class/FrameStore",mdxType:"ApiLink"},(0,i.kt)("inlineCode",{parentName:"p"},"FrameStore"))," object. The currently active frame is accessible with ",(0,i.kt)(c,{path:"/.-stores/class/AppStore/#activeFrame",mdxType:"ApiLink"},(0,i.kt)("inlineCode",{parentName:"p"},"activeFrame")),". In the following example, we firstly list the frames array, then list the 0th frame, and finally list the current active frame in the console."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"console.log(app.frames);\nconsole.log(app.frames[0]);\nconsole.log(app.activeFrame);\n")),(0,i.kt)("p",null,"\u200b",(0,i.kt)(c,{path:"/.-stores/class/AppStore/#openFile",mdxType:"ApiLink"},(0,i.kt)("inlineCode",{parentName:"p"},"openFile")),' takes up to three arguments: directory, filename and HDU. If no HDU is provided, the first HDU ("0") is adopted. The directory and filename can also be combined into a single argument. ',(0,i.kt)(c,{path:"/.-stores/class/AppStore/#openFile",mdxType:"ApiLink"},(0,i.kt)("inlineCode",{parentName:"p"},"openFile"))," must be called with ",(0,i.kt)("inlineCode",{parentName:"p"},"await"),", as it is an asynchronous function that requires communicating with the backend. In the following example, in the end we will see that only the last image is loaded as each ",(0,i.kt)(c,{path:"/.-stores/class/AppStore/#openFile",mdxType:"ApiLink"},(0,i.kt)("inlineCode",{parentName:"p"},"openFile"))," will close all loaded image first before loading the target image."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'await app.openFile("test_directory", "testfile.fits", "0");\nawait app.openFile("test_directory", "testfile.fits");\nawait app.openFile("test_directory/testfile.fits");\n')),(0,i.kt)("p",null,"Additional images can be appended using ",(0,i.kt)(c,{path:"/.-stores/class/AppStore/#appendFile",mdxType:"ApiLink"},(0,i.kt)("inlineCode",{parentName:"p"},"appendFile")),". The arguments are the same as ",(0,i.kt)(c,{path:"/.-stores/class/AppStore/#openFile",mdxType:"ApiLink"},(0,i.kt)("inlineCode",{parentName:"p"},"openFile")),". In the following example, in the end there will be three images loaded."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'const file1 = await app.openFile("testfile1.fits");\nconst file2 = await app.appendFile("testfile2.fits");\nconst file3 = await app.appendFile("testfile3.fits");\n')),(0,i.kt)("p",null,"The active image can be changed with ",(0,i.kt)(c,{path:"/.-stores/class/AppStore/#setActiveFrame",mdxType:"ApiLink"},(0,i.kt)("inlineCode",{parentName:"p"},"setActiveFrame")),", as well as the wrapper functions ",(0,i.kt)(c,{path:"/.-stores/class/AppStore/#setActiveFrameById",mdxType:"ApiLink"},(0,i.kt)("inlineCode",{parentName:"p"},"setActiveFrameById"))," and ",(0,i.kt)(c,{path:"/.-stores/class/AppStore/#setActiveFrameByIndex",mdxType:"ApiLink"},(0,i.kt)("inlineCode",{parentName:"p"},"setActiveFrameByIndex")),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"app.setActiveFrameByIndex(0);\napp.setActiveFrameById(file2.frameInfo.fileId);\napp.setActiveFrame(file3);\n")),(0,i.kt)("h2",{id:"closing-images"},"Closing images"),(0,i.kt)("p",null,"\u200b",(0,i.kt)(c,{path:"/.-stores/class/AppStore/#closeCurrentFile",mdxType:"ApiLink"},(0,i.kt)("inlineCode",{parentName:"p"},"closeCurrentFile"))," closes the active image. There will be no user confirmation if the active image serves as the spatial reference image and there are other images matched to it."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"app.closeCurrentFile();\n")),(0,i.kt)("p",null,"\u200b",(0,i.kt)(c,{path:"/.-stores/class/AppStore/#closeFile",mdxType:"ApiLink"},(0,i.kt)("inlineCode",{parentName:"p"},"closeFile"))," takes an optional boolean argument to control whether user confirmation is required if other images are matched to the given file. This defaults to true. ",(0,i.kt)("inlineCode",{parentName:"p"},"await")," is required to delay execution until the user confirms."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"await app.closeFile(file1);\napp.closeFile(file1, false); // No user confirmation\n")),(0,i.kt)("p",null,"\u200b",(0,i.kt)(c,{path:"/.-stores/class/AppStore/#closeOtherFiles",mdxType:"ApiLink"},(0,i.kt)("inlineCode",{parentName:"p"},"closeOtherFiles"))," closes all images other than the given file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"app.closeOtherFiles(file2);\n")),(0,i.kt)("p",null,"For all functions and objects availble in the ",(0,i.kt)(c,{path:"/.-stores/class/AppStore",mdxType:"ApiLink"},(0,i.kt)("inlineCode",{parentName:"p"},"app"))," object, please refer to the ",(0,i.kt)(c,{path:"/.-stores/class/AppStore",mdxType:"ApiLink"},"API documentation"),"."))}f.isMDXComponent=!0},3952:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/enable-code-snippets-99ec31276237f43c9b4df4ed9a34e54a.png"}}]);
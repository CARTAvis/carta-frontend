"use strict";(self.webpackChunkcarta_frontend_docs=self.webpackChunkcarta_frontend_docs||[]).push([[6670],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=i.createContext({}),s=function(e){var t=i.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return i.createElement(d.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=r,h=c["".concat(d,".").concat(m)]||c[m]||u[m]||o;return n?i.createElement(h,a(a({ref:t},p),{},{components:n})):i.createElement(h,a({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[c]="string"==typeof e?e:r,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7325:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var i=n(7462),r=(n(7294),n(3905));const o={sidebar_position:4},a="Documentation guidelines",l={unversionedId:"contributing/documentation-guidelines",id:"contributing/documentation-guidelines",title:"Documentation guidelines",description:"Guidelines for building and writing this website.",source:"@site/docs/contributing/documentation-guidelines.md",sourceDirName:"contributing",slug:"/contributing/documentation-guidelines",permalink:"/carta-frontend/docs/next/contributing/documentation-guidelines",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Unit test guidelines",permalink:"/carta-frontend/docs/next/contributing/unit-test-guidelines"}},d={},s=[{value:"Building documentaiton",id:"building-documentaiton",level:2},{value:"Writing documentation pages",id:"writing-documentation-pages",level:2},{value:"Formatting",id:"formatting",level:3},{value:"Writing API documentation",id:"writing-api-documentation",level:2},{value:"Formatting",id:"formatting-1",level:3},{value:"Versioning",id:"versioning",level:2}],p={toc:s},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"documentation-guidelines"},"Documentation guidelines"),(0,r.kt)("p",null,"Guidelines for building and writing this website."),(0,r.kt)("h2",{id:"building-documentaiton"},"Building documentaiton"),(0,r.kt)("p",null,"The website is hosted on Github Pages, and whenever the ",(0,r.kt)("inlineCode",{parentName:"p"},"dev")," branch is updated, the website is automatically updated using Github Actions."),(0,r.kt)("p",null,"To build and test the website locally, navigate to the ",(0,r.kt)("inlineCode",{parentName:"p"},"docs_website/")," directory and install package dependencies:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cd docs_website\nnpm install\n")),(0,r.kt)("p",null,"and run the development server:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npm start\n")),(0,r.kt)("p",null,"If you make changes to the files in the ",(0,r.kt)("inlineCode",{parentName:"p"},"docs/")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"api/")," folders, the site will automatically reload and display the changes."),(0,r.kt)("p",null,"To create a local production build:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npm run build\n")),(0,r.kt)("p",null,"To test the local production build:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npm run serve\n")),(0,r.kt)("p",null,"Please note that the search feature is only available in production builds."),(0,r.kt)("h2",{id:"writing-documentation-pages"},"Writing documentation pages"),(0,r.kt)("p",null,'The "Docs" pages and the "API/Overview" page are generated from markdown files in the ',(0,r.kt)("inlineCode",{parentName:"p"},"docs/")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"api/")," directories. Simply edit these directories to modify the content or add new pages."),(0,r.kt)("p",null,'For links to the "Docs" index pages and "API" subpages, it is required to use the ',(0,r.kt)("inlineCode",{parentName:"p"},"DocsIndexLink")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"ApiLink")," MDX components to ensure the corresponding version is linked. If the file contains MDX components, it is recommended to use the ",(0,r.kt)("inlineCode",{parentName:"p"},".mdx")," extension."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"There is a ",(0,r.kt)("a",{parentName:"p",href:"https://docusaurus.io/docs/markdown-features/react#markdown-and-jsx-interoperability"},"known issue")," when the MDX component is placed at the start of the paragraph, the Markdown syntax parsing fails. As a workaround, zero-width spaces ",(0,r.kt)("inlineCode",{parentName:"p"},"&#8203;")," are placed at the start of the paragraph in such cases.")),(0,r.kt)("h3",{id:"formatting"},"Formatting"),(0,r.kt)("p",null,"To check the format of the changes, run (from the ",(0,r.kt)("inlineCode",{parentName:"p"},"docs_website/")," folder):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npm run checkformat\n")),(0,r.kt)("p",null,"To automatically fix the format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npm run reformat\n")),(0,r.kt)("p",null,"This maintains consistent markdown styling, including indentation, maximum line length, and list numbering. Please refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://prettier.io/blog/2017/11/07/1.8.0.html#markdown-support"},"Prettier documentation")," for more information."),(0,r.kt)("h2",{id:"writing-api-documentation"},"Writing API documentation"),(0,r.kt)("p",null,'The "API" subpages are generated from TSDoc documentation in the codebase. Catalogs are created based on the ',(0,r.kt)("inlineCode",{parentName:"p"},"index.ts")," files, and elements need to be exported in the respective ",(0,r.kt)("inlineCode",{parentName:"p"},"index.ts")," file to appear on the catalog subpages. Private and projected elements are not displayed."),(0,r.kt)("p",null,"Please note that the development server does not automatically re-parse TSDoc. Therefore, if you modify TSDoc in the codebase, you will need to rebuild it to display the changes."),(0,r.kt)("h3",{id:"formatting-1"},"Formatting"),(0,r.kt)("p",null,"For TSDoc format, please refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://tsdoc.org"},"TSDoc documentation"),". ESLint is applied to check for the required format. To run the lint checks (from the repository root):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npm run check-eslint\n")),(0,r.kt)("h2",{id:"versioning"},"Versioning"),(0,r.kt)("p",null,"To tag a new version, run (from the ",(0,r.kt)("inlineCode",{parentName:"p"},"docs_website/")," folder):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npm run docusaurus docs:version 1.2.3\nnpm run docusaurus api:version 1.2.3\n")),(0,r.kt)("p",null,"This will append the new version to ",(0,r.kt)("inlineCode",{parentName:"p"},"versions.json")," and create files in the ",(0,r.kt)("inlineCode",{parentName:"p"},"versioned_docs/")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"versioned_sidebars/")," folders. To modify the content or add new pages for a specific version, edit the files in these folders."))}u.isMDXComponent=!0}}]);
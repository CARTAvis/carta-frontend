"use strict";(self.webpackChunkcarta_frontend_docs=self.webpackChunkcarta_frontend_docs||[]).push([[6054],{2651:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>a});var t=i(5893),o=i(1151);const s={sidebar_position:4},d="Documentation guidelines",r={id:"contributing/documentation-guidelines",title:"Documentation guidelines",description:"Guidelines for building and writing this website.",source:"@site/versioned_docs/version-4.0.0/contributing/documentation-guidelines.md",sourceDirName:"contributing",slug:"/contributing/documentation-guidelines",permalink:"/carta-frontend/docs/contributing/documentation-guidelines",draft:!1,unlisted:!1,tags:[],version:"4.0.0",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Unit test guidelines",permalink:"/carta-frontend/docs/contributing/unit-test-guidelines"}},c={},a=[{value:"Building documentation",id:"building-documentation",level:2},{value:"Writing documentation pages",id:"writing-documentation-pages",level:2},{value:"Formatting",id:"formatting",level:3},{value:"Writing API documentation",id:"writing-api-documentation",level:2},{value:"Formatting",id:"formatting-1",level:3},{value:"Versioning",id:"versioning",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"documentation-guidelines",children:"Documentation guidelines"}),"\n",(0,t.jsx)(n.p,{children:"Guidelines for building and writing this website."}),"\n",(0,t.jsx)(n.h2,{id:"building-documentation",children:"Building documentation"}),"\n",(0,t.jsxs)(n.p,{children:["The website is hosted on Github Pages, and whenever the ",(0,t.jsx)(n.code,{children:"dev"})," branch is updated, the website is automatically updated using Github Actions."]}),"\n",(0,t.jsxs)(n.p,{children:["To build and test the website locally, navigate to the ",(0,t.jsx)(n.code,{children:"docs_website/"})," directory and install package dependencies:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"cd docs_website\nnpm install\n"})}),"\n",(0,t.jsx)(n.p,{children:"and run the development server:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"npm start\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If you make changes to the files in the ",(0,t.jsx)(n.code,{children:"docs/"})," and ",(0,t.jsx)(n.code,{children:"api/"})," folders, the site will automatically reload and display the changes."]}),"\n",(0,t.jsx)(n.p,{children:"To create a local production build:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"npm run build\n"})}),"\n",(0,t.jsx)(n.p,{children:"To test the local production build:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"npm run serve\n"})}),"\n",(0,t.jsx)(n.p,{children:"Please note that the search feature is only available in production builds."}),"\n",(0,t.jsx)(n.h2,{id:"writing-documentation-pages",children:"Writing documentation pages"}),"\n",(0,t.jsxs)(n.p,{children:['The "Docs" pages and the "API/Overview" page are generated from markdown files in the ',(0,t.jsx)(n.code,{children:"docs/"})," and ",(0,t.jsx)(n.code,{children:"api/"})," directories. Simply edit these directories to modify the content or add new pages."]}),"\n",(0,t.jsxs)(n.p,{children:['For links to the "Docs" index pages and "API" subpages, it is required to use the ',(0,t.jsx)(n.code,{children:"DocsIndexLink"})," and ",(0,t.jsx)(n.code,{children:"ApiLink"})," MDX components to ensure the corresponding version is linked. If the file contains MDX components, it is recommended to use the ",(0,t.jsx)(n.code,{children:".mdx"})," extension."]}),"\n",(0,t.jsx)(n.h3,{id:"formatting",children:"Formatting"}),"\n",(0,t.jsxs)(n.p,{children:["To check the format of the changes, run (from the ",(0,t.jsx)(n.code,{children:"docs_website/"})," folder):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"npm run checkformat\n"})}),"\n",(0,t.jsx)(n.p,{children:"To automatically fix the format:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"npm run reformat\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This maintains consistent markdown styling, including indentation, maximum line length, and list numbering. Please refer to the ",(0,t.jsx)(n.a,{href:"https://prettier.io/blog/2017/11/07/1.8.0.html#markdown-support",children:"Prettier documentation"})," for more information."]}),"\n",(0,t.jsx)(n.h2,{id:"writing-api-documentation",children:"Writing API documentation"}),"\n",(0,t.jsxs)(n.p,{children:['The "API" subpages are generated from TSDoc documentation in the codebase. Catalogs are created based on the ',(0,t.jsx)(n.code,{children:"index.ts"})," files, and elements need to be exported in the respective ",(0,t.jsx)(n.code,{children:"index.ts"})," file to appear on the catalog subpages. Private and projected elements are not displayed."]}),"\n",(0,t.jsx)(n.p,{children:"Please note that the development server does not automatically re-parse TSDoc. Therefore, if you modify TSDoc in the codebase, you will need to rebuild it to display the changes."}),"\n",(0,t.jsx)(n.h3,{id:"formatting-1",children:"Formatting"}),"\n",(0,t.jsxs)(n.p,{children:["For TSDoc format, please refer to the ",(0,t.jsx)(n.a,{href:"https://tsdoc.org",children:"TSDoc documentation"}),". ESLint is applied to check for the required format. To run the lint checks (from the repository root):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"npm run check-eslint\n"})}),"\n",(0,t.jsx)(n.h2,{id:"versioning",children:"Versioning"}),"\n",(0,t.jsxs)(n.p,{children:["To tag a new version, run (from the ",(0,t.jsx)(n.code,{children:"docs_website/"})," folder):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"npm run docusaurus docs:version 1.2.3\nnpm run docusaurus api:version 1.2.3\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This will append the new version to ",(0,t.jsx)(n.code,{children:"versions.json"})," and create files in the ",(0,t.jsx)(n.code,{children:"versioned_docs/"})," and ",(0,t.jsx)(n.code,{children:"versioned_sidebars/"})," folders. To modify the content or add new pages for a specific version, edit the files in these folders."]})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>r,a:()=>d});var t=i(7294);const o={},s=t.createContext(o);function d(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);